@prefix ns1: <http://d3fend.mitre.org/ontologies/d3fend.owl#> .
@prefix ns2: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ns1:AccessControlList a owl:Class ;
    rdfs:label "Access Control List" ;
    ns1:definition "A list of permissions attached to an object." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Access-control_list> ;
    rdfs:subClassOf ns1:AccessControlConfiguration .

ns1:AccessModeling a ns1:OperationalActivityMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Modeling" ;
    ns1:d3fend-id "D3-AM" ;
    ns1:definition "Access modeling identifies and records the access permissions granted to administrators, users, groups, and systems." ;
    ns1:kb-reference ns1:Reference-RFC7642SystemForCrossDomainIdentityManagementDefinitionsOverviewConceptsAndRequirements ;
    ns1:maps ns1:AccessControlConfiguration,
        ns1:UserAccount ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:AccountLocking a ns1:CredentialEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Account Locking" ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-AL" ;
    ns1:definition "The process of temporarily disabling user accounts on a system or domain." ;
    ns1:disables ns1:UserAccount ;
    ns1:kb-article """## How it works
Management servers with enterprise policies for account management provide the ability to enable and disable account for given rules. The rules may include specific periods of time (eg. weekend, plant shutdown, leave periods), specific user types or groups, or individual users.

## Considerations
* Local accounts caches vs centralized account management
* Single Sign-on
* Role based vs Attribute based systems

## Examples of account configuration stores
* Directory Services
* Active Directory
* RADIUS
* LDAP
* Oracle User Account Management
* JumpCloud""" ;
    ns1:kb-reference ns1:Reference-AccountMonitoring_ForescoutTechnologies,
        ns1:Reference-FrameworkForNotifyingADirectoryServiceOfAuthenticationEventsProcessedOutsideTheDirectoryService_OracleInternationalCorp ;
    rdfs:subClassOf [ ],
        ns1:CredentialEviction .

ns1:ActiveLogicalLinkMapping a ns1:LogicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Active Logical Link Mapping" ;
    ns1:d3fend-id "D3-ALLM" ;
    ns1:definition "Active logical link mapping sends and receives network traffic as a means to map the whole data link layer, where the links represent logical data flows rather than physical connection" ;
    ns1:kb-article """## How it works

Active logical link mapping establishes awareness of logical links in the network by sending data over the network to gather information about logical connections in the network.

Typically this will be achieved through network telemetry coordinated for network management and monitoring and will use a link layer discovery protocol such as LLDP and the information gathered and aggregated a higher levels using an application protocol such as SNMP.  The information may be polled by network management softare or configured once and then pushed from network sensors (or agents.)

Another means of establishing network connectivity is by means of sendingn traffic through the use of a tool such as traceroute, to determine the logical paths through the network architecture.

## Considerations

* Best practice is to encrypte network monitoring data and require authentication for queries or admin/management functions.
* Push notifications reduce bandwidth necessary to capture and maintain information if reliable transport is used.
* Special consideration should be made before using of active scanning in OT networks and OT-safe options chosen where available.""" ;
    ns1:kb-reference ns1:Reference-IdentificationOfTracerouteNodesAndAssociatedDevices,
        ns1:Reference-SNMPNetworkAutoDiscovery ;
    ns1:may-query ns1:CollectorAgent ;
    rdfs:subClassOf [ ],
        ns1:LogicalLinkMapping .

ns1:ActivePhysicalLinkMapping a ns1:PhysicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Active Physical Link Mapping" ;
    ns1:d3fend-id "D3-APLM" ;
    ns1:definition "Active physical link mapping sends and receives network traffic as a means to map the physical layer." ;
    ns1:kb-reference ns1:Reference-IdentificationOfTracerouteNodesAndAssociatedDevices,
        ns1:Reference-UsingSpanningTreeProtocolSTPToEnhanceLayer2NetworkTopologyMaps ;
    ns1:may-query ns1:CollectorAgent ;
    ns1:synonym "Active Physical Layer Mapping" ;
    rdfs:subClassOf [ ],
        ns1:PhysicalLinkMapping ;
    owl:disjointWith ns1:PassivePhysicalLinkMapping .

ns1:ActivityDependency a owl:Class ;
    rdfs:label "Activity Dependency" ;
    ns1:definition "An activity dependency is a dependency that indicates an activity has an activity or agent which relies on it in order to be functional." ;
    rdfs:subClassOf ns1:Dependency .

ns1:AdministrativeNetworkActivityAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Administrative Network Activity Analysis" ;
    ns1:analyzes ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-ANAA" ;
    ns1:definition "Detection of unauthorized use of administrative network protocols by analyzing network activity against a baseline." ;
    ns1:kb-article """## How it works
Network protocols such as RDP, IPMI, SSH, SNMP, VNC, MOSH, NX, TeamViewer, SPICE, PCoIP, and others are used by system administrators to remotely manage servers. Defenders monitor administrative network activity to determine if the use of remote protocols is malicious. Attackers can abuse administrative protocols and leverage them for initial access to various endpoints. For example, an attacker with valid credentials will remotely SSH or RDP into a server and attempt to blend in with existing traffic from system administrators. By monitoring the traffic activity, it is possible to detect when the protocols are behaving differently from a known baseline of system administration activity.

## Considerations
* Administrative traffic can be encrypted, making network protocol analysis a challenge
* False alarms can be mitigated by integration with inventory management systems""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingSuspiciousAdministrativeActivity_VectraNetworksInc,
        ns1:Reference-RemoteRegistry_MITRE,
        ns1:Reference-WindowsRemoteManagement_WinRM_MITRE ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:Alias a owl:Class ;
    rdfs:label "Alias" ;
    ns1:definition "In macOS, an alias is a small file that represents another object in a local, remote, or removable[1] file system and provides a dynamic link to it; the target object may be moved or renamed, and the alias will still link to it (unless the original file is recreated; such an alias is ambiguous and how it is resolved depends on the version of macOS)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Alias_(Mac_OS)> ;
    rdfs:subClassOf ns1:SlowSymbolicLink .

ns1:ApplicationConfigurationHardening a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration Hardening" ;
    ns1:d3fend-id "D3-ACH" ;
    ns1:definition "Modifying an application's configuration to reduce its attack surface." ;
    ns1:hardens ns1:ApplicationConfiguration ;
    ns1:kb-article """## How it works
Application configuration settings can be configured to limit the permissions on an application or disable certain vulnerable application features.

Hardening an application's configuration involves analyzing not only the application but also the environment in which the application is run in for potential vulnerabilities.""" ;
    ns1:kb-reference ns1:Reference-RedHatEnterpriseLinux8SecurityTechnicalImplementationGuide,
        ns1:Reference-Windows10STIG ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:ApplicationInstaller a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Installer" ;
    rdfs:subClassOf ns1:UserApplication .

ns1:ApplicationInventorySensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Inventory Sensor" ;
    ns1:definition "Collects information on applications on an endpoint." ;
    ns1:monitors ns1:Application ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:ApplicationLayerLink a owl:Class ;
    rdfs:label "Application Layer Link" ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:ApplicationProcessConfiguration a owl:Class ;
    rdfs:label "Application Process Configuration" ;
    ns1:definition "The current configuration of an application process, stored in memory. It may have been sourced from other types of application configurations, e.g. Application Configuration Files or Application Configuration Database Records." ;
    rdfs:subClassOf ns1:ApplicationConfiguration .

ns1:ApplicationShim a owl:Class ;
    rdfs:label "Application Shim" ;
    ns1:definition "An application shim adapts an application program to run on a version of a platform for which they were not originally created. Most commonly \"Application Shimming\" refers to use of The Windows Application Compatibility Toolkit (ACT) provides backward compatibility by simulating the behavior of older version of Windows." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Shim_(computing)#Examples>,
        "d3f:Shim" ;
    rdfs:subClassOf ns1:Shim .

ns1:AssetVulnerabilityEnumeration a ns1:AssetInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asset Vulnerability Enumeration" ;
    ns1:d3fend-id "D3-AVE" ;
    ns1:definition "Asset vulnerability enumeration enriches inventory items with knowledge identifying their vulnerabilities." ;
    ns1:evaluates ns1:DigitalArtifact ;
    ns1:identifies ns1:Vulnerability ;
    ns1:kb-reference ns1:Reference-AutomatedComputerVulnerabilityResolutionSystem,
        ns1:Reference-SecurityVulnerabilityInformationAggregation,
        ns1:Reference-SystemAndMethodForVulnerabilityRiskAssessment ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:AssetInventory .

ns1:AuthenticateUser a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authenticate User" ;
    ns1:authenticates ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:AuthenticationCacheInvalidation a ns1:CredentialEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Cache Invalidation" ;
    ns1:d3fend-id "D3-ANCI" ;
    ns1:definition "Removing tokens or credentials from an authentication cache to prevent further user associated account accesses." ;
    ns1:deletes ns1:Credential ;
    ns1:kb-article """## How it works
Applications can locally cache user authentication credentials for certain server connections. An application may attempt to use the cached credential for a connection. If the cached credentials exist then the user will not be typically prompted for new credentials.


## Considerations
Are these cached credentials only on the local host? Can they be persisted to the remote server?

## Examples
Windows Credential Management API""" ;
    ns1:kb-reference ns1:Reference-SecureCachingOfServerCredentials_DellProductsLP,
        ns1:Reference-SystemAndMethodForProvidingAnActivelyInvalidatedClient-sideNetworkResourceCache_IMVU ;
    rdfs:subClassOf [ ],
        ns1:CredentialEviction .

ns1:AuthenticationEventThresholding a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Event Thresholding" ;
    ns1:analyzes ns1:Authentication ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-ANET" ;
    ns1:definition "Collecting authentication events, creating a baseline user profile, and determining whether authentication events are consistent with the baseline profile." ;
    ns1:kb-article """## How it works
Authentication event data is collected (logon information such as device id, time of day, day of week, geo-location, etc.) to create an activity baseline. Then, a threshold is determined either through a manually specified configuration, or a statistical analysis of deviations in historical data. New authentication events are evaluated to determine if a threshold is exceeded. Thresholds can be static or dynamic.

### Actions
As a result of the analysis, actions taken could include:

* [Account Locking](/technique/d3f:AccountLocking)
* Raising an alert

### Example data sources
 * Directory server logs
 * VPN Server logs
 * IDAM Capability logs
 * NAC logs
 * Authentication client logs
 * Kerberos network traffic
 * LDAP network traffic

## Considerations

This technique covers statistical outliers. Though depending on the complexity or dimensionality of the data considered, outliers may not be obvious to a human analyst reviewing events in simplistic analytic views. If the malicious activity is not statistically different from benign activity, an alert threshold will not be met.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        ns1:Reference-SimultaneousLoginsOnAHost_MITRE,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc>,
        ns1:Reference-UserLoggedInToMultipleHosts_MITRE,
        ns1:Reference-UserLoginActivityMonitoring_MITRE ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:AuthenticationFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Function" ;
    ns1:authenticates ns1:UserAccount ;
    ns1:definition "Authenticates a user account by verifying a presented credential." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:AuthenticationServer a owl:Class ;
    rdfs:label "Authentication Server" ;
    ns1:definition "An authentication server provides a network service that applications use to authenticate the credentials, usually account names and passwords, of their users. When a client submits a valid set of credentials, it receives a cryptographic ticket that it can subsequently use to access various services. Major authentication algorithms include passwords, Kerberos, and public key encryption." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Authentication_server> ;
    rdfs:subClassOf ns1:Server .

ns1:AuthorizationEventThresholding a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authorization Event Thresholding" ;
    ns1:analyzes ns1:Authorization ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-AZET" ;
    ns1:definition "Collecting authorization events, creating a baseline user profile, and determining whether authorization events are consistent with the baseline profile." ;
    ns1:kb-article """## How it works

Authorization event data is collected to create a baseline user profile. Authorization events that deviate from the baseline and exceed a static or dynamic threshold are identified for further action. Authorization events can include successful and failed authorization attempts as well as events related to permissions including viewing, editing, deleting, creating files, databases etc.

## Considerations

Depending on the complexity of the data considered, outliers may not be obvious to a human analyst reviewing events in simplistic analytic views. If malicious activity is not statistically different from benign activity, an alert threshold will not be met.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        ns1:Reference-SMBSessionSetups_MITRE,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc>,
        ns1:Reference-UserLoggedInToMultipleHosts_MITRE ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:AuthorizationLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authorization Log" ;
    ns1:definition "A log of authorization events." ;
    ns1:records ns1:NetworkResourceAccess ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authorization>,
        <http://wordnet-rdf.princeton.edu/id/00155053-n> ;
    rdfs:subClassOf [ ],
        ns1:Log .

ns1:BarcodeScannerInputDevice a owl:Class ;
    rdfs:label "Barcode Scanner Input Device" ;
    ns1:definition "A barcode reader (or barcode scanner) is an optical scanner that can read printed barcodes, decode the data contained in the barcode and send the data to a computer. Like a flatbed scanner, it consists of a light source, a lens and a light sensor translating for optical impulses into electrical signals. Additionally, nearly all barcode readers contain decoder circuitry that can analyze the barcode's image data provided by the sensor and sending the barcode's content to the scanner's output port." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Barcode_reader> ;
    rdfs:subClassOf ns1:ImageScannerInputDevice ;
    ns2:altLabel "Barcode Reader" .

ns1:Blob a owl:Class ;
    rdfs:label "Blob" ;
    ns1:definition "A binary large object (BLOB) is a collection of binary data stored as a single entity. Blobs are typically images, audio or other multimedia objects, though sometimes binary executable code is stored as a blob. They can exist as persistent values inside some databases, or exist at runtime as program variables in some languages. The term is used in NoSQL databases, especially in key-value store databases such as Redis. The term is also used by languages that allow runtime manipulation of Blobs, like JavaScript. (en)" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Binary_large_object> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:BootloaderAuthentication a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bootloader Authentication" ;
    ns1:authenticates ns1:BootLoader ;
    ns1:d3fend-id "D3-BA" ;
    ns1:definition "Cryptographically authenticating the bootloader software before system boot." ;
    ns1:kb-reference ns1:Reference-UEFIPlatformInitialization-Specification ;
    ns1:synonym "Secure Boot" ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:BroadcastDomainIsolation a ns1:NetworkIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Broadcast Domain Isolation" ;
    ns1:d3fend-id "D3-BDI" ;
    ns1:definition "Broadcast isolation restricts the number of computers a host can contact on their LAN." ;
    ns1:filters ns1:LocalAreaNetworkTraffic ;
    ns1:kb-article """## How it works
Software Defined Networking, or other network encapsulation technologies intercept host broadcast traffic then route it to a specified destination per a configured policy.

This can be implemented within hypervisors, networking hardware (WAPs, switches, routers), or virutal hardware.

## Considerations
This technique is highly dependent on network infrastructure and networking requirements.""" ;
    ns1:kb-reference ns1:Reference-BroadcastIsolationAndLevel3NetworkSwitch_HewlettPackardEnterpriseDevelopmentLP,
        ns1:Reference-PrivateVirtualLocalAreaNetworkIsolation_CiscoTechnologyInc ;
    ns1:synonym "Network Segmentation" ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:BusinessCommunicationPlatformClient a owl:Class ;
    rdfs:label "Business Communication Platform Client" ;
    ns1:definition "Client software to enable the process of sharing information between employees within and outside a company.  Business communication encompasses topics such as marketing, brand management, customer relations, consumer behavior, advertising, public relations, corporate communication, community engagement, reputation management, interpersonal communication, employee engagement, and event management. It is closely related to the fields of professional communication and technical communication." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Business_communication> ;
    rdfs:subClassOf ns1:CollaborativeSoftware .

ns1:ByteSequenceEmulation a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Byte Sequence Emulation" ;
    ns1:d3fend-id "D3-BSE" ;
    ns1:definition "Analyzing sequences of bytes and determining if they likely represent malicious shellcode." ;
    ns1:kb-article """## How it works

Bytes are analyzed as if they are machine code instructions, and such instructions that are a common component of known shellcode are noted, such as stack pivots, reads from a Memory Address Table, and system calls for functions that disable protections or execute code.  For example, the x86 instruction `b0 0b: mov $11, %ax`, with no further alterations to the `%ax` register, followed by `cd 80: syscall` executes the system call `execve()` in the Linux kernel, which replaces the current process with another one specified -- this is a common action in shellcode, so this sequence would be flagged.

This technique detects shellcode despite whether or not it would cause a buffer overflow in the target binary.

If the sequence of bytes contains a sequence similar to that used in malicious shellcode, the entire byte sequence is flagged and a follow-on technique may be invoked.

## Considerations

### False Negatives
If the shellcode instructions are far apart, simple implementations might not detect the shellcode.

Due to the nature of assembly instructions not having a defined start or end, implementations which do not process all start sequences (for example, when they a find byte sequence of interest, continue scanning forwards from the end of it) might not detect the shellcode.

This technique might not detect more complex or obfuscated instructions.  For that purpose, Dynamic Analysis or Emulated File Analysis could assist by analyzing the actual instruction function.

This technique may not detect self-modifying code.  To make it harder for a process to modify itself, Process Segment Execution Prevention should be used, while noting its considerations.

This technique might not detect malicious shellcode which reuses instructions in the target binary for malicious effect, as memory references in the presumed assembly code are not dereferenced.  Dynamic Analysis and Emulated File Analysis, when set up properly to fork from the running target binary, might detect this.  Process Segment Execution Prevention combined with Segment Address Offset Randomization frequently makes introduction of shellcode through overwriting a saved return pointer more difficult.  Call stack depth analysis might detect excessive reuse of instructions in the target binary.  Shadow Stack Frames might detect that a stack frame's return address has changed and Stack Frame Canary Verification might detect that the stack frame's return address was overwritten.  Other heuristic methods might detect jump-oriented programming shellcode.

With inserting code directly, that it is not a buffer overflow, and just some place where code is executed either to a file or a write-what-where, the buffer overflow mitigations do not help.  Behavioral analysis could detect this, or proper access control could mitigate this.

### False Positives

Byte sequences containing code that is never used as machine code are still analyzed and flagged for anomalies, and [eventually](http://mathforum.org/library/drmath/view/55871.html), it is likely that an attack sequence will arise from the sheer volume of bytes transmitted.""" ;
    ns1:kb-reference ns1:Reference-Network-BasedBufferOverflowDetectionByExploitCodeAnalysis_InformationSecurityResearchCentre,
        ns1:Reference-Network-levelPolymorphicShellcodeDetectionUsingEmulation ;
    ns1:synonym "Shellcode Transmission Detection" ;
    rdfs:subClassOf ns1:NetworkTrafficAnalysis .

ns1:CACertificateFile a owl:Class ;
    rdfs:label "CA Certificate File" ;
    ns1:definition "A file containing a digital certificate issued by a certificate authority (CA).  Certificate authorities store, issue, and sign digital certificates used as part of the public key infrastructure." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Certificate_authority>,
        <http://dbpedia.org/resource/Public_key_infrastructure> ;
    rdfs:subClassOf ns1:CertificateFile .

ns1:Certificate-basedAuthentication a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate-based Authentication" ;
    ns1:d3fend-id "D3-CBAN" ;
    ns1:definition "Requiring a digital certificate in order to authenticate a user." ;
    ns1:kb-reference ns1:Reference-TokenlessBiometricTransactionAuthorizationMethodAndSystem ;
    rdfs:subClassOf ns1:CredentialHardening .

ns1:CertificatePinning a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate Pinning" ;
    ns1:authenticates ns1:PublicKey ;
    ns1:d3fend-id "D3-CP" ;
    ns1:definition "Persisting either a server's X509 certificate or their public key and comparing that to server's presented identity to allow for greater client confidence in the remote server's identity for SSL connections." ;
    ns1:kb-article """## How it works
Pinning allows for a trusted copy of a certificate or public key to be associated with a server and thus reducing the likelihood of frequently visited sites being subjected to man-in-the-middle attacks. Certificates or public keys can be pinned after a trusted connection has been established or the pinning can be preloaded in an application, which is the preferred method for mobile applications.

Pinning can take the form of certificate pinning or public key pinning.

## Forms of Pinning
* Certificate Pinning
Certificate Pinning (CP) allows for the client to verify the X509 certificate with a preloaded certificate. Typically, this is involves storing a hash of the certificate and using the stored hash for comparison to the hash of the certificate submitted during the SSL handshake.

* Public Key Pinning
Public Key Pinning (PKP) requires the extraction of a public key from server's certificate. The stored public key is compared to the server's presented public key. A public key is expected to rotate less frequently than an X509 certificate and is generally favored over certificate pinning.

An extension of PKP is Subject Public Key Information Pinning (SPKI) includes public key pinning plus additional information for SSL connections. The additional information can include preferred algorithms.

## Considerations

* With pinned certificates whenever a server updates its certificate, the pinned certificates will also need to be updated
* With pinned public keys the extracted key may be subject to key refresh policies but much less frequently
* Servers can become unavailable if pinned objects are set and not updated with the rotated identities. This may require a pinning strategy to be developed.
* The application of this technique within web browser applications has been [deprecated](https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning) by  popular web browser developers. They now favor certificate analysis via public certificate transparency logs, and the EXPECT-CT HTTP header.""" ;
    ns1:kb-reference ns1:Reference-CertificateAndPublicKeyPinning,
        ns1:Reference-End-to-endCertificatePinning ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:ChatroomClient a owl:Class ;
    rdfs:label "Chatroom Client" ;
    ns1:definition "Client software used to describe conduct any form of synchronous conferencing, occasionally even asynchronous conferencing. The term can thus mean any technology ranging from real-time online chat and online interaction with strangers (e.g., online forums) to fully immersive graphical social environments." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Chat_room> ;
    rdfs:subClassOf ns1:CollaborativeSoftware ;
    ns2:altLabel "Chat Room Client" .

ns1:ChildProcess a owl:Class ;
    rdfs:label "Child Process" ;
    ns1:definition "A child process in computing is a process created by another process (the parent process). This technique pertains to multitasking operating systems, and is sometimes called a subprocess or traditionally a subtask. There are two major procedures for creating a child process: the fork system call (preferred in Unix-like systems and the POSIX standard) and the spawn (preferred in the modern (NT) kernel of Microsoft Windows, as well as in some historical operating systems)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Child_process> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Parent_process> ;
    rdfs:subClassOf ns1:Process .

ns1:Client-serverPayloadProfiling a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Client-server Payload Profiling" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-CSPP" ;
    ns1:definition "Comparing client-server request and response payloads to a baseline profile to identify outliers." ;
    ns1:kb-article """## How it works
Profiling request and response payloads across multiple clients to a single server to develop a baseline of their characteristics. May take into account request/response sizes, entropy, frequency, and rhythm. Finally, identify outliers as they may indicate a malicious payload delivery and subsequent server exploitation.


## Considerations
* Collecting metrics to establish a profile can be challenging since user behavior can change easily.
* Employees may work different hours or inconsistent schedules which will cause false positives.
* Collection of network activity to generate metrics is a computationally intensive process.
* Users may log into different workstations which may cause false positives.""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingMaliciousPayloads_VectraNetworksInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:CloudServiceSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Sensor" ;
    ns1:definition "Senses data from cloud service platforms. Including data from cloud service  authentications, authorizations, and other activities." ;
    ns1:monitors ns1:CloudServiceAuthentication,
        ns1:CloudServiceAuthorization ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Sensor .

ns1:CommandLineInterface a owl:Class ;
    rdfs:label "Command Line Interface" ;
    ns1:definition "A command-line interface or command language interpreter (CLI), also known as command-line user interface, console user interface, and character user interface (CUI), is a means of interacting with a computer program where the user (or client) issues commands to the program in the form of successive lines of text (command lines). Command-line interfaces to computer operating systems are less widely used by casual computer users, who favor graphical user interfaces. Programs with command-line interfaces are generally easier to automate via scripting." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Command-line_interface> ;
    rdfs:subClassOf ns1:UserInterface ;
    ns2:altLabel "CLI",
        "CUI",
        "Command-line Interface" .

ns1:ComputingServer a owl:Class ;
    rdfs:label "Computing Server" ;
    ns1:definition "A compute server is a system specifically designed to undertake large amounts of computation, usually but not necessarily in a client/server environment." ;
    rdfs:isDefinedBy <https://www.encyclopedia.com/computing/dictionaries-thesauruses-pictures-and-press-releases/compute-server> ;
    rdfs:subClassOf ns1:Server .

ns1:ConfigurationInventory a ns1:AssetInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Inventory" ;
    ns1:d3fend-id "D3-CI" ;
    ns1:definition "Configuration inventory identifies and records the configuration of software and hardware and their components throughout the organization." ;
    ns1:inventories ns1:ConfigurationResource ;
    ns1:kb-article """## How it works

The organization retrieves configuration information through means of SNMP (MIB records), WBEM (CIM records), other protocols, or custom scripts and captures that information in a repository, typically known as a Configuration Management Database (CMDB).\"""" ;
    ns1:kb-reference ns1:Reference-Web-BasedEnterpriseManagement,
        ns1:Reference-Windows-Management-Infrastructure,
        ns1:Reference-Windows-Management-Instrumentation ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:ConfigurationManagementDatabase a owl:Class ;
    rdfs:label "Configuration Management Database" ;
    ns1:definition "A database used to store configuration records throughout their lifecycle. The Configuration Management System (CMS) maintains one or more CMDBs, and each CMDB stores attributes of configuration items (CIs), and relationships with other CIs." ;
    rdfs:isDefinedBy "https://web.archive.org/web/20111201040529/http://www.best-management-practice.com/gempdf/itil_glossary_v3_1_24.pdf" ;
    rdfs:seeAlso "https://dbpedia.org/resource/Configuration_management_database",
        "https://wiki.en.it-processmaps.com/index.php/ITIL_Glossary/_ITIL_Terms_C#Config_Management_Database_.28CMDB.29",
        "https://www.dmtf.org/standards/cmdbf" ;
    rdfs:subClassOf ns1:ConfigurationDatabase .

ns1:ConnectSocket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Connect Socket" ;
    ns1:connects ns1:Pipe ;
    ns1:definition "The connect socket system call connects the socket to a target address." ;
    rdfs:seeAlso <https://man7.org/linux/man-pages/man2/connect.2.html> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ConnectedHoneynet a ns1:DecoyEnvironment,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Connected Honeynet" ;
    ns1:d3fend-id "D3-CHN" ;
    ns1:definition "A decoy service, system, or environment, that is connected to the enterprise network, and simulates or emulates certain functionality to the network, without exposing full access to a production system." ;
    ns1:kb-article """## How it works
Decoy honeypots are deployed within the enterprise environment that emulate certain services or portions of an OS to attract attackers.

## Considerations
A connected honeynet provides a tradeoff between emulating certain functionality but not being as sophisticated as an integrated honeynet. The connected honeynet may not provide enough functionality to detect new attack patterns or zero day exploits but could provide enough functionality for specific known vulnerabilities.""" ;
    ns1:kb-reference ns1:Reference-ModificationOfAServerToMimicADeceptionMechanism_AcalvioTechnologiesInc ;
    ns1:spoofs ns1:LocalAreaNetwork ;
    rdfs:subClassOf [ ],
        ns1:DecoyEnvironment .

ns1:ConnectionAttemptAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Connection Attempt Analysis" ;
    ns1:analyzes ns1:IntranetNetworkTraffic ;
    ns1:d3fend-id "D3-CAA" ;
    ns1:definition "Analyzing failed connections in a network to detect unauthorized activity." ;
    ns1:kb-article """## How it works
Connection Attempt Analysis in multiple ways.

### Monitoring traffic to unallocated IP space
One approach looks for failed connection attempts against unallocated IP space. First, network traffic is captured to map out the network to identify network assets as well as unallocated IP space. The map is then used to determine if connection attempts are being made to the unallocated IP space.

### Monitoring for sequentially transmitted traffic
Another approach passively inspects network traffic with application protocol analyzers observing network activity characteristics such as volume of packets sent/ received, TCP session attributes, and connection information between hosts (start time, source/destination host, services, etc.). Then using pattern matching to identify traffic which appears to be probing for network hosts.

## Considerations

* Implementations that rely on analysis of unallocated IP address space increase in their complexity with network size and decentralized network infrastructure.
* Inventory of unallocated IP space should should be continuously updated to mitigate the risk of false positives.
* IPv6 also introduces challenges including IPv6 traffic bypassing IPv4 specific protection systems (ex. firewalls and IDS) and complexity in managing both IPv6 and IPv4 addresses.""" ;
    ns1:kb-reference ns1:Reference-DetectingNetworkReconnaissanceByTrackingIntranetDark-netCommunications_VECTRANETWORKSInc ;
    ns1:synonym "Network Scan Detection" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:ConsoleOutputFunction a owl:Class ;
    rdfs:label "Console Output Function" ;
    ns1:definition "Outputs characters to a computer console." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:ContainerBuildTool a owl:Class ;
    rdfs:label "Container Build Tool" ;
    ns1:definition "A software build tool that creates a container (e.g., Docker container) for deployment." ;
    rdfs:subClassOf ns1:SoftwarePackagingTool .

ns1:ContainerProcess a owl:Class ;
    rdfs:label "Container Process" ;
    ns1:definition "A running instance of a d3f:ContainerImage" ;
    rdfs:subClassOf ns1:ApplicationProcess .

ns1:ContainerRuntime a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Container Runtime" ;
    ns1:definition "A software layer between d3f:ContainerProcess and d3f:Kernel which often mediates the invocation of d3f:SystemCall" ;
    ns1:runs ns1:ContainerImage ;
    rdfs:subClassOf [ ],
        ns1:ServiceApplication .

ns1:CopyMemoryFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Copy Memory Function" ;
    ns1:copies ns1:MemoryBlock ;
    ns1:definition "Copies a memory block from one location to another." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:CredentialCompromiseScopeAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Compromise Scope Analysis" ;
    ns1:analyzes ns1:Credential ;
    ns1:d3fend-id "D3-CCSA" ;
    ns1:definition "Determining which credentials may have been compromised by analyzing the user logon history of a particular system." ;
    ns1:kb-article """## How it works

#### Memory
Credentials may be stored in memory for a variety of reasons; on Windows, they may be stored in lsass.exe.  Once a credential dumper like mimikatz runs and dumps the memory of lsass.exe, the credentials of every account logged on since boot are potentially compromised.
When such an event occurs, this analytic will give the forensic context to identify compromised users. Those users could potentially be used in later events for additional logons.


#### Hard disk
Operating System may cache a certain number of credentials onto the hard disk to use as a source of truth if it cannot contact the credential server.  In many versions of Microsoft Windows, the 10 most recent are cached by default; this setting can be changed in the Microsoft Management Console's Local Security Policy: ```Computer Configuration -> Windows Settings -> Local Policy -> Security Options -> Interactive Logon: Number of previous logons to cache -> 0```  Here we are not concerned with the alteration of the credentials but the fact that they might be read.  If the attacker has physical access to the machine they are unlikely to be stopped from reading files on the filesystem.
"In the event that the domain controller is unavailable Windows will check the last password hashes that has been cached in order to authenticate the user with the system. These password hashes are cached in the following registry setting:
HKEY_LOCAL_MACHINE\\SECURITY\\Cache
Mimikatz can retrieve these hashes if the following command is executed:
lsadump::cache" [1]

The Registry Hive, HKEY_LOCAL_MACHINE\\SAM, which is stored in the supporting files %systemroot%\\System32\\Config\\{Sam,sam.log,sam.sav}, contains the SAM file.

DC: This is stored in %systemroot%\\ntds\\ntds.dit. (https://www.ultimatewindowssecurity.com/blog/default.aspx?d=10/2017)

Sometimes memory, which contains credentials, could get on the hard disk. Like with hiberfil.sys in Windows.  Equivalent on Linux


In Linux, an attacker could read the /etc/shadow file.

Reading from /proc directory: mimipenguin, many others.

## Considerations
Effective implementation requires identifying any location that could end up containing credentials, and detecting an method of potential access to a source of credential data.

1. https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5""" ;
    ns1:kb-reference ns1:Reference-AllLoginsSinceLastBoot_MITRE,
        ns1:Reference-SystemsAndMethodsForDetectingCredentialTheft_SymantecCorp ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:CredentialRevoking a ns1:CredentialEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Revoking" ;
    ns1:d3fend-id "D3-CR" ;
    ns1:definition "Deleting a set of credentials permanently to prevent them from being used to authenticate." ;
    ns1:deletes ns1:Credential ;
    ns1:kb-article """## How it works

Management servers with enterprise policies for account management provide the ability remove permissions, accounts, or credentials. Compromised credentials should be revoked to prevent further malicious activity.""" ;
    ns1:kb-reference ns1:Reference-RevokingaPreviouslyIssuedVerifiableCredential-Microsoft ;
    rdfs:subClassOf [ ],
        ns1:CredentialEviction .

ns1:CredentialTransmissionScoping a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Transmission Scoping" ;
    ns1:d3fend-id "D3-CTS" ;
    ns1:definition "Limiting the transmission of a credential to a scoped set of relying parties." ;
    ns1:kb-reference ns1:Reference-WebAuthentication_AnAPIForAccessingPublicKeyCredentials%0ALevel2 ;
    ns1:restricts ns1:Credential ;
    ns1:synonym "Phishing Resistant Authentication" ;
    rdfs:seeAlso <https://pages.nist.gov/TIG-Stage/sp800-63c.html>,
        <https://www.w3.org/TR/webauthn-2/> ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:DNSAllowlisting a ns1:NetworkIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Allowlisting" ;
    ns1:blocks ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-DNSAL" ;
    ns1:definition "Permitting only approved domains and their subdomains to be resolved." ;
    ns1:kb-reference ns1:Reference-DNSWhitelist-DNSWL-EmailAuthenticationMethodExtension ;
    ns1:synonym "DNS Whitelisting" ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:DNSRecord a owl:Class ;
    rdfs:label "DNS Record" ;
    ns1:definition "A Domain Name System (DNS) record is a record of information returned to clients seeking to find computers, services, and other resources connected to the Internet or a private network.  Record information is stored on a domain name server so it can respond to DNS queries from clients.There are a variety of record types, depending on the client's information needs. Common types include Start of Authority, IP addresses, SMTP mail exchangers, name servers, reverse DNS lookup pointers, etc." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Domain_Name_System>,
        <http://dbpedia.org/resource/List_of_DNS_record_types> ;
    rdfs:subClassOf ns1:Record .

ns1:DNSServer a owl:Class ;
    rdfs:label "DNS Server" ;
    ns1:definition """A Domain Name System (DNS) name server is a kind of name server.  Domain names are one of the two principal namespaces of the Internet. The most important function of DNS servers is the translation (resolution) of human-memorable domain names and hostnames into the corresponding numeric Internet Protocol (IP) addresses, the second principal name space of the Internet which is used to identify and locate computer systems and resources on the Internet. (en).

More generally, a name server is a computer application that implements a network service for providing responses to queries against a directory service. It translates an often humanly meaningful, text-based identifier to a system-internal, often numeric identification or addressing component. This service is performed by the server in response to a service protocol request.""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Name_server> ;
    rdfs:subClassOf ns1:Server .

ns1:DNSTrafficAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Traffic Analysis" ;
    ns1:analyzes ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-DNSTA" ;
    ns1:definition "Analysis of domain name metadata, including name and DNS records, to determine whether the domain is likely to resolve to an undesirable host." ;
    ns1:kb-article """## How it works
This technique can be accomplished in a number of ways.

* One example analytic determines whether or not a domain name was generated with an algorithm. Domain generation algorithms (DGAs) are sometimes used to create a domain name automatically  that will resolve to C2 infrastructure, without directly coding the domains in question into the malicious code.
* Another method analyzes information about domains that have been visited, including whether a domain name is longer than a common length,  if a dynamic DNS domain was visited, if a fast-flux domain was visited, and if a recently created domain was visited. These factors are used to develop a score and if that score is over a certain threshold, an alert is generated.
* Collected malware samples can be executed in a virtual environment to identify network domains that are connected to during execution. The network domains are then generated into signatures to identity bad domains for other hosts.

This technique does not check for content hosted at the domain.

## Considerations

* DNS produces a large amount of traffic which can be resource-intensive to analyze in real time.
* If a server is compromised, for example, as part of a watering hole attack, but the DNS information pointing to that server is not altered, this technique would not catch such an incident.""" ;
    ns1:kb-reference ns1:Reference-DomainAgeRegistrationAlert_IncRapid7IncRAPID7Inc,
        ns1:Reference-HeuristicBotnetDetection_PaloAltoNetworksInc,
        ns1:Reference-MethodAndSystemForDetectingAlgorithm-generatedDomains_VECTRANETWORKSInc,
        ns1:Reference-PredictingDomainGenerationAlgorithmsWithLongShort-TermMemoryNetworks_,
        ns1:Reference-SinkholingBadNetworkDomainsByRegisteringTheBadNetworkDomainsOnTheInternet_PaloAltoNetworksInc ;
    ns1:may-contain ns1:DNSLookup ;
    ns1:synonym "Domain Name Analysis" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkTrafficAnalysis .

ns1:DataArtifactServer a owl:Class ;
    rdfs:label "Data Artifact Server" ;
    ns1:definition "A data artifact server provides access services to content in a content repository.  The content repository or content store is a database of digital content with an associated set of data management, search and access methods allowing application-independent access to the content, rather like a digital library, but with the ability to store and modify content in addition to searching and retrieving. The content repository acts as the storage engine for a larger application such as a content management system or a document management system, which adds a user interface on top of the repository's application programming interface." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Content_repository> ;
    rdfs:subClassOf ns1:ArtifactServer .

ns1:DataExchangeMapping a ns1:SystemMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Exchange Mapping" ;
    ns1:d3fend-id "D3-DEM" ;
    ns1:definition "Data exchange mapping identifies and models the organization's intended design for the flows of the data types, formats, and volumes between systems at the application layer." ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:DataDependency ;
    ns1:synonym "Data Flow Mapping",
        "Information Exchange Mapping" ;
    rdfs:subClassOf [ ],
        ns1:SystemMapping .

ns1:DataInventory a ns1:AssetInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Inventory" ;
    ns1:d3fend-id "D3-DI" ;
    ns1:definition "Data inventorying identifies and records the schemas, formats, volumes, and locations of data stored and used on the organization's architecture." ;
    ns1:inventories ns1:Database,
        ns1:DocumentFile,
        ns1:Email,
        ns1:MultimediaDocumentFile ;
    ns1:kb-reference ns1:Reference-DataProcessingAndScanningSystemsForGeneratingAndPopulatingADataInventory ;
    ns1:synonym "Data Discovery",
        "Data Inventorying" ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:AssetInventory .

ns1:DataLinkLink a owl:Class ;
    rdfs:label "Data Link Link" ;
    ns1:definition "A communication link between two network devices connected directly at the physical layer and on the same network segment; i.e., an OSI Layer 2 link." ;
    ns1:synonym "Data Link Layer Link",
        "Layer-2 Link",
        "Link Layer Link" ;
    rdfs:seeAlso "https://dbpedia.org/resource/Link_layer" ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:DatabaseQueryStringAnalysis a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database Query String Analysis" ;
    ns1:analyzes ns1:DatabaseQuery ;
    ns1:d3fend-id "D3-DQSA" ;
    ns1:definition "Analyzing database queries to detect [SQL Injection](https://capec.mitre.org/data/definitions/66.html)." ;
    ns1:kb-article """## How it works

Some implementations use software hooks to intercept function calls related to database query operations. Other implementations might intercept or collect network traffic. The database query string is then extracted and analyzed with various methods, for example:
* Detecting specific administrative SQL commands
* Anomalous sequences of commands when compared to a statistical baseline.
* Anomalous commands for a given user role.

## Considerations

Some capabilities sanitize queries before permitting them to be transmitted to the database. This incurs risks such altering data in an undesired way or breaking application functionality.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodForInternetSecurity_CylanceInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:DatabaseServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database Server" ;
    ns1:contains ns1:Database ;
    ns1:definition "A database server is a server which uses a database application that provides database services to other computer programs or to computers, as defined by the client-server model. Database management systems (DBMSs) frequently provide database-server functionality, and some database management systems (such as MySQL) rely exclusively on the client-server model for database access (while others e.g. SQLite are meant for using as an embedded database). For clarification, a database server is simply a server that maintains services related to clients via database applications." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Database_server> ;
    rdfs:subClassOf [ ],
        ns1:Server ;
    ns2:altLabel "Network Database Resource" .

ns1:DeadCodeElimination a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dead Code Elimination" ;
    ns1:d3fend-id "D3-DCE" ;
    ns1:definition "Removing unreachable or \"dead code\" from compiled source code." ;
    ns1:kb-article """## How it works

Dead code is code that is considered unreachable by normal program execution. Dead code can be created by adding code under a condition that never evaluates to true. Dead code should be removed since this type of code can produce unexpected results, if accidentally or maliciously forced to execute.

Dead code identification is typically performed by algorithms that implement program flows analysis looking for unreachable code. The dead code is eliminated by instructing compilers to remove the code through compiler flags, i.e., '-fdce' is used for Dead Code Elimination.

## Considerations

Code can also be deemed unreachable for certain run-time conditions. Different deployed systems and environments may contain some code that is unreachable for the given environment. This technique does not consider run-time conditions for unreachable code.""" ;
    ns1:kb-reference ns1:Reference-DeadCodeElimination ;
    rdfs:subClassOf ns1:ApplicationHardening .

ns1:DecoyFile a ns1:DecoyObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy File" ;
    ns1:d3fend-id "D3-DF" ;
    ns1:definition "A file created for the purposes of deceiving an adversary." ;
    ns1:kb-article """## How it works
The decoy file is made available as a local or network resource. Accesses to the file may be monitored. The files may be configurations, documents, executables, or other file types.


## Considerations
Properties of the file such as cryptographic checksums, file creation date, file modified date, file size, file owner etc may be modified to improve the credibility of the file.

## Example
* A CSV file with decoy user credentials is placed on a system. The system or network is then monitored to detect any accesses to the decoy files.""" ;
    ns1:kb-reference ns1:Reference-OpenSourceIntelligenceDeceptions_IllusiveNetworksLtd,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-SupplyChainCyber-deception_Cymmetria,Inc.>,
        ns1:Reference-SystemAndAMethodForIdentifyingThePresenceOfMalwareAndRansomwareUsingMini-trapsSetAtNetworkEndpoints_FidelisCybersecuritySolutionsInc,
        ns1:Reference-SystemAndMethodsThereofForPreventingRansomwareFromEncryptingDataElementsStoredInAMemoryOfAComputer-basedSystem_PaloAltoNetworksInc ;
    ns1:spoofs ns1:File ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyNetworkResource a ns1:DecoyObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Network Resource" ;
    ns1:d3fend-id "D3-DNR" ;
    ns1:definition "Deploying a network resource for the purposes of deceiving an adversary." ;
    ns1:kb-article """## How it works
Decoy network resources are deployed to web application servers, network file shares, or other network based sharing services.

A "honeypot" may serve a variety of decoy network resources.

## Considerations

* Developing a deployment and placement strategy for the decoy network resource.
* Personnel responsible for creation of decoy networks should consider the potential for resource exhaustion through denial of service attacks.

## Examples
* Honeypots are typically used to mimic a known system with fake vulnerabilities. This may attract attackers to the honeypot.
* Decoy accounts are also used to scan for attempted logins. The decoy accounts can provide security analysts with the attacker's potential intents and strategies.
* Tarpits are used to monitor unallocated IP space for unauthorized network activity.""" ;
    ns1:kb-reference ns1:Reference-AutomaticallyGeneratingNetworkResourceGroupsAndAssigningCustomizedDecoyPoliciesThereto_IllusiveNetworksLtd,
        ns1:Reference-Deception-BasedResponsesToSecurityAttacks_CrowdstrikeInc,
        ns1:Reference-DynamicSelectionAndGenerationOfAVirtualCloneForDetonationOfSuspiciousContentWithinAHoneyNetwork_PaloAltoNetworksInc,
        ns1:Reference-SystemAndMethodForIdentifyingThePresenceOfMalwareUsingMini-trapsSetAtNetworkEndpoints_FidelisCybersecuritySolutionsInc ;
    ns1:spoofs ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyPersona a ns1:DecoyObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Persona" ;
    ns1:d3fend-id "D3-DP" ;
    ns1:definition "Establishing a fake online identity to misdirect, deceive, and or interact with adversaries." ;
    ns1:kb-article """## How it works
A false online identity is created for the purposes of interacting with adversaries in a direct or indirect manner. This includes the associated email addresses, social media accounts, and other online communication profiles.

## Considerations
* Include phone numbers and online social profiles as well as automatically or manually responding to contact made to the persona to improve realism.
* Continuous updating and managing the decoy personas and online activity streams to ensure personas do not become stale and outdated.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-DecoyAndDeceptiveDataObjectTechnology_Cymmetria,Inc.>,
        ns1:Reference-DecoyPersonasForSafeguardingOnlineIdentityUsingDeception_ ;
    ns1:spoofs ns1:User ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyPublicRelease a ns1:DecoyObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Public Release" ;
    ns1:d3fend-id "D3-DPR" ;
    ns1:definition "Issuing publicly released media to deceive adversaries." ;
    ns1:kb-article """## How it works
Publicly released media includes press release, videos, or other marketing collateral. The media may include URLs, points of contact, or other identifiers to entice interaction from adversaries.

## Considerations
* Information used in decoy public released media must contain enough realism to deceive and provide interaction from adversaries.
* Continuous development, creation, and distribution of media and identifiers are needed to ensure adversary interaction continues over time.
* Decoy public releases could be placed on platforms with different degrees of ownership, including entirely enterprise-owned infrastructure, IaaS, and SaaS (including social applications). Platforms that are not entirely enterprise-owned may be more likely to gather information""" ;
    ns1:kb-reference ns1:Reference-MockAttackCybersecurityTrainingSystemAndMethods_WOMBATSECURITYTECHNOLOGIESInc ;
    rdfs:subClassOf ns1:DecoyObject .

ns1:DecoySessionToken a ns1:DecoyObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Session Token" ;
    ns1:d3fend-id "D3-DST" ;
    ns1:definition "An authentication token created for the purposes of deceiving an adversary." ;
    ns1:kb-article """## How it works
Usage of decoy session tokens may be monitored to track attacker behavior or otherwise control the beliefs of the attacker.

## Considerations
* Interaction and activity with the decoy session token must be constantly monitored and analyzed to detect unauthorized activity.
* Session tokens are typically short-lived and therefore the decoy must be continuously updated to provide the appearance of it being used in the production environment.
* Automated tools can assist with maintenance and updates by automatically adjusting the decoy session token and environment to mimic the production environment.""" ;
    ns1:kb-reference ns1:Reference-DecoyAndDeceptiveDataObjectTechnology_CymmetriaInc ;
    ns1:spoofs ns1:AccessToken ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyUserCredential a ns1:DecoyObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy User Credential" ;
    ns1:d3fend-id "D3-DUC" ;
    ns1:definition "A Credential created for the purpose of deceiving an adversary." ;
    ns1:kb-article """## How it works
A detection analytic is developed to determine when a user uses decoy credentials. Subsequent actions by that user may be monitored or controlled by the defender.

A credential may be:
 * Domain username and password
 * Local system username and password

## Considerations
* Decoy credentials should be integrated with a larger decoy environment to ensure that when decoy credentials are compromised, the credentials are used to interact with a decoy asset that is being monitored.
* Continuous maintenance and updates are needed to ensure the legitimacy of the larger decoy environment and specifically the assets that utilize the decoy credentials.""" ;
    ns1:kb-reference ns1:Reference-DecoyAndDeceptiveDataObjectTechnology_CymmetriaInc,
        ns1:Reference-DecoyNetwork-BasedServiceForDeceivingAttackers-AmazonTechnologies,
        ns1:Reference-SystemAndMethodForIdentifyingThePresenceOfMalwareUsingMini-trapsSetAtNetworkEndpoints_FidelisCybersecuritySolutionsInc ;
    ns1:spoofs ns1:Credential ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DeserializationFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Deserialization Function" ;
    ns1:definition "Function with an input of serialized data which deserializes that data, usually with data parsing methods." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:DesktopComputer a owl:Class ;
    rdfs:label "Desktop Computer" ;
    ns1:definition "A desktop computer is a personal computer designed for regular use at a single location on or near a desk or table due to its size and power requirements. The most common configuration has a case that houses the power supply, motherboard (a printed circuit board with a microprocessor as the central processing unit (CPU), memory, bus, and other electronic components, disk storage (usually one or more hard disk drives, solid state drives, optical disc drives, and in early models a floppy disk drive); a keyboard and mouse for input; and a computer monitor, speakers, and, often, a printer for output. The case may be oriented horizontally or vertically and placed either underneath, beside, or on top of a desk." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Desktop_computer> ;
    rdfs:subClassOf ns1:PersonalComputer .

ns1:DialUpModem a owl:Class ;
    rdfs:label "Dial Up Modem" ;
    ns1:definition "A dial-up modem transmits computer data over an ordinary switched telephone line that has not been designed for data use. This contrasts with leased line modems, which also operate over lines provided by a telephone company, but ones which are intended for data use and do not impose the same signaling constraints. The modulated data must fit the frequency constraints of a normal voice audio signal, and the modem must be able to perform the actions needed to connect a call through a telephone exchange, namely: picking up the line, dialing, understanding signals sent back by phone company equipment (dial tone, ringing, busy signal,) and on the far end of the call, the second modem in the connection must be able to recognize the incoming ring signal and answer the line." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem#Dial-up> ;
    rdfs:subClassOf ns1:Modem .

ns1:DiskEncryption a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Encryption" ;
    ns1:d3fend-id "D3-DENCR" ;
    ns1:definition "Encrypting a hard disk partition to prevent cleartext access to a file system." ;
    ns1:encrypts ns1:Storage ;
    ns1:kb-reference ns1:Reference-LUKS1On-DiskFormatSpecificationVersion1.2.3 ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:DisplayDeviceDriver a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Display Device Driver" ;
    ns1:definition "A device driver for a display adapter." ;
    ns1:drives ns1:DisplayAdapter ;
    rdfs:seeAlso <http://dbpedia.org/resource/Device_driver>,
        <http://dbpedia.org/resource/Display_adapter> ;
    rdfs:subClassOf [ ],
        ns1:HardwareDriver .

ns1:DomainAccountMonitoring a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Account Monitoring" ;
    ns1:d3fend-id "D3-DAM" ;
    ns1:definition "Monitoring the existence of or changes to Domain User Accounts." ;
    ns1:kb-reference ns1:Reference-AuditUserAccountManagement ;
    ns1:monitors ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:DomainNameReputationAnalysis a ns1:IdentifierReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Name Reputation Analysis" ;
    ns1:analyzes ns1:DomainName ;
    ns1:d3fend-id "D3-DNRA" ;
    ns1:definition "Analyzing the reputation of a domain name." ;
    ns1:kb-reference ns1:Reference-Database_for_receiving_storing_and_compiling_information_about_email_messages,
        ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:DomainRegistration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Registration" ;
    ns1:definition "A domain registration, or domain name registration data, is the relevant registration data from Internet resources such as domain names, IP addresses, and autonomous system numbers. Registration data is typically retrieved by means of either the Registration Data Access Protocol (RDAP) or its predecessor, the WHOIS protocol." ;
    ns1:may-contain ns1:DomainName ;
    rdfs:seeAlso <http://dbpedia.org/resource/Domain_registration>,
        <http://dbpedia.org/resource/WHOIS> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Domain Name Registration Data" .

ns1:DomainTrustPolicy a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Trust Policy" ;
    ns1:d3fend-id "D3-DTP" ;
    ns1:definition "Restricting inter-domain trust by modifying domain configuration." ;
    ns1:kb-reference ns1:Reference-HowTrustRelationshipsWorkForResourceForestsInAzureActiveDirectoryDomainServices ;
    ns1:restricts ns1:DirectoryService,
        ns1:T1087.002 ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialHardening .

ns1:DriverLoadIntegrityChecking a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Driver Load Integrity Checking" ;
    ns1:authenticates ns1:HardwareDriver ;
    ns1:d3fend-id "D3-DLIC" ;
    ns1:definition "Ensuring the integrity of drivers loaded during initialization of the operating system." ;
    ns1:kb-article """## How it works
This technique can be accomplished in a number of ways:

* A kernel level security agent installed on a host machine ensures that the driver associated with the agent is first in the initialization order. A dependent DLL associated with the driver is configured to be processed before other dependent DLLs and executes a number of operations to ensure the driver associated with the security agent is initialized first.

* Kernel components can be signed by a certificate obtained by a third party to verify the source of the component and whether it has been modified. When signed, the component will include a signature block implemented as a hash value of the component header and can also include a certificate chain. The signature and certificate data are typically added before the kernel component is distributed to the public.


## Considerations

* The private keys to sign certificates as reputable companies have been stolen in the past -- in cases such as where certificates from Adobe, Realtek, and JMicron have been used to sign malicious executables. (Source: https://resources.infosecinstitute.com/cybercrime-exploits-digital-certificates/#gref)

* Trusted Root Certificate Authorities have been compromised, yielding the ability to use the compromised keys to generate certificates with an arbitrary company name.

* It may not be difficult for an attacker to start an organization which can obtain a signed certificate.

* A root certificate authority (CA) whose certificate is trusted in the verification logic could generate incorrect certificates, if they are lax or have ulterior motives.""" ;
    ns1:kb-reference ns1:Reference-IntegrityAssuranceThroughEarlyLoadingInTheBootPhase_CrowdstrikeInc,
        ns1:Reference-ProtectedComputingEnvironment_MicrosoftTechnologyLicensingLLC ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:DynamicAnalysis a ns1:FileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dynamic Analysis" ;
    ns1:analyzes ns1:DocumentFile,
        ns1:ExecutableFile ;
    ns1:d3fend-id "D3-DA" ;
    ns1:definition "Executing or opening a file in a synthetic \"sandbox\" environment to determine if the file is a malicious program or if the file exploits another program such as a document reader." ;
    ns1:kb-article """## How it works
Analyzing the interaction of a piece of code with a system while the code is being executed in a controlled environment such as a sandbox, virtual machine, or simulator. This exposes the natural behavior of the piece of code without requiring the code to be disassembled.

## Considerations
 * Malware often detects a fake environment, then changes its behavior accordingly. For example, it could detect that the system clock is being sped up in an effort to get it to execute commands that it would normally only execute at a later time, or that the hardware manufacturer of the machine is a virtualization provider.
 * Malware can attempt to determine if it is being debugged, and change its behavior accordingly.
 * For maximum fidelity, the simulated and real environments should be as similar as possible because the malware could perform differently in different environments.
 * Sometimes the malware behavior is triggered only under certain conditions (on a specific system date, after a certain time, or after it is sent a specific command) and can't be detected through a short execution in a virtual environment.

## Implementations
* [Cuckoo Sandbox](https://cuckoosandbox.org)""" ;
    ns1:kb-reference ns1:Reference-MalwareAnalysisSystem_PaloAltoNetworksInc,
        ns1:Reference-UseOfAnApplicationControllerToMonitorAndControlSoftwareFileAndApplicationEnvironments_SophosLtd ;
    ns1:synonym "Malware Detonation",
        "Malware Sandbox" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:FileAnalysis .

ns1:DynamicAnalysisTool a owl:Class ;
    rdfs:label "Dynamic Analysis Tool" ;
    ns1:definition "Dynamic program analysis is the analysis of computer software that is performed by executing programs on a real or virtual processor." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Dynamic_program_analysis> ;
    rdfs:subClassOf ns1:CodeAnalyzer .

ns1:EmailAttachment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Attachment" ;
    ns1:attached-to ns1:Email ;
    ns1:definition "An email attachment is a computer file sent along with an email message. One or more files can be attached to any email message, and be sent along with it to the recipient. This is typically used as a simple method to share documents and images." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Email_attachment> ;
    rdfs:subClassOf [ ],
        ns1:DocumentFile .

ns1:EmailRemoval a ns1:FileRemoval,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Removal" ;
    ns1:d3fend-id "D3-ER" ;
    ns1:definition "The email removal technique deletes email files from system storage." ;
    ns1:deletes ns1:Email ;
    ns1:kb-article """## How it works

Email removal is a technique that can be used to prevent a user from executing malware or responding to phishing attempts. Security software or users themselves may detect malicious or suspicious email in a local or remote mail folder email and then employ this technique.

## Considerations

For email that needs to be removed, an infosec organization may choose to take additional follow-up actions (such as blocking the sources or notifying providers), rather than only relying on email deletion.

For the case where users detect likely suspicious email files, the organization should consider implementing a means for reporting these emails to their infosec organization.

Email files may propagate through many storage systems across the an organization's systems over time, so early detection and blocking helps avoid residual, latent stores of malicous email content in the enterprise.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodForScanningRemoteServicesToLocateStoredObjectsWithMalware ;
    ns1:may-access ns1:MailServer ;
    ns1:synonym "Email Deletion" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:FileRemoval .

ns1:EmbeddedComputer a owl:Class ;
    rdfs:label "Embedded Computer" ;
    ns1:definition "An embedded computer is a computer system -- a combination of a computer processor, computer memory, and input/output peripheral devices-that has a dedicated function within a larger mechanical or electrical system. It is embedded as part of a complete device often including electrical or electronic hardware and mechanical parts. Because an embedded system typically controls physical operations of the machine that it is embedded within, it often has real-time computing constraints. Embedded systems control many devices in common use today. Ninety-eight percent of all microprocessors manufactured are used in embedded systems." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Embedded_system> ;
    rdfs:subClassOf ns1:ClientComputer ;
    ns2:altLabel "Embedded System" .

ns1:EmulatedFileAnalysis a ns1:FileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Emulated File Analysis" ;
    ns1:analyzes ns1:DocumentFile,
        ns1:ExecutableFile ;
    ns1:d3fend-id "D3-EFA" ;
    ns1:definition "Emulating instructions in a file looking for specific patterns." ;
    ns1:kb-reference ns1:Reference-Network-levelPolymorphicShellcodeDetectionUsingEmulation ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:FileAnalysis .

ns1:Enclave a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Enclave" ;
    ns1:definition "Network enclaves consist of standalone assets that do not interact with other information systems or networks. A major difference between a DMZ or demilitarized zone and a network enclave is a DMZ allows inbound and outbound traffic access, where firewall boundaries are traversed. In an enclave, firewall boundaries are not traversed. Enclave protection tools can be used to provide protection within specific security domains. These mechanisms are installed as part of an Intranet to connect networks that have similar security requirements." ;
    ns1:may-contain ns1:LocalAreaNetwork ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_enclave> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Network Enclave" .

ns1:EncryptedPassword a owl:Class ;
    rdfs:label "Encrypted Password" ;
    rdfs:subClassOf ns1:EncryptedCredential,
        ns1:Password .

ns1:EncryptedTunnels a ns1:NetworkIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Encrypted Tunnels" ;
    ns1:d3fend-id "D3-ET" ;
    ns1:definition "Encrypted encapsulation of routable network traffic." ;
    ns1:isolates ns1:IntranetNetwork ;
    ns1:kb-reference ns1:Reference-SecurityArchitectureForTheInternetProtocol ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:EvalFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Eval Function" ;
    ns1:definition "Takes inputs of strings and evaluations them as expressions." ;
    ns1:invokes ns1:Subroutine ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:ExceptionHandler a owl:Class ;
    rdfs:label "Exception Handler" ;
    ns1:definition "An exception handler is a code segment that processes an exception." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Exception_handling> ;
    rdfs:subClassOf ns1:Subroutine .

ns1:ExceptionHandlerPointerValidation a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exception Handler Pointer Validation" ;
    ns1:d3fend-id "D3-EHPV" ;
    ns1:definition "Validates that a referenced exception handler pointer is a valid exception handler." ;
    ns1:kb-article """## How It Works
When a process encounters an exception, it calls an exception handler to deal with the exception.  The method by which this exception handler is determined varies by the operating system.  The exception handler is called, even if it is the default exception handler to terminate the program and display a message that the program stopped working.  In the case that no valid exception handler is found, the program would fail to proceed as normal and could be programmed to terminate.

In Windows, the address of the exception registration record is stored at the very start of the the Thread Information Block; the GS register points to this structure.

The exception registration record contains two pointers: a pointer to the next exception registration record should this handler fail to handle the exception, and a pointer to the handler.

A buffer overflow can overwrite the saved return pointer with an invalid location to execute memory; this often triggers the exception handler chain, which could also be corrupted by the buffer overflow.  Although Process Exception Handler Validation does not make sure that the exception handler pointer or the code at the exception handler was unaltered, or that the exception handler code is secure, this technique does ensure that the pointer is at least an exception handler that could be called by the program.

With Process Exception Handler Validation, before the handler is called, it checks the exception handler against a source of valid exception handlers.  If the requested handler is not in this list, other techniques such as those in Process Eviction might be invoked, such as Process Termination to end the current process, or Executable Blacklisting to blacklist the potentially vulnerable or malfunctioning executable.

### Runtime valid exception handler source generation
The source of valid exception handlers could be generated at runtime, with the risk of the information that is used to determine the validity of exception handlers being compromised.

### Compile-time
The source of valid exception handlers could also be generated at compile time or as a binary patch.  Given the source code, it would be rather straightforward to find the exceptions, as they are pointed in the catch statement of a try-catch clause and the compiler must already generate the code to call exceptions from this.

## Considerations
If the program file can be altered by the attacker, then the security could be bypassed by replacing it with any desired program, without even bypassing SEH.

If the attacker was already able to overwrite the code for a valid exception handler via other functionality in the program, this defense would not prevent arbitrary code execution.
If an exception handler recognized as valid is vulnerable, it would be executed anyway.

SafeSEH might be applied only to some executable files or modules, allowing an attacker to call any piece of code as an exception handler in the unprotected modules.""" ;
    ns1:kb-reference ns1:Reference-SAFESEH_ImageHasSafeExceptionHandlers_MicrosoftDocs ;
    ns1:synonym "Exception Handler Validation" ;
    ns1:validates ns1:Pointer ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:ExecutableAllowlisting a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Allowlisting" ;
    ns1:blocks ns1:ExecutableFile ;
    ns1:d3fend-id "D3-EAL" ;
    ns1:definition "Using a digital signature to authenticate a file before opening." ;
    ns1:kb-article """## How it works

This technique is generic and there are numerous ways to compute and authenticate digital signatures.
A digital certificate is generated from a private/public key pair issued by a certificate authority (CA). A hash of the file is encrypted using the private key. When the file is downloaded by another user, the user's system uses the public key to decrypt the hash and a new hash is created of the downloaded file. The hash decrypted by the public key is compared to the new hash and if there is a mismatch, further techniques, such as file deletion, file quarantine, or **Executable Blacklisting** may be invoked.

This technique may be invoked when deciding whether to execute a file.

## Considerations

Organizations which download or create high volumes of software make management complex, in particular engineering or scientific organizations.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ComputingApparatusWithAutomaticIntegrityReferenceGenerationAndMaintenance_Tripwire,Inc.>,
        ns1:Reference-EnhancingNetworkSecurityByPreventingUser-InitiatedMalwareExecution_ ;
    ns1:restricts ns1:CreateProcess ;
    ns1:synonym "File Signature Authentication" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:ExecutableDenylisting a ns1:ExecutionIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Denylisting" ;
    ns1:blocks ns1:ExecutableFile ;
    ns1:d3fend-id "D3-EDL" ;
    ns1:definition "Blocking the execution of files on a host in accordance with defined application policy rules." ;
    ns1:kb-article """## How it works

#### Criteria

A policy-enforcing application can register an application for denylisting based on conditions including the following:

* File attributes
    * file name
    * file path
    * file hash
    * file publisher, as obtained from the digital signature
    * permissions of the file
* File malware scan (eg. Windows SmartScreen)
* User-File combination

This may be done to prevent execution of applications which are:

* an old version with known vulnerabilities
* without a valid license, which could cause legal issues
* in a directory that is accessible to low-privileged users, that could be accessed by a malware dropper
* known trojan horse programs
* too open in their permissions, possibly set to run as a user other than the originator or allowing execution when they should not be
* a match to the hash of other known malware
* are detected as undesirable based on a file scan runtime behavior

System administrators will customize the rules for the given environment.

#### Backend

The policy-enforcing program may work by running in kernel mode, and [intercepting] [system calls which execute a process].

## Considerations

* If denylisting is done by filename, filepath, or hash, these mechanisms may be a worthy first line of defense and detection, but could still be evaded by an attacker.
* Continuous management is needed to keep the denylist up to date, whether it is based on hash, publisher, behavior, or any other digital artifact.
* Although denylists based on attributes such as file path and virus scan could defend against some threats which they have not been explicitly coded to block, denylists may not provide protection from new, unknown, or zero day attacks.


## Examples
On a Windows machine the Windows Defender Application Control (WDAC) policy enforcement is run in the kernel and allows for restricting applications.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ContentExtractorAndAnalysisSystem_Bit9Inc,CarbonBlackInc>,
        ns1:Reference-MethodAndApparatusForIncreasingTheSpeedAtWhichComputerVirusesAreDetected_McAfeeLLC ;
    ns1:restricts ns1:CreateProcess ;
    ns1:synonym "Executable Blacklisting" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:ExternalContentInclusionFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Content Inclusion Function" ;
    ns1:definition "External content, strings or data, are inserted into a local document (e.g. xml document) as if it were a native part of that document." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:FastSymbolicLink a owl:Class ;
    rdfs:label "Fast Symbolic Link" ;
    ns1:definition "Fast symbolic links, allow storage of the target path within the data structures used for storing file information on disk (e.g., within the inodes). This space normally stores a list of disk block addresses allocated to a file. Thus, symlinks with short target paths are accessed quickly. Systems with fast symlinks often fall back to using the original method if the target path exceeds the available inode space." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Symbolic_link#Storage_of_symbolic_links> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Symbolic_link#Storage_of_symbolic_links> ;
    rdfs:subClassOf ns1:SymbolicLink,
        ns1:UnixLink ;
    owl:disjointWith ns1:SlowSymbolicLink ;
    ns2:altLabel "Fast Symlink" .

ns1:FileAccessPatternAnalysis a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Access Pattern Analysis" ;
    ns1:analyzes ns1:LocalResourceAccess ;
    ns1:d3fend-id "D3-FAPA" ;
    ns1:definition "Analyzing the files accessed by a process to identify unauthorized activity." ;
    ns1:kb-article """## How it works
File modifying malware such as wipers and ransomware are detected by identifying file access patterns that are associated with a malicious process. Examples of file access patterns include accessing a large number of files, accessing multiple file types, files being accessed located in multiple locations in a directory, and copying a file and encrypting the contents of that file into a copy.

## Considerations
Certain file access actions may not be statistically different from authorized activity.""" ;
    ns1:kb-reference ns1:Reference-File-modifyingMalwareDetection_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:FileCarving a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Carving" ;
    ns1:analyzes ns1:FileTransferNetworkTraffic ;
    ns1:d3fend-id "D3-FC" ;
    ns1:definition "Identifying and extracting files from network application protocols through the use of network stream reassembly software." ;
    ns1:kb-article """## How it works
Protocol stream reassembly software recreates a directional byte stream by analyzing captured network packets. Once the stream is reassembled pattern matching is applied to determine if it contains a file of interest. Files of interest range from executable, archive, or document file formats. Once the file is captured, it is then processed with standard File Analysis Techniques. Example network protocols include HTTP, SMTP, FTP, HTTP/2, and TLS/HTTP/Dropbox.

## Considerations
- This is an error prone process due to the intricacies of network protocols and network packet capture.  For example reassembly may be done in real-time or streaming fashion, or packets may be written to disk, then bulk processed.  The packets may arrive out of order, with fragmentation, duplicates, or re-transmissions.  The reassembly software must compensate for the imperfect packet stream in order to recreate the well formed file which was transmitted.
- File type identification can be a difficult process which can be exploited by adversaries.""" ;
    ns1:kb-reference ns1:Reference-ComputerWormDefenseSystemAndMethod_FireEyeInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:FileContentRules a ns1:FileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Content Rules" ;
    ns1:d3fend-id "D3-FCR" ;
    ns1:definition "Employing a pattern matching rule language to analyze files." ;
    ns1:kb-article """## How it works
Rules, often called signatures, are used for both generic and targeted malware detection. The rules are usually expressed in a domain specific language (DSL), then deployed to software that scans files for matches. The rules are developed and broadly distributed by commercial vendors, or they are developed and deployed by enterprise security teams to address highly targeted or custom malware. Conceptually, there are public and private rule sets. Both leverage the same technology, but they are intended to detect different types of cyber adversaries.

## Considerations
* Patterns expressed in the DSLs range in their complexity. Some scanning engines support file parsing and normalization for high fidelity matching, others support only simple regular expression matching against raw file data. Engineers must make a trade-off in terms of:
     * The fidelity of the matching capabilities in order to balance high recall with avoiding false positives,
     * The computational load for scanning, and
     * The resilience of the engine to deal with adversarial content presented in different forms-- content which in some cases is designed to exploit or defeat the scanning engines.
 * Signature libraries can become large over time and impact scanning performance.
 * Some vendors who sell signatures have to delete old signatures over time.
 * Simple signatures against raw content cannot match against encoded, encrypted, or sufficiently obfuscated content.

## Implementations
 * YARA
 * ClamAV""" ;
    ns1:kb-reference ns1:Reference-ComputationalModelingAndClassificationOfDataStreams_CrowdstrikeInc,
        ns1:Reference-DetectingScript-basedMalware_CrowdstrikeInc,
        ns1:Reference-DistributedMeta-informationQueryInANetwork_Bit9Inc,
        ns1:Reference-SystemAndMethodsThereofForLogicalIdentificationOfMaliciousThreatsAcrossAPluralityOfEnd-pointDevicesCommunicativelyConnectedByANetwork_PaloAltoNetworksIncCyberSecdoLtd ;
    ns1:synonym "File Content Signatures",
        "File Signatures" ;
    rdfs:subClassOf ns1:FileAnalysis .

ns1:FileCreationAnalysis a ns1:SystemCallAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Creation Analysis" ;
    ns1:analyzes ns1:CreateFile ;
    ns1:d3fend-id "D3-FCA" ;
    ns1:definition "Analyzing the properties of file create system call invocations." ;
    ns1:kb-reference ns1:Reference-CAR-2020-09-001%3AScheduledTask-FileAccess_MITRE,
        ns1:Reference-LsassProcessDumpViaProcdump_MITRE ;
    rdfs:subClassOf [ ],
        ns1:SystemCallAnalysis .

ns1:FileEncryption a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Encryption" ;
    ns1:d3fend-id "D3-FE" ;
    ns1:definition "Encrypting a file using a cryptographic key." ;
    ns1:encrypts ns1:File ;
    ns1:kb-article """## How it Works
Files are encrypted using either a single key for both encryption and decryption or separate keys. Single key encryption is symmetric encryption and using two key distinct keys is asymmetric encryption.

### Symmetric Cryptography
Symmetric encryption uses the same cryptographic key for both the encryption and decryption a file. Managing keys at scale sometimes uses asymmetric key exchange protocols such as Diffie-Hellman can be used to share the symmetric cryptographic key with the others.

### Asymmetric Cryptography
Asymmetric encryption is typically accomplished using public and private key certificates based on the X.509 standard. Files are encrypted using the public key and decrypted using their private key. Asymmetric encryption is typically slower than symmetric encryption and not widely used for large file encryption, but is popular for key wrapping, key exchanges, and digital signatures.

## Considerations
- Continuous monitoring to ensure private keys are not compromised and the certificate authority (CA) is trusted.
- Secure transfer of private keys between multiple devices.""" ;
    ns1:kb-reference ns1:Reference-MethodForFileEncryption ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:FileHashReputationAnalysis a ns1:IdentifierReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Hash Reputation Analysis" ;
    ns1:analyzes ns1:FileHash ;
    ns1:d3fend-id "D3-FHRA" ;
    ns1:definition "Analyzing the reputation of a file hash." ;
    ns1:kb-reference ns1:Reference-Reputation_of_an_entity_associated_with_a_content_item ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:FileHashing a ns1:FileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Hashing" ;
    ns1:d3fend-id "D3-FH" ;
    ns1:definition "Employing file hash comparisons to detect known malware." ;
    ns1:kb-article """## How it works
This technique requires a list of hashes to compare a file against.

## Considerations
Performance on large files or very large numbers of files.""" ;
    ns1:kb-reference ns1:Reference-Munin ;
    rdfs:subClassOf ns1:FileAnalysis .

ns1:FilePathOpenFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Path Open Function" ;
    ns1:accesses ns1:File ;
    ns1:definition "Has an input of a file path, and opens a file handle for reading or writing." ;
    ns1:invokes ns1:OpenFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Subroutine .

ns1:FileShareService a owl:Class ;
    rdfs:label "File Share Service" ;
    ns1:definition "A file sharing service (or file share service) provides the ability to share data across a network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_sharing> ;
    rdfs:subClassOf ns1:NetworkService .

ns1:FileSystemSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System Sensor" ;
    ns1:definition "Collects files and file metadata on an endpoint." ;
    ns1:monitors ns1:File ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:FingerPrintScannerInputDevice a owl:Class ;
    rdfs:label "Finger Print Scanner Input Device" ;
    ns1:definition "A fingerprint sensor is an electronic device used to capture a digital image of the fingerprint pattern. The captured image is called a live scan. This live scan is digitally processed to create a biometric template (a collection of extracted features) which is stored and used for matching. Many technologies have been used including optical, capacitive, RF, thermal, piezoresistive, ultrasonic, piezoelectric, and MEMS." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Fingerprint#Fingerprint_sensors> ;
    rdfs:subClassOf ns1:ImageScannerInputDevice ;
    ns2:altLabel "Fingerprint Sensor" .

ns1:FirmwareBehaviorAnalysis a ns1:PlatformMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Behavior Analysis" ;
    ns1:analyzes ns1:Firmware ;
    ns1:d3fend-id "D3-FBA" ;
    ns1:definition "Analyzing the behavior of embedded code in firmware and looking for anomalous behavior and suspicious activity." ;
    ns1:kb-article """## How it works
Firmware behavior analysis provides protections by ensuring that installed firmware has not been tampered with or modified. Firmware analysis applies to mutable firmware and immutable read-only memory (ROMs).

Firmware in deployed network devices is typically not analyzed and monitored for vulnerabilities and thus is subject to potential attacks. This technique makes use of known and measured behavioral attributes, including timing attributes, of analyzed firmware on deployed devices.

A behavioral method that employs known timing measurements may use the timing results from a challenge and response protocol to detect the presence of malware in embedded firmware. Firmware device timing measurements are made, specific to the installed device, and are used in the verifying function.

The original firmware image is modified by injecting a monitoring software component into the embedded firmware code. The injected software components will allow for a software root of trust, the challenge and response protocol, to be implement in the firmware.

A challenge-response is issued and includes a nonce so that replays are not allowed. The firmware will calculate a checksum over all of memory, including the nonce, and return the result. The verification system will compare the computed checksum and the time it took for the computation of the checksum to determine if the firmware has been modified.

## Considerations
* The firmware code will need to be modified to include the behavioral monitoring functionality.
* This technique is sensitive to the device the embedded firmware is hosted on and it is expected that the devices and firmware will need to be profiled and analyzed to determine timing estimation.
* This technique is not expected to be one hundred percent correct as you would expect in a hardware root of trust solution and may require some tuning.""" ;
    ns1:kb-reference ns1:Reference-FirmwareBehaviorAnalysisConFirm,
        ns1:Reference-FirmwareBehaviorAnalysisVIPER ;
    ns1:synonym "Firmware Timing Analysis" ;
    rdfs:subClassOf [ ],
        ns1:PlatformMonitoring .

ns1:FirmwareEmbeddedMonitoringCode a ns1:PlatformMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Embedded Monitoring Code" ;
    ns1:analyzes ns1:Firmware ;
    ns1:d3fend-id "D3-FEMC" ;
    ns1:definition "Monitoring code is injected into firmware for integrity monitoring of firmware and firmware data." ;
    ns1:kb-article """## How it works
Firmware in deployed network devices is typically not monitored for malicious changes. This technique provides a method to embed a software security component into the deployed firmware which provides a near real-time monitoring hook. The exception handling code, in the firmware, is typically used to expose any detected vulnerabilities.

The injected software components provide a feature similar to intrusion detection systems for the firmware by detecting unauthorized modifications of the embedded firmware. The integrity of static code and firmware data are monitored continuously in the hosted devices. Comparisons are made to monitored elements like firmware memory addresses and data segments. Memory pages are scanned and if a modification is detected the software component may lock the page. This will protect subsequent attempted modifications to the firmware. The software component may utilize the exception handling code and thus be able to disclose the exact address of the modified memory.

The injected software components are inserted during the firmware imaging process. The injected software is assumed to have knowledge of both the embedded code and the current execution state of the host program. The injected software will monitor and alert, in near real-time, on potential suspicious activity. The injected code is run alongside of the embedded code in the host. The injected software operates as an independent entity and is not dependent on the host software.

Finally, this technique may implement other countermeasure techniques as part of their analytical processes. These should be identified by referencing other countermeasure techniques directly as necessary.

## Considerations
* The firmware code will need to be modified and re-hosted on the device.
* Exposing monitoring hooks to the injected code may introduce additional risk.""" ;
    ns1:kb-reference ns1:Reference-FirmwareEmbeddedMonitoringCodeRedBalloon,
        ns1:Reference-FirmwareEmbeddedMonitoringCodeSymbiotes ;
    rdfs:subClassOf [ ],
        ns1:PlatformMonitoring .

ns1:FirmwareSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Sensor" ;
    ns1:definition "Collects information on firmware installed on an Endpoint." ;
    ns1:monitors ns1:Firmware ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:First-stageBootLoader a owl:Class ;
    rdfs:label "First-stage Boot Loader" ;
    ns1:definition "The very first routine run in order to load the operating system." ;
    rdfs:subClassOf ns1:BootLoader .

ns1:FlashMemory a owl:Class ;
    rdfs:label "Flash Memory" ;
    ns1:definition "Flash memory is an electronic non-volatile computer memory storage medium that can be electrically erased and reprogrammed." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Flash_memory" ;
    rdfs:subClassOf ns1:SecondaryStorage .

ns1:ForwardProxyServer a owl:Class ;
    rdfs:label "Forward Proxy Server" ;
    ns1:definition "An forward (or open) proxy is a proxy server that is accessible by any Internet user. Generally, a proxy server only allows users within a network group (i.e. a closed proxy) to store and forward Internet services such as DNS or web pages to reduce and control the bandwidth used by the group. With an open proxy, however, any user on the Internet is able to use this forwarding service." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Open_proxy> ;
    rdfs:subClassOf ns1:ProxyServer .

ns1:ForwardResolutionIPDenylisting a ns1:DNSDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Forward Resolution IP Denylisting" ;
    ns1:blocks ns1:InboundInternetDNSResponseTraffic ;
    ns1:d3fend-id "D3-FRIDL" ;
    ns1:definition "Blocking a DNS lookup's answer's IP address value." ;
    ns1:kb-article """## How it works

This technique prevents a client from learning IP addresses deemed to be potentially malicious, which would have been delivered via forward resolution responses.

Responses to forward resolution requests (that is, requests where a domain is sent and IP(s) are returned) are collected, and the IP address(es) included as a response are examined. If the IP address(es) are in a range included in the blacklist, then the response is dropped and not forwarded to the client.

The DNS lookup can be blocked by either dropping the network traffic with an inline device, or modifying the value of the response sent by the DNS server. To transparently prevent client applications from hanging on a request, it is common practice to replace malicious values with addresses in the range 127.0.0.0/8 or the address of a honeypot maintained by the network administrators.

## Considerations

* This technique does not prevent the client from contacting the blacklisted IP, only from learning about this IP address via a nameserver lookup request.
* DNS Response traffic can be transmitted over many different protocols, which presents a challenge to implementing methods to extract all DNS answer IP address value(s).
  * DNS has historically used UDP port 53, with TCP port 53 instead used for responses over 512 bytes or after a lack of response over UDP.
  * Usage of new protocols to provide confidentiality for DNS traffic, such as DoH (DNS over HTTPS) and DoT (DNS over TLS), complicates collection of the IP address(es) in DNS responses. These protocols have often been enabled in browser settings transparently after a browser update, with DNS requests proxied over one of these cryptographic protocols through a specified host.
* This technique must be implemented logically between the application that receives the response and the server which sent the response.
  * DNS responses sent in an encrypted manner, such as those using DoH or DoT, will require interception of the TLS connections in order to determine the IP address(es) in the response.
* Replacing the response is not effective in the case that the nameserver uses a technique to provide integrity of its responses, such as DNSSEC for DNS responses.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Forward Resolution IP Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:DNSDenylisting .

ns1:GraphicsCardFirmware a owl:Class ;
    rdfs:label "Graphics Card Firmware" ;
    ns1:definition "Firmware that is installed on computer graphics card." ;
    rdfs:seeAlso "d3f:Firmware" ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    ns2:altLabel "Video Card Firmware" .

ns1:GraphicsProcessingUnit a owl:Class ;
    rdfs:label "Graphics Processing Unit" ;
    ns1:synonym "GPU" ;
    rdfs:subClassOf ns1:Processor .

ns1:HTMLFile a owl:Class ;
    rdfs:label "HTML File" ;
    ns1:definition "A document file encoded in HTML.The HyperText Markup Language, or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript. Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document." ;
    rdfs:seeAlso <http://dbpedia.org/resource/HTML> ;
    rdfs:subClassOf ns1:DocumentFile ;
    ns2:altLabel "HTML File" .

ns1:HardDiskFirmware a owl:Class ;
    rdfs:label "Hard Disk Firmware" ;
    ns1:definition "Firmware that is installed on a hard disk device." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Hard_disk_drive> ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    ns2:altLabel "Hard Drive Firmware" .

ns1:Hardware-basedProcessIsolation a ns1:ExecutionIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware-based Process Isolation" ;
    ns1:d3fend-id "D3-HBPI" ;
    ns1:definition "Preventing one process from writing to the memory space of another process through hardware based address manager implementations." ;
    ns1:isolates ns1:Process ;
    ns1:kb-article """## How it works
Process isolation, in this context, is address space separation controlled by a security function that limits the communication between processes so that one process cannot directly modify the executing code of another process. For example with virtual address space:

* Process A address space is different from process B address space, which prevents process A from writing to process B

Hardware process isolation is commonly implemented through Direct Memory Access (DMA) which collaborates with a Memory Management Unit (MMU), or Input-Output Memory Management Unit (IOMMU). These hardware controls are deployed directly on processors to aid hosts or enclaves in process isolation.

* DMA - Direct memory access allows memory access to occur independently of the program currently run by the microprocessor. DMA allows for I/O devices to directly read from and write to memory, or it can be used to efficiently copy blocks of memory. During DMA transfers, the microprocessor can execute an unrelated program.
* MMU - A memory management unit acts as an access control and is responsible for performing the translation of virtual memory addresses to physical memory addresses. The MMU allocates each process its own virtual memory space.
* IOMMU - An input-output memory management unit is used to allocate each I/O device its own virtual address space to the underlying physical addresses. IOMMU allows devices that do not support long memory addresses to address the entire memory space.

## Considerations
* Private hosts may be vulnerable to DMA attack if they have a PCI or PCI Express port that connects attached devices directly to physical address space.

## Implementations:
 * Intel Virtualization Technology for Directed I/O (Intel VT-d)
 * Firecracker""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ApproachesForSecuringAnInternetEndpointUsingFine-grainedOperatingSystemVirtualization_Bromium,Inc.>,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-IsolationOfApplicationsWithinAVirtualMachine_Bromium,Inc.>,
        ns1:Reference-VirtualizedProcessIsolation_AdvancedMicroDevicesInc ;
    ns1:restricts ns1:CreateProcess ;
    ns1:synonym "Virtualization" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:HardwareComponentInventory a ns1:AssetInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Component Inventory" ;
    ns1:d3fend-id "D3-HCI" ;
    ns1:definition "Hardware component inventorying identifies and records the hardware items in the organization's architecture." ;
    ns1:inventories ns1:HardwareDevice ;
    ns1:kb-article """## How it works
Administrators collect information on hardware devices such as peripherals, NICs, processors, and memory devices that are components of the computers in their architecture using a variety of administrative and management tools that query for this information.  In some cases, where such queries are not supported or provide specific information of interest, an administrator may also collect this information through remote adminstration tools and system commands, either manually or using scripts.

## Considerations
* Scanning and probing techniques using mapping tools can result in side effects to information technology (IT) and operational technology (OT) systems.
* An adversary conducting network enumeration may engage in activities that parallel normal hardware inventorying activities, but would require escalating to admin privileges for most of the operations requiting administrative tools

## Examples
* Bus discovery
   * Admin-scripted PCI Bus inventory using ssh and pciutils
* Application-layer discovery
   * Simple Network Management Protocol (SNMP) collects MIB information
   * Web-based Enterprise Management (WBEM) collects CIM information
      * Windows Management Instrumentation (WMI)
      * Windows Management Infrastructure (MI)""" ;
    ns1:kb-reference ns1:Reference-AdvancedDeviceMatchingSystem ;
    ns1:synonym "Hardware Component Discovery",
        "Hardware Component Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:HeapSegment a owl:Class ;
    rdfs:label "Heap Segment" ;
    ns1:definition "The heap segment (or free store) is a large pool of memory from which dynamic memory requests of a process are allocated and satisfied." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Memory_management#HEAP> ;
    rdfs:subClassOf ns1:ProcessSegment .

ns1:HierarchicalDomainDenylisting a ns1:ForwardResolutionDomainDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hierarchical Domain Denylisting" ;
    ns1:d3fend-id "D3-HDDL" ;
    ns1:definition "Blocking the resolution of any subdomain of a specified domain name." ;
    ns1:kb-article """## How it works
This technique is used to block DNS queries from related domains and subdomains that are unauthorized.

Hierarchical domain blacklisting considers the blacklisting of second level domains and additional sub-domains and specific hosts for a given query value. A denylist is maintained that contains DNS names and corresponding subdomains, including wildcards, that should be blocked for a given lookup.

## Considerations
* The denylist of domain names will have to be maintained and will need to be kept up to date
* Other domains that resolve to the domain of interest for blocking (CNAME, etc).
* Denylists should have identified maintenance cycles to ensure lists are not stale.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Hierarchical Domain Blacklisting" ;
    rdfs:subClassOf ns1:ForwardResolutionDomainDenylisting .

ns1:HomoglyphDenylisting a ns1:ForwardResolutionDomainDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Homoglyph Denylisting" ;
    ns1:d3fend-id "D3-HDL" ;
    ns1:definition "Blocking DNS queries that are deceptively similar to legitimate domain names." ;
    ns1:kb-article """## How it works

Homoglyph domain blacklisting considers the domain and subdomain structure of a lookup and compares the named components to blacklisted named components. The blacklisted named components are typically crafted modifications of known good domains, e.g., gooogle.com versus google.com. The blacklisted domains typically resemble trusted domains, but have been altered slightly to deceive users.

The blacklisted named components also include consideration for fonts or Unicode characters that can make certain characters appear very similar (zero vs capital O and the letter l vs the number one). The blacklisted domains under certain fonts will appear to be a trusted domain.

## Considerations
* Maintaining the currency of the list can be a challenge especially with newly registered domain entries.
* Blacklists should have identified maintenance cycles to ensure lists are not stale.""" ;
    ns1:kb-reference ns1:Reference-DetectionOfMaliciousIDNHomoglyphDomains ;
    ns1:synonym "Homoglyph Blacklisting" ;
    rdfs:subClassOf ns1:ForwardResolutionDomainDenylisting .

ns1:HomoglyphDetection a ns1:IdentifierAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Homoglyph Detection" ;
    ns1:analyzes ns1:Email,
        ns1:URL ;
    ns1:d3fend-id "D3-HD" ;
    ns1:definition "Comparing strings using a variety of techniques to determine if a deceptive or malicious string is being presented to a user." ;
    ns1:kb-article """## How it works
A homoglyph, in this context, is a deceptive string or word which looks like a trusted word, but is composed of different characters, for example: goooogle.com versus google.com. This is commonly found in phishing and typo squatting attacks where a human exploiting through a social engineering campaign.

## Considerations
* In very large environments processing DNS queries can be computationally expensive due to the amount of traffic that is generated
* Legitimate companies and products use non-dictionary words in their names that could result in many false positives""" ;
    ns1:kb-reference ns1:Reference-Computer-implementedMethodsAndSystemsForIdentifyingVisuallySimilarTextCharacterStrings_GreathornInc,
        ns1:Reference-SystemAndMethodForDetectingHomoglyphAttacksWithASiameseConvolutionalNeuralNetwork_EndgameInc ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:IdentifierAnalysis .

ns1:HostConfigurationSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host Configuration Sensor" ;
    ns1:definition "Collects the configuration data on an endpoint." ;
    ns1:monitors ns1:ApplicationConfiguration,
        ns1:OperatingSystemConfiguration ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:EndpointSensor .

ns1:Hostname a ns1:DomainName,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hostname" ;
    ns1:definition "In computer networking, a hostname (archaically nodename) is a label that is assigned to a device connected to a computer network and that is used to identify the device in various forms of electronic communication, such as the World Wide Web. Hostnames may be simple names consisting of a single word or phrase, or they may be structured." ;
    ns1:identifies ns1:Host ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hostname> ;
    rdfs:subClassOf [ ],
        ns1:Identifier ;
    ns2:altLabel "Nodename" .

ns1:HumanInputDeviceFirmware a owl:Class ;
    rdfs:label "Human Input Device Firmware" ;
    ns1:definition "Firmware that is installed on an HCI device such as a mouse or keyboard." ;
    rdfs:seeAlso ns1:Firmware,
        <http://dbpedia.org/resource/Human_interface_device> ;
    rdfs:subClassOf ns1:PeripheralFirmware .

ns1:IOPortRestriction a ns1:ExecutionIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IO Port Restriction" ;
    ns1:d3fend-id "D3-IOPR" ;
    ns1:definition "Limiting access to computer input/output (IO) ports to restrict unauthorized devices." ;
    ns1:filters ns1:InputDevice,
        ns1:RemovableMediaDevice ;
    ns1:kb-article """## How It works

Software-based restriction uses agent software installed on a computer system. The agent software monitors all IO port system traffic. The agent software is configurable to limit the use of certain devices connected to IO ports. The restriction software can also be configured to limit the access to files and applications on external storage devices connected to IO ports.

Hardware-based restriction can also be employed to limit access to IO ports. For example, a hardware USB filter device that is placed between the host system and the external devices can filter IO port connections based on configurable rules. When new devices are connected to the USB filter the type of device is determined. Using an allow list a connection determination is made for the device.

Some implementations detect when a device is connected in order to authorize the connection against a list of approved devices, in some cases by device type. For example, if the device is determined to be a storage device, then the contained files and executables are examined to more accurately identify the device type.

Types of restrictions that may be applied:
- Device connection
- Device command filtering
- Device file system read or write restrictions

## Considerations
 * Agent software will need to be installed on host systems
 * Configurations for allow/deny for devices and files will need to be maintained""" ;
    ns1:kb-reference ns1:Reference-ComputerMotherboardHavingPeripheralSecurityFunctions,
        ns1:Reference-MethodAndSystemForControllingCommunicationPorts,
        ns1:Reference-USBFilterForHubMaliciousCodePreventionSystem ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:IPCTrafficAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IPC Traffic Analysis" ;
    ns1:analyzes ns1:IntranetIPCNetworkTraffic ;
    ns1:d3fend-id "D3-IPCTA" ;
    ns1:definition "Analyzing standard inter process communication (IPC) protocols to detect deviations from normal protocol activity." ;
    ns1:kb-article """## How it works
Inter process communication enables applications or threads to share data. This can involve one or more computers. Monitoring IPC in your environment can reveal abnormal or malicious activity.
IPC can occur within a single computer or between multiple computers remotely through network protocols. Thus there are multiple ways to collect and monitor these exchanges between processes. A network protocol analyzer may monitor and parse SMB network traffic to record system activity. A host based monitoring agent may monitor IPC activity contained within a single host to look for deviations from standard usages.

### Examples
 * SMB
 * Zeromq
 * Java RMI API

## Considerations
* IPC can generate substantial amounts of data, and it may not be feasible to collect all of it.
* IPC may occur over loopback interfaces or direct memory access granted by the operating system.""" ;
    ns1:kb-reference ns1:Reference-CAR-2015-04-001%3ARemotelyScheduledTasksViaAT_MITRE,
        ns1:Reference-SMBCopyAndExecution_MITRE,
        ns1:Reference-SMBEventsMonitoring_MITRE,
        ns1:Reference-SMBSessionSetups_MITRE,
        ns1:Reference-SMBWriteRequest-NamedPipes_MITRE,
        ns1:Reference-SMBWriteRequest_MITRE,
        ns1:Reference-SecuritySystemWithMethodologyForInterprocessCommunicationControl_CheckPointSoftwareTechInc ;
    ns1:synonym "IPC Analysis" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:IPPhone a owl:Class ;
    rdfs:label "IP Phone" ;
    ns1:definition "A VoIP phone or IP phone uses voice over IP technologies for placing and transmitting telephone calls over an IP network, such as the Internet, instead of the traditional public switched telephone network (PSTN). Digital IP-based telephone service uses control protocols such as the Session Initiation Protocol (SIP), Skinny Client Control Protocol (SCCP) or various other proprietary protocols." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/VoIP_phone> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    ns2:altLabel "VoIP Phone" .

ns1:IPReputationAnalysis a ns1:IdentifierReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IP Reputation Analysis" ;
    ns1:analyzes ns1:IPAddress ;
    ns1:d3fend-id "D3-IPRA" ;
    ns1:definition "Analyzing the reputation of an IP address." ;
    ns1:kb-reference ns1:Reference-Database_for_receiving_storing_and_compiling_information_about_email_messages,
        ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:IdentifierActivityAnalysis a ns1:IdentifierAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier Activity Analysis" ;
    ns1:definition "Taking known malicious identifiers and determining if they are present in a system." ;
    ns1:kb-article """## How it works

Identifier activity analysis is the process of taking identifiers--typically known malicious identifiers--and determining the artifacts that have interacted with those identifiers.

There are many open and closed source repositories of identifiers that represent indicators of compromise. For example, VirusTotal contains hash signatures of malware and IP Addresses used by threat actors. Defenders can search for these indicators of compromise their own systems to gain context on activity around an identifier.

## Considerations

Indicator activity analysis is a good way to gain high precision analysis, but adversaries can modify their own signatures such as hashes quickly to evade detection. This is related to David Bianco’s Pyramid of Pain – Indicators on the lower level (hash values, IP addresses domain names) are easy for adversaries to change.

Identifier activity data of interest for analysis with the identifier might include, but is not limited to:

* network traffic activity where the identifier was used to identify communicating entities or referred to in the communication
* process activity referencing the identifier, especially for resource access
* file activity referencing the identifier
* registry settings referencing the identifier""" ;
    ns1:kb-reference ns1:Reference-ThePyramidOfPain-DavidBianco ;
    rdfs:subClassOf ns1:IdentifierAnalysis .

ns1:ImportLibraryFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Import Library Function" ;
    ns1:definition "Loads an external software library to enable the invocations of its methods." ;
    ns1:loads ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:InboundSessionVolumeAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Session Volume Analysis" ;
    ns1:analyzes ns1:InboundInternetNetworkTraffic ;
    ns1:d3fend-id "D3-ISVA" ;
    ns1:definition "Analyzing inbound network session or connection attempt volume." ;
    ns1:kb-article """## How it works
Network appliances are configured to alert on certain packets that typically are involved in DoS attacks. Typical packets include ICMP packets and SYN requests that are commonly used to flood networks. A sampling period is used to define a time window in which collected counts of the identified packets can be measured. If the collected number of packets exceeds a predefined limit then an alert is generated.

## Considerations
Scalability as volume of attacks increase; single servers may not have the memory and storage resources to handle high volumes of network traffic.""" ;
    ns1:kb-reference ns1:Reference-DetectingDDoSAttackUsingSnort,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-IdentifyingADenial-of-serviceAttackInACloud-basedProxyService-CloudfareInc.>,
        ns1:Reference-MethodAndSystemForUDPFloodAttackDetection-RioreyLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ProtectingAgainstDistributedDenialOfServiceAttacks-CiscoTechnologyInc.>,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ProtectingAgainstDistributedNetworkFloodAttacks-JuniperNetworksInc.> ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:InboundTrafficFiltering a ns1:NetworkTrafficFiltering,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Traffic Filtering" ;
    ns1:d3fend-id "D3-ITF" ;
    ns1:definition "Restricting network traffic originating from untrusted networks destined towards a private host or enclave." ;
    ns1:filters ns1:InboundNetworkTraffic ;
    ns1:kb-article """## How it works
Inbound Traffic, in this context, is network traffic originating from an untrusted network towards a private host or enclave.
For example:

* An untrusted network host connecting to a internal commercial portal, shopping.example.com
* An external mail server connecting to an internal mail server, mail.example.com

Filtering policies are developed by administrators to meet business requirements and limit connectivity. These policies are implemented on edge devices such as firewalls, routers, and intrusion prevention systems. Examples of filters:

* Blocking incoming traffic from spoofed internally facing IP addresses
* Blocking specific ports and services from establishing connections
* Limiting specific IP ranges from connecting to the network
* Dynamic inbound filtering (Hole punching, STUN, NAT-T)

## Considerations
* Business requirements typically drive the development of filtering rulesets
* Protocols using non-standard ports may circumvent filtering technology, which does not detect application protocol based on traffic content

## Implementations
* OpenWRT (Embedded)
* Netfilter (Linux)
* Windows Firewall
* pf(BSD)""" ;
    ns1:kb-reference ns1:Reference-ActiveFirewallSystemAndMethodology_McAfeeLLC,
        ns1:Reference-AutomaticallyGeneratingRulesForConnectionSecurity_Microsoft,
        ns1:Reference-FWTK-FirewallToolkit_,
        ns1:Reference-FirewallForInterentAccess_SecureComputingLLC,
        ns1:Reference-FirewallForProcessingAConnectionlessNetworkPacket_NationalSecurityAgency,
        ns1:Reference-FirewallForProcessingConnection-orientedAndConnectionlessDatagramsOverAConnection-orientedNetwork_NationalSecurityAgency,
        ns1:Reference-FirewallsThatFilterBasedUponProtocolCommands_IntelCorp,
        ns1:Reference-MethodForControllingComputerNetworkSecurity_CheckpointSoftwareTechnologiesLtd,
        ns1:Reference-NetworkFirewallWithProxy_SecureComputingLLC ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficFiltering .

ns1:IndirectBranchCallAnalysis a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Indirect Branch Call Analysis" ;
    ns1:d3fend-id "D3-IBCA" ;
    ns1:definition "Analyzing vendor specific branch call recording in order to detect ROP style attacks." ;
    ns1:kb-article """## How it works

This technique is used to detect an attacker attempting to exploit and execute code on a target system's call stack using return-oriented programming (ROP). Modern processors that have the ability to maintain a list of the branching calls, e.g., Intel's Last Branch Recording (LBR), can be used to track and analyze indirect branching calls that are indicative of malicious activity.

In order to reduce the number of indirect branch calls to analyze to a manageable set it is assumed that malicious ROP activity will involve the use of system calls.  The technique observes indirect branch calls that are part of paths that lead to system calls, all others are ignored. Branching calls chained together is often referred to as gadgets and gadgets are often used in ROP attacks. Indirect branch calls that involve a transfer from user-space to kernel-space are of interest for this technique.

Identification of potential ROP exploit execution includes:

- Inspecting the LBR when a system function call is made

  - The LBR is configured to return only instruction of interest (ret, indirect jmp, indirect calls)


- Behavior is analyzed for
  - Ret instructions that appear to target areas not preceded by the call sites
  - Sequences of small code fragments that appear to be chained through the indirect branching calls (gadgets)


- Of interest are returns that appear to not render control back after calls
  - Typical ret-call are paired
  - gadgets will appear to have ret followed by instruction of next instruction of the following gadget


## Considerations

* May be operating system dependent since specific system calls are used to scope branching behavoir
* Processors need to support access to a Last Branch Recording list feature
* The size of the LBR stack can limit the expected size of the analyzed execution stack
* If processor does not support LBR then overhead costs for the analysis can be significant""" ;
    ns1:kb-reference ns1:Reference-IndirectBranchingCalls ;
    rdfs:subClassOf ns1:ProcessAnalysis .

ns1:InputDeviceAnalysis a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Input Device Analysis" ;
    ns1:analyzes ns1:InputDevice ;
    ns1:d3fend-id "D3-IDA" ;
    ns1:definition "Operating system level mechanisms to prevent abusive input device exploitation." ;
    ns1:kb-article """## How it works

Input Device Hardening techniques filter certain commands, or disable related operating system functionality.

### Analytics

All of these values can be analyzed and compared to a baseline:

* Amount of input
* Duration of a single input
* Durations between inputs
* Value of input

Context can also include:

* User which is logged in, to include attributes such as physical location of the user
* Date and time
* System which is processing the input
* Source device of input, to include its properties (eg. manufacturer), configuration (eg. keyboard layout) and behavioral attributes of this device (eg. first use)
* Source system of input (local or remote system)
* Other hardware devices attached to the system


### Actions

Actions can include:

* Disabling the source device
* Sending an alert
* Locking the current session (eg. system screen lock, or returning to an authentication screen in a web app) and requiring one or more methods of authentication to continue
* Administratively disabling credentials for the account or the entire account -- the technique *Account Locking*


### Examples
A malicious input device sends many keystrokes with approximately the same delay between each.  This does not match the normal cadence of input, and the device is disabled.

Input to type the session user's name takes abnormally longer for each keystroke.  The system is locked to the password prompt screen.

A system receives key press events from two different devices -- one device sends keystrokes after the other has been idle for a long time.

A system receives physical input in a user session, while that user has sent input from a device located out of the country in the past hour.

Network traffic is suddenly routed through a new external device, and nearly the same volume of network traffic is subsequently sent out the previously existing interface.  The new external device is disabled, and an alert is raised to investigate the network configuration for a potential compromise.


## Considerations

Given some example of legitimate behavioral input patterns, attackers could mimic those input patterns, a technique which has been used in popular culture in the creation of Deepfake videos and [This Person Does Not Exist](https://thispersondoesnotexist.com).""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ContinuousAuthenticationByAnalysisOfKeyboardTypingCharacteristics_BradfordUniv.,UK>,
        ns1:Reference-www.biometric-solutions.com_keystroke-dynamics ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:InstantMessagingClient a owl:Class ;
    rdfs:label "Instant Messaging Client" ;
    ns1:definition "Client software used to engage in Instant Messaging, a type of online chat that offers real-time text transmission over the Internet. A LAN messenger operates in a similar way over a local area network. Short messages are typically transmitted between two parties, when each user chooses to complete a thought and select \"send\". Some IM applications can use push technology to provide real-time text, which transmits messages character by character, as they are composed. More advanced instant messaging can add file transfer, clickable hyperlinks, Voice over IP, or video chat." ;
    rdfs:isDefinedBy <https://dbpedia.org/wiki/Instant_messaging> ;
    rdfs:subClassOf ns1:CollaborativeSoftware .

ns1:IntegratedHoneynet a ns1:DecoyEnvironment,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Integrated Honeynet" ;
    ns1:d3fend-id "D3-IHN" ;
    ns1:definition "The practice of setting decoys in a production environment to entice interaction from attackers." ;
    ns1:kb-article """## How it works
Integrated honeynets use full production environments connected to the enterprise network, that utilize computing resources or software that attract attackers, and allow full interaction and access that provides a complete view of an attack.

## Considerations
An attacker with control of a system on an Integrated Honeynet could:
* try to attack other connected hosts on the network, its IP range of internal hosts not properly configured to react to connections from machines on the integrated honeynet, or position behind the firewall.
* exploit its position by eavesdropping on network traffic
If an attacker manages to stop the processes used to log an attack without setting off any alarms. [1]

1. Honeypots for Windows, Roger Grimes, 2005""" ;
    ns1:kb-reference ns1:Reference-SynchronizingAHoneyNetworkConfigurationToReflectATargetNetworkEnvironment_PaloAltoNetworksInc ;
    ns1:spoofs ns1:IntranetNetwork ;
    rdfs:subClassOf [ ],
        ns1:DecoyEnvironment .

ns1:IntegrationTestExecutionTool a owl:Class ;
    rdfs:label "Integration Test Execution Tool" ;
    ns1:definition "An integration test execution tool automatically performs integration testing.  Integration testing (sometimes called integration and testing, abbreviated I&T) is the phase in software testing in which individual software modules are combined and tested as a group." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Integration_testing> ;
    rdfs:subClassOf ns1:TestExecutionTool .

ns1:InternetDNSLookup a owl:Class ;
    rdfs:label "Internet DNS Lookup" ;
    ns1:definition "An internet Domain Name System (DNS) lookup is a DNS lookup made from a host on a network that is resolved after querying a DNS name server hosted on a different network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:DNSLookup .

ns1:InternetFileTransferTraffic a owl:Class ;
    rdfs:label "Internet File Transfer Traffic" ;
    ns1:definition "Internet file transfer network traffic is network traffic related to file transfers between network nodes that crosses a boundary between networks. This includes only network traffic conforming to standard file transfer protocols, not custom transfer protocols." ;
    rdfs:subClassOf ns1:FileTransferNetworkTraffic,
        ns1:InternetNetworkTraffic .

ns1:InternetNetwork a owl:Class ;
    rdfs:label "Internet Network" ;
    ns1:definition "A network of multiple, connected networks. Internetworking is the practice of connecting a computer network with other networks through the use of gateways that provide a common method of routing information packets between the networks. The resulting system of interconnected networks are called an internetwork, or simply an internet. Internetworking is a combination of the words inter (\"between\") and networking; not internet-working or international-network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:Network ;
    ns2:altLabel "Interconnected Network",
        "Internet",
        "Internetwork" .

ns1:IntranetDNSLookup a owl:Class ;
    rdfs:label "Intranet DNS Lookup" ;
    ns1:definition "An Intranet Domain Name System (DNS) lookup is a DNS lookup made from a host on a network that is resolved after querying a DNS name server hosted on a that same network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:DNSLookup .

ns1:IntranetRPCNetworkTraffic a owl:Class ;
    rdfs:label "Intranet RPC Network Traffic" ;
    ns1:definition "Intranet RPC network traffic is network traffic that does not cross a given network's boundaries and uses a standard remote procedure call (e.g., RFC 1050) protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet>,
        <http://dbpedia.org/resource/Remote_procedure_call> ;
    rdfs:subClassOf ns1:IntranetNetworkTraffic,
        ns1:RPCNetworkTraffic .

ns1:IntrusionPreventionSystem a owl:Class ;
    rdfs:label "Intrusion Prevention System" ;
    ns1:definition """Intrusion prevention systems (IPS), also known as intrusion detection and prevention systems (IDPS), are network security appliances that monitor network or system activities for malicious activity. The main functions of intrusion prevention systems are to identify malicious activity, log information about this activity, report it and attempt to block or stop it.

Intrusion prevention systems are considered extensions of intrusion detection systems because they both monitor network traffic and/or system activities for malicious activity. The main differences are, unlike intrusion detection systems, intrusion prevention systems are placed in-line and are able to actively prevent or block intrusions that are detected. IPS can take such actions as sending an alarm, dropping detected malicious packets, resetting a connection or blocking traffic from the offending IP address. An IPS also can correct cyclic redundancy check (CRC) errors, defragment packet streams, mitigate TCP sequencing issues, and clean up unwanted transport and network layer options.""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Intrusion_detection_system#Intrusion_prevention> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intrusion_detection_system> ;
    rdfs:subClassOf ns1:IntrusionDetectionSystem ;
    ns2:altLabel "IDPS",
        "IPS",
        "Intrusion Detection and Prevention System" .

ns1:JavaArchive a owl:Class ;
    rdfs:label "Java Archive" ;
    ns1:definition "A JAR (Java ARchive) is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file for distribution." ;
    rdfs:seeAlso <https://dbpedia.org/page/JAR_(file_format)> ;
    rdfs:subClassOf ns1:ArchiveFile,
        ns1:SoftwarePackage .

ns1:JobFunctionAccessPatternAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Job Function Access Pattern Analysis" ;
    ns1:analyzes ns1:Authorization ;
    ns1:d3fend-id "D3-JFAPA" ;
    ns1:definition "Detecting anomalies in user access patterns by comparing user access activity to behavioral profiles that categorize users by role such as job title, function, department." ;
    ns1:kb-article """## How it works
Peer group analysis identifies functionally similar groups of actors (users or resources) based on categorizations such as job title, organizational hierarchy, or other attribute that indicates similarity of job function. Current user access activity is then compared to the appropriate peer group behavior profile to identify anomalies.

## Considerations
Potential for false positives from anomalies that are not associated with malicious activity.""" ;
    ns1:kb-reference ns1:Reference-AnomalyDetectionUsingAdaptiveBehavioralProfiles_SecuronixInc ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:KerberosTicketGrantingServiceTicket a owl:Class ;
    rdfs:label "Kerberos Ticket Granting Service Ticket" ;
    ns1:definition "A Kerberos ticket-granting service (TGS) ticket is given in response to requesting a Kerberos TGS request." ;
    rdfs:subClassOf ns1:KerberosTicket ;
    ns2:altLabel "TGS Ticket" .

ns1:KernelAPISensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel API Sensor" ;
    ns1:definition "Monitors system calls (operating system api functions)." ;
    ns1:monitors ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:KioskComputer a owl:Class ;
    rdfs:label "Kiosk Computer" ;
    ns1:definition "An interactive kiosk is a computer terminal featuring specialized hardware and software that provides access to information and applications for communication, commerce, entertainment, or education. Early interactive kiosks sometimes resembled telephone booths, but have been embraced by retail, food service and hospitality to improve customer service and streamline operations. Interactive kiosks are typically placed in high foot traffic settings such as shops, hotel lobbies or airports." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Interactive_kiosk> ;
    rdfs:subClassOf ns1:SharedComputer ;
    ns2:altLabel "Interactive Kiosk" .

ns1:LaptopComputer a owl:Class ;
    rdfs:label "Laptop Computer" ;
    ns1:definition "A laptop computer (also laptop), is a small, portable personal computer (PC) with a \"clamshell\" form factor, typically having a thin LCD or LED computer screen mounted on the inside of the upper lid of the clamshell and an alphanumeric keyboard on the inside of the lower lid. The clamshell is opened up to use the computer. Laptops are folded shut for transportation, and thus are suitable for mobile use. Its name comes from lap, as it was deemed to be placed on a person's lap when being used. Although originally there was a distinction between laptops and notebooks (the former being bigger and heavier than the latter), as of 2014, there is often no longer any difference. Today, laptops are commonly used in a variety of settings, such as at work, in education, for playing games, web browsing" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Laptop> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    ns2:altLabel "Laptop",
        "Notebook" .

ns1:LocalAccountMonitoring a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Account Monitoring" ;
    ns1:analyzes ns1:LocalUserAccount ;
    ns1:d3fend-id "D3-LAM" ;
    ns1:definition "Analyzing local user accounts to detect unauthorized activity." ;
    ns1:kb-reference ns1:Reference-AuditUserAccountManagement,
        ns1:Reference-CAR-2016-04-004_SuccessfulLocalAccountLogin,
        ns1:Reference-OSQueryWindowsUserCollectionCode ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:LocalAuthenticationService a owl:Class ;
    rdfs:label "Local Authentication Service" ;
    ns1:definition "A local authentication service running on a host can authenticate a user logged into just that local host computer." ;
    rdfs:subClassOf ns1:AuthenticationService,
        ns1:SystemServiceSoftware .

ns1:LocalAuthorizationService a owl:Class ;
    rdfs:label "Local Authorization Service" ;
    ns1:definition "A local authorization service running on a host can authorize a user logged into just that local host computer." ;
    rdfs:subClassOf ns1:AuthorizationService,
        ns1:SystemServiceSoftware .

ns1:LocalFilePermissions a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local File Permissions" ;
    ns1:d3fend-id "D3-LFP" ;
    ns1:definition "Restricting access to a local file by configuring operating system functionality." ;
    ns1:kb-reference ns1:Reference-FileAndFolderPermissions ;
    ns1:restricts ns1:Directory,
        ns1:File ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:PlatformHardening .

ns1:LogMessageFunction a owl:Class ;
    rdfs:label "Log Message Function" ;
    ns1:definition "Produces an entry in a log." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:LogonUser a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logon User" ;
    ns1:authenticates ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:MandatoryAccessControl a ns1:Kernel-basedProcessIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mandatory Access Control" ;
    ns1:d3fend-id "D3-MAC" ;
    ns1:definition "Controlling access to local computer system resources with kernel-level capabilities." ;
    ns1:isolates ns1:Process ;
    ns1:kb-article """## How it works
Mandatory access control is a non-discretionary access control system because the rules and polices that determine access is determined by a security control authority and not distributed to local users. Access determinations are based on designed access control polices and are not based on local resource owner determinations.

Access is typically granted by defining sets of subjects and sets of objects. Subjects are the entities requesting access and objects are the resources that subjects are trying to access. Rules and policies are defined that associate subjects and object permissions and access controls.

### Common MAC implementations
#### Security label access control
A fine-grained form of mandatory access control is to apply security labels to individual resources, including processes, and the access control decisions are against a particular resource and a given user attempting to gain access. This type of MAC requires that the file system has built-in support for security labels.

Access controls are typically implemented through the use of label identifiers for every file system object. Identifier labels are applied to resources and users are assigned a similar access identifier. Users attempting to access a resource will result in the operating system performing an access control check. The access control check will compare the assigned user's credentials to that of the resource or object they are attempting to access.

A security context is associated with resources and is used to determine assess. Typical basic access control elements include users, roles and types and together they form a security context which is the basis for the security labels.

This type of access control is what is employed in SELinux [2]. This form of MAC is considered the most flexible implementation, but it also is the most complex to deploy across the enterprise. Where multiple virtual machines (VM) are run together this type of access control is typically employed to ensure true isolation of processes and VMs.

#### File path level controls
A less fine-grained form of mandatory access control is to apply security labels that allow for access control at the file path level.  Access control is filesystem agnostic and no relabeling of resources is required. Pathname access control usually seems more natural for implementation and corresponding access audits.

This type of MAC is what is employed in AppArmor [3]. AppArmor was developed to provide a simpler alternative MAC method with much less management overhead. A simple access policy is maintained that defines path resource access rules. Access control attributes are typically associated with programs instead of users.


## Considerations
Some implementations of security label mandatory access control contain complex rules set that are hard to verify and complex to maintain over time.

Initial planning of access model and continuous monitoring of the available users, resources and object is necessary.

## Implementations

 * Linux C-Groups, and policy engines like SELinux and AppArmor
 * Windows Mandatory Integrity Control introduced in Windows Vista


### Citations
1. [Implementation of Mandatory Access Control in Distributed Systems](https://link.springer.com/article/10.3103/S0146411618080357)
2. [SELinux](https://selinuxproject.org/)
3. [AppArmor](https://www.apparmor.net/)""" ;
    ns1:kb-reference ns1:Reference-AnalysisOfTheWindowsVistaSecurityModel_SymantecCorporation,
        ns1:Reference-ArchitectureOfTransparentNetworkSecurityForApplicationContainers_NeuvectorInc ;
    ns1:restricts ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Kernel-basedProcessIsolation .

ns1:MathematicalFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mathematical Function" ;
    ns1:definition "Computes mathematical expressions." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:MediaServer a owl:Class ;
    rdfs:label "Media Server" ;
    ns1:definition "A media server is a computer appliance or an application software that stores digital media (video, audio or images) and makes it available over a network. Media servers range from servers that provide video on demand to smaller personal computers or NAS (Network Attached Storage) for the home." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Media_server> ;
    rdfs:subClassOf ns1:Server .

ns1:MemoryAllocationFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Allocation Function" ;
    ns1:definition "Reserves memory for a running process to use." ;
    ns1:invokes ns1:AllocateMemory ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:MemoryBoundaryTracking a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Boundary Tracking" ;
    ns1:analyzes ns1:ProcessCodeSegment ;
    ns1:d3fend-id "D3-MBT" ;
    ns1:definition "Analyzing a call stack for return addresses which point to unexpected  memory locations." ;
    ns1:kb-article """## How it works
This technique monitors for indicators of whether a return address is outside memory previously allocated for an object (i.e. function, module, process, or thread). If so, code that the return address points to is treated as malicious code.

## Considerations
Kernel malware can manipulate memory contents, for example modifying pointers to hide processes, and thereby impact the accuracy of memory allocation information used to perform the analysis.""" ;
    ns1:kb-reference ns1:Reference-InferentialExploitAttemptDetection_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:MemoryFreeFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Free Function" ;
    ns1:definition "Releases previously reserved memory associated with a process." ;
    ns1:invokes ns1:FreeMemory ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:MemoryPool a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Pool" ;
    ns1:contains ns1:MemoryBlock ;
    ns1:definition "Memory pools, also called fixed-size blocks allocation, is the use of pools for memory management… preallocating a number of memory blocks with the same size called the memory pool. The application can allocate, access, and free blocks represented by handles at run time." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Memory_pool" ;
    rdfs:subClassOf [ ],
        ns1:MemoryExtent .

ns1:MessageAuthentication a ns1:MessageHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Authentication" ;
    ns1:authenticates ns1:UserToUserMessage ;
    ns1:d3fend-id "D3-MAN" ;
    ns1:definition "Authenticating the sender of a message and ensuring message integrity." ;
    ns1:kb-article """## How it works

### Digital Signature
Digital signatures are used to verifying a message is from the expected sender. In email, Secure/Multipurpose Internet Mail Extensions (S/MIME) protocol is typically used to digitally sign messages. A hash value of the sender's message is created and encrypted with the sender's private key to create a digital signature. The message and the digital signature are sent to the recipient where the sender's public key is used to decrypt the digital signature and compute the hash of the message. The computed hash is compared with the hash from the received message, and any difference in the hash values signify the message did not originate from the sender and has been alerted in transit.

### Message Authentication Code (MAC)
MAC is a fixed size string that is appended to a message to provide message authentication and integrity. The sender MAC signing algorithm takes as input a secret symmetric key shared between sender and recipient and the message to calculate a short tag that is appended to the message. The recipient receives the message with the appended tag, and a MAC verification algorithm is run using the symmetric key to verify the message came from the stated sender and ensure the message has not been tampered with.

## Considerations
- Public keys associated with digital signatures should be verified by a Certification Authority (CA) to prevent impersonation. The CA verifies the owner of a public key and puts the sender's identity and public key into a certificate that is signed by the CA.
- Digital signatures provide non-repudiation where a third party can verify the authenticity of the message using the sender's digital certificate signed by the CA.
- Symmetric keys must be exchanged securely via a private channel and management of new symmetric keys are needed for each pair of participants wishing to exchange messages.""" ;
    ns1:kb-reference ns1:Reference-DomainKeysIdentifiedMail-Signatures-IETF,
        ns1:Reference-SecureMultipurposeInternetMailExtensionsMIME-Version3.1 ;
    rdfs:subClassOf [ ],
        ns1:MessageHardening .

ns1:MessageEncryption a ns1:MessageHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Encryption" ;
    ns1:d3fend-id "D3-MENCR" ;
    ns1:definition "Encrypting a message body using a cryptographic key." ;
    ns1:encrypts ns1:UserToUserMessage ;
    ns1:kb-article """## How it works

### Asymmetric Cryptography
Asymmetric encryption is typically accomplished using public and private key certificates based on the X.509 standard. The sender encrypts messages using the recipient's public key and the receipt decrypts the message using their private key. Standards that can be used to implement message encryption include S/MIME (Secure/Multipurpose Internet Mail Extensions) and PGP.
### Symmetric Cryptography
Symmetric encryption uses the same cryptographic key by both the sender and receiver to encrypt and decrypt a message. Asymmetric key exchange protocols such as Diffie-Hellman can be used to share the cryptographic key with the recipient.

## Considerations
- Separate configuration settings to enable message encryption are often needed for each messenger client (e.g. webmail, desktop client, mobile).
- Continuous monitoring to ensure private keys are not compromised and the certificate authority (CA) is trusted.
- Secure transfer of private keys between multiple devices.""" ;
    ns1:kb-reference ns1:Reference-SecureMultipurposeInternetMailExtensionsMIME-Version3.1 ;
    rdfs:subClassOf [ ],
        ns1:MessageHardening .

ns1:Microcode a owl:Class ;
    rdfs:label "Microcode" ;
    ns1:definition "Microcode is a computer hardware technique that interposes a layer of organization between the CPU hardware and the programmer-visible instruction set architecture of the computer. As such, the microcode is a layer of hardware-level instructions that implement higher-level machine code instructions or internal state machine sequencing in many digital processing elements." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Microcode> ;
    rdfs:subClassOf ns1:Firmware .

ns1:MobilePhone a owl:Class ;
    rdfs:label "Mobile Phone" ;
    ns1:definition "A mobile phone, cellular phone, cell phone, cellphone or hand phone, sometimes shortened to simply mobile, cell or just phone, is a portable telephone that can make and receive calls over a radio frequency link while the user is moving within a telephone service area. The radio frequency link establishes a connection to the switching systems of a mobile phone operator, which provides access to the public switched telephone network (PSTN). Modern mobile telephone services use a cellular network architecture and, therefore, mobile telephones are called cellular telephones or cell phones in North America. In addition to telephony, digital mobile phones (2G) support a variety of other services, such as text messaging, MMS, email, Internet access, short-range wireless communications (infrared," ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Mobile_phone> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    ns2:altLabel "Cellphone",
        "Cellular Phone" .

ns1:MouseInputDevice a owl:Class ;
    rdfs:label "Mouse Input Device" ;
    ns1:definition "A computer mouse (plural mice or mouses) is a hand-held pointing device that detects two-dimensional motion relative to a surface. This motion is typically translated into the motion of a pointer on a display, which allows a smooth control of the graphical user interface of a computer. In addition to moving a cursor, computer mice have one or more buttons to allow operations such as selection of a menu item on a display. Mice often also feature other elements, such as touch surfaces and scroll wheels, which enable additional control and dimensional input." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_mouse> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Pointing_device> ;
    rdfs:subClassOf ns1:InputDevice ;
    ns2:altLabel "Computer Mouse" .

ns1:Multi-factorAuthentication a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multi-factor Authentication" ;
    ns1:authenticates ns1:UserAccount ;
    ns1:d3fend-id "D3-MFA" ;
    ns1:definition "Requiring proof of two or more pieces of evidence in order to authenticate a user." ;
    ns1:kb-article """## How it works
When logging into an account users present two or more credentials that fall into different categories: something you know (password or PIN), something you have (smart card or phone), or something you are (fingerprint).

## Considerations
MFA configuration steps may vary across accounts and in some cases left up to users to activate and implement.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-MethodAndApparatusForUtilizingATokenForResourceAccess_RsaSecurityInc.> ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:NTFSHardLink a owl:Class ;
    rdfs:label "NTFS Hard Link" ;
    ns1:definition "An NTFS hard link points to another file, and files share the same MFT entry (inode), in the same filesystem." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/NTFS_links> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:HardLink,
        ns1:NTFSLink .

ns1:NTFSJunctionPoint a owl:Class ;
    rdfs:label "NTFS Junction Point" ;
    ns1:definition "NTFS junction points are are similar to NTFS symlinks but are defined only for directories. Only accepts local absolute paths." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/NTFS_links> ;
    rdfs:subClassOf ns1:NTFSLink,
        ns1:SymbolicLink ;
    ns2:altLabel "Junction Point" .

ns1:NTFSSymbolicLink a owl:Class ;
    rdfs:label "NTFS Symbolic Link" ;
    ns1:definition "An NTFS symbolic link records the path of another file that the links contents should show. Can accept relative paths. SMB networking (UNC path) and directory support added in NTFS 3.1." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/NTFS_links> ;
    rdfs:subClassOf ns1:NTFSLink,
        ns1:SymbolicLink ;
    ns2:altLabel "NTFS Symlink" .

ns1:NetworkCardFirmware a owl:Class ;
    rdfs:label "Network Card Firmware" ;
    ns1:definition "Firmware that is installed on a network card (network interface controller)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Network_interface_controller> ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    ns2:altLabel "Network Controller Firmware" .

ns1:NetworkDirectoryResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Directory Resource" ;
    ns1:contains ns1:Directory ;
    ns1:definition "A directory resource made available from one host to other hosts on a computer network." ;
    rdfs:subClassOf [ ],
        ns1:NetworkFileShareResource .

ns1:NetworkFlowSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Flow Sensor" ;
    ns1:definition "Monitors network traffic and produces summaries of data flows traversing the network." ;
    ns1:monitors ns1:NetworkFlow ;
    rdfs:subClassOf [ ],
        ns1:NetworkSensor .

ns1:NetworkLink a owl:Class ;
    rdfs:label "Network Link" ;
    ns1:definition "A network link is a link within the network layer, which is responsible for packet forwarding including routing through intermediate routers." ;
    ns1:synonym "Layer-3 Link",
        "Network Layer Link" ;
    rdfs:seeAlso "https://dbpedia.org/resource/Network_layer",
        "https://www.techtarget.com/searchnetworking/definition/Network-layer" ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:NetworkNodeInventory a ns1:AssetInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Node Inventory" ;
    ns1:d3fend-id "D3-NNI" ;
    ns1:definition "Network node inventorying identifies and records all the network nodes (hosts, routers, switches, firewalls, etc.) in the organization's architecture." ;
    ns1:inventories ns1:NetworkNode ;
    ns1:kb-article """## How it works
Administrators collect information on network nodes in their architecture using a variety of administrative and management tools that query network devices and nodes for information.  In some cases, where such queries are not supported or provide specific information of interest, an administrator may also collect this information through network enumeration methods to include host discovery and scanning for active ports and services.

## Considerations
* Scanning and probing techniques using mapping tools can result in side effects to information technology (IT) and operational technology (OT) systems.
* An adversary conducting network enumeration may engage in activities that parallel normal hardware inventorying activities, but would require escalating to admin privileges for most of the operations requiting administrative tools

## Examples
* Link-layer discovery
   * Link-layer Discovery Protocol (LLDP)
   * Cisco Discovery Protocol (CDP)
* Application-layer discovery
   * Simple Network Management Protocol (SNMP) collects MIB information
   * Web-based Enterprise Management (WBEM) collects CIM information
      * Windows Management Instrumentation (WMI)
      * Windows Management Infrastructure (MI)""" ;
    ns1:kb-reference ns1:Reference-IEEE-802_1AB-2016,
        ns1:Reference-QualysNetworkPassiveSensorGettingStartedGuide,
        ns1:Reference-RFC3411-AnArchitectureForDescribingSimpleNetworkManagementProtocolSNMPManagementFrameworks,
        ns1:Reference-Web-BasedEnterpriseManagement,
        ns1:Reference-Windows-Management-Infrastructure,
        ns1:Reference-Windows-Management-Instrumentation ;
    ns1:synonym "System Discovery",
        "System Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:NetworkPrinter a owl:Class ;
    rdfs:label "Network Printer" ;
    ns1:definition "In computing, a network printer is a device that can be accessed over a network which makes a persistent representation of graphics or text, usually on paper. While most output is human-readable, bar code printers are an example of an expanded use for printers. The different types of printers include 3D printer, inkjet printer, laser printer, thermal printer, etc.  Note that not all printers are networked and the digital information to be printed must be passed either by removable media or as directly connecting the printer to a computer (e.g., by USB.)" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Printer_(computing)> ;
    rdfs:subClassOf ns1:SharedComputer .

ns1:NetworkProtocolAnalyzer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Protocol Analyzer" ;
    ns1:definition "Monitors and parses network protocols to extract values from various network protocol layers." ;
    ns1:monitors ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:NetworkSensor .

ns1:NetworkTrafficAnalysisSoftware a ns1:DigitalArtifact,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Analysis Software" ;
    ns1:definition "A packet analyzer, also known as packet sniffer, protocol analyzer, or network analyzer, is a computer program or computer hardware such as a packet capture appliance, that can intercept and log traffic that passes over a computer network or part of a network." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Packet_analyzer> ;
    rdfs:seeAlso <https://dbpedia.org/resource/Category:Network_analyzers> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    ns2:altLabel "Network Sniffer" .

ns1:NetworkTrafficCommunityDeviation a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Community Deviation" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-NTCD" ;
    ns1:definition "Establishing baseline communities of network hosts and identifying statistically divergent inter-community communication." ;
    ns1:kb-article """## How it works
Hosts/users within a computer network are analyzed to identify communities of hosts which frequently communicate. Future communications between communities that don't usually communicate can then be detected.  For example, if a community of hosts that communicate in support of a company's finance division suddenly starts to access the code server usually accessed only by engineers, this may indicate unauthorized activity.

## Considerations
* Potential for false positives in very dynamic network environments.
* Attackers that move low and slow may not differentiate their behavior enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-SystemForImplementingThreatDetectionUsingDailyNetworkTrafficCommunityOutliers_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:NetworkTrafficPolicyMapping a ns1:NetworkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Policy Mapping" ;
    ns1:d3fend-id "D3-NTPM" ;
    ns1:definition "Network traffic policy mapping identifies and models the allowed pathways of data at the network, tranport, and/or application levels." ;
    ns1:kb-reference ns1:Reference-CiscoASR9000AccessListCommands ;
    ns1:maps ns1:AccessControlConfiguration ;
    ns1:queries ns1:CollectorAgent ;
    ns1:synonym "DLP Policy Mapping",
        "Firewall Mapping",
        "IPS Policy Mapping",
        "Web Security Gateway Policy Mapping" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkMapping .

ns1:NetworkVulnerabilityAssessment a ns1:NetworkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Vulnerability Assessment" ;
    ns1:d3fend-id "D3-NVA" ;
    ns1:definition "Network vulnerability assessment relates all the vulnerabilities of a network's components in the context of their configuration and interdependencies and can also include assessing risk emerging from the network's design as a whole, not just the sum of individual network node or network segment vulnerabilities." ;
    ns1:evaluates ns1:Network ;
    ns1:identifies ns1:Vulnerability ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkMapping .

ns1:One-timePassword a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "One-time Password" ;
    ns1:authenticates ns1:UserAccount ;
    ns1:d3fend-id "D3-OTP" ;
    ns1:definition "A one-time password is valid for only one user authentication." ;
    ns1:kb-article """## How it works

When a user initiates authentication, they are asked for a one-time password, often in addition to other credentials such as a traditional password or smart card. The one-time password may be from a list provided in advance, sent via a channel such as SMS or HTTPS to an app, or a generated token.

In the case of a physical token which generates one-time passwords incrementally based on time elapsed, that token device need not be connected to the internet. In different implementations, an administrator of the system, or a user with additional verification, can adjust for clock skew between the token and the verification system as needed.

## Considerations

### Compromise of delivery channel
- SIM Swapping
- Secure token visual compromise
- Insecure delivery channel

### Compromise of delivery device
Physical loss of One-time Password device.

### Compromise of long-term backup codes
These are often provided in the form of a downloadable document with a regular name, which can be searched for in the case that the user forgets where they put them.  This digital file or printed document could be stolen.
Additionally, after the code file is printed, it could be recovered from the system printer spool unless the spooler cache is cleared.""" ;
    ns1:kb-reference ns1:Reference-RFC2289-AOne-TimePasswordSystem ;
    ns1:synonym "OTP" ;
    ns1:use-limits ns1:Password ;
    rdfs:seeAlso <http://dbpedia.org/resource/One-time_password> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialHardening .

ns1:OperatingSystemPackagingTool a owl:Class ;
    rdfs:label "Operating System Packaging Tool" ;
    ns1:definition "A software packaging tool oriented on building a software package for a particular operating system (e.g. rpmbuild.)" ;
    rdfs:subClassOf ns1:SoftwarePackagingTool .

ns1:OperationalDependencyMapping a ns1:OperationalActivityMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operational Dependency Mapping" ;
    ns1:d3fend-id "D3-ODM" ;
    ns1:definition "Operational dependency mapping identifies and models the dependencies of the organization's activities on each other and on the organization's performers (people, systems, and services.)  This may include modeling the higher- and lower-level activities of an organization forming a hierarchy, or layering, of the dependencies in an organization's activities." ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-CyberCommandSystemCYCS,
        ns1:Reference-DaggerFactSheet,
        ns1:Reference-DaggerModelingAndVisualizationForMissionImpactSituationalAwareness,
        ns1:Reference-MissionDependencyModelingForCyberSituationalAwareness,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:Dependency,
        ns1:OrganizationalActivity ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:OperationalRiskAssessment a ns1:OperationalActivityMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operational Risk Assessment" ;
    ns1:d3fend-id "D3-ORA" ;
    ns1:definition "Operational risk assessment identifies and models the vulnerabilities of, and risks to, an organization's activities individually and as a whole." ;
    ns1:evaluates ns1:Organization ;
    ns1:identifies ns1:Vulnerability ;
    ns1:kb-reference ns1:Reference-MGT516ManagingSecurityVulnerabilitiesEnterpriseAndCloud,
        ns1:Reference-NIST-RMF-Quick-Start-Guide-Assess-Step-FAQ,
        ns1:Reference-NIST-Special-Publication-800-160-Volume-1,
        ns1:Reference-NIST-Special-Publication-800-37-Revision-2,
        ns1:Reference-NIST-Special-Publication-800-53A-Revision-5,
        ns1:Reference-NISTIR-8011-Volume-1 ;
    ns1:synonym "Mission Risk Assessment" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:OperationsCenterComputer a owl:Class ;
    rdfs:label "Operations Center Computer" ;
    ns1:definition "Mainframe computers or mainframes (colloquially referred to as \"big iron\") are computers used primarily by large organizations for critical applications; bulk data processing, such as census, industry and consumer statistics, and enterprise resource planning; and transaction processing. They are larger and have more processing power than some other classes of computers: minicomputers, servers, workstations, and personal computers." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Mainframe_computer> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Time-sharing> ;
    rdfs:subClassOf ns1:SharedComputer ;
    ns2:altLabel "Mainframe" .

ns1:OpticalModem a owl:Class ;
    rdfs:label "Optical Modem" ;
    ns1:definition "A modem that connects to a fiber optic network is known as an optical network terminal (ONT) or optical network unit (ONU). These are commonly used in fiber to the home installations, installed inside or outside a house to convert the optical medium to a copper Ethernet interface, after which a router or gateway is often installed to perform authentication, routing, NAT, and other typical consumer internet functions, in addition to \"triple play\" features such as telephony and television service." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem#Optical_modem> ;
    rdfs:subClassOf ns1:Modem .

ns1:OrchestrationController a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Orchestration Controller" ;
    ns1:contains ns1:ContainerOrchestrationSoftware ;
    ns1:definition "An orchestration server provides orchestration services that automate the configuration, coordination, and management of computer systems and software." ;
    rdfs:subClassOf [ ],
        ns1:OrchestrationServer .

ns1:OrchestrationWorker a owl:Class ;
    rdfs:label "Orchestration Worker" ;
    ns1:definition "A d3f:Server which receives commands from a d3f:OrchestrationController to execute workloads." ;
    rdfs:seeAlso "d3f:OrchestrationController" ;
    rdfs:subClassOf ns1:OrchestrationServer .

ns1:OrganizationMapping a ns1:OperationalActivityMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Organization Mapping" ;
    ns1:d3fend-id "D3-OM" ;
    ns1:definition "Organization mapping identifies and models the people, roles, and groups with an organization and the relations between them." ;
    ns1:display-order 4 ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-OrganizationalManagementInSAPERPHCM,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:Dependency,
        ns1:Organization,
        ns1:Person ;
    ns1:may-map ns1:OrganizationalActivity ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:OutboundInternetRPCTraffic a owl:Class ;
    rdfs:label "Outbound Internet RPC Traffic" ;
    ns1:definition "Outbound internet RPC traffic is RPC traffic that is: (a) on an outgoing connection initiated from a host within a network to a host outside the network, and (b) using a standard RPC protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking>,
        <http://dbpedia.org/resource/Remote_procedure_call> ;
    rdfs:subClassOf ns1:OutboundInternetNetworkTraffic,
        ns1:OutboundNetworkTraffic,
        ns1:RPCNetworkTraffic .

ns1:OutboundTrafficFiltering a ns1:NetworkTrafficFiltering,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Traffic Filtering" ;
    ns1:d3fend-id "D3-OTF" ;
    ns1:definition "Restricting network traffic originating from a private host or enclave destined towards untrusted networks." ;
    ns1:filters ns1:OutboundNetworkTraffic ;
    ns1:kb-article """## How it works

Outbound traffic, in this context, is network traffic originating from a private host or enclave destined towards untrusted networks.
For example:

* An enterprise desktop intranet user connecting to www.example.com
* An internal mail server connecting to an external mail server, mail.example.com

Filtering is commonly implemented as firewall rulesets to limit outbound traffic permitted to egress a host or network. Firewalls are deployed either directly on hosts through kernel level software implementations or installed in-line directly on network links. There are benefits and disadvantages to each approach.

There are various strategies for developing filtering rulesets:

* Block everything by default
* Limit destination hosts
* Limit destination transport or application protocols
* Restrict content outbound (Ex. strings formatted as social security numbers, or proprietary data)

## Considerations
* Dynamic IP assignment creates challenges for Outbound Traffic Filtering because users are not necessarily associated with the same IP address. This can be addressed by linking IP address management information with the filtering logic.
* Connections using non-standard transport layer ports may circumvent outbound traffic filtering technology which does not detect application protocol based on traffic content.
* Business requirements typically drive the development of filtering rule sets.

## Implementations
- iptables (Linux)
- Windows Firewall
- pf (BSD)""" ;
    ns1:kb-reference ns1:Reference-AutomaticallyGeneratingRulesForConnectionSecurity_Microsoft ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficFiltering .

ns1:POSIXSymbolicLink a owl:Class ;
    rdfs:label "POSIX Symbolic Link" ;
    ns1:definition "A POSIX-compliant symbolic link.  These are often fast symbolic links, but need not be." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Symbolic_link> ;
    rdfs:subClassOf ns1:SymbolicLink,
        ns1:UnixLink .

ns1:PacketLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Packet Log" ;
    ns1:definition "A log of all the network packet data captured from a network by a network sensor (i.e., packet analyzer)," ;
    ns1:records ns1:NetworkSession ;
    rdfs:seeAlso <http://dbpedia.org/resource/Packet_analyzer> ;
    rdfs:subClassOf [ ],
        ns1:Log .

ns1:Page a owl:Class ;
    rdfs:label "Page" ;
    ns1:definition "A page, memory page, logical page, or virtual page is a fixed-length contiguous block of virtual memory, described by a single entry in the page table. It is the smallest unit of data for memory management in a virtual memory operating system." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Page_(computer_memory)" ;
    rdfs:subClassOf ns1:MemoryBlock .

ns1:ParentProcess a owl:Class ;
    rdfs:label "Parent Process" ;
    ns1:definition "In computing, a parent process is a process that has created one or more child processes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Parent_process> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Child_process> ;
    rdfs:subClassOf ns1:Process .

ns1:PassiveLogicalLinkMapping a ns1:LogicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Passive Logical Link Mapping" ;
    ns1:d3fend-id "D3-PLLM" ;
    ns1:definition "Passive logical link mapping only listens to network traffic as a means to map the the whole data link layer, where the links represent logical data flows rather than physical connections." ;
    ns1:kb-reference ns1:Reference-TenablePassiveNetworkMonitoring ;
    ns1:synonym "Passive Logical Layer Mapping" ;
    rdfs:subClassOf ns1:LogicalLinkMapping .

ns1:PasswordManager a owl:Class ;
    rdfs:label "Password Manager" ;
    ns1:definition "A password manager is a software application or hardware that helps a user store and organize passwords. Password managers usually store passwords encrypted, requiring the user to create a master password: a single, ideally very strong password which grants the user access to their entire password database. Some password managers store passwords on the user's computer (called offline password managers), whereas others store data in the provider's cloud (often called online password managers). However offline password managers also offer data storage in the user's own cloud accounts rather than the provider's cloud. While the core functionality of a password manager is to securely store large collections of passwords, many provide additional features such as form filling and password generation." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Password_manager> ;
    rdfs:subClassOf ns1:Application .

ns1:PerHostDownload-UploadRatioAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Per Host Download-Upload Ratio Analysis" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-PHDURA" ;
    ns1:definition "Detecting anomalies that indicate malicious activity by comparing the amount of data downloaded versus data uploaded by a host." ;
    ns1:kb-article """## How it works
Aggregate pull vs. push ratios from metadata are used to develop a baseline for a given host over a specific time period, e.g., over a three-hour period, one day, one week, etc. Anomalies identified over a threshold produce an alert.

## Considerations
Collection and analysis of large network packet captures requires large storage and intensive computing power. The time windows used to calculate the ratio may vary in implementations, this consideration should take into account a threat model and likely effects (impacts) delivered by an adversary.""" ;
    ns1:kb-reference ns1:Reference-SystemForDetectingThreatsUsingScenario-basedTrackingOfInternalAndExternalNetworkTraffic_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:PeripheralFirmwareVerification a ns1:FirmwareVerification,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Peripheral Firmware Verification" ;
    ns1:d3fend-id "D3-PFV" ;
    ns1:definition "Cryptographically verifying peripheral firmware integrity." ;
    ns1:kb-article """# How it works
Peripherial firmware is collected and  analyzed on a host either periodically or on demand. This information may be collected for future comparisons.

Changes in firmware hash values may indicate that the firmware has been tampered with or that firmware images are not maintained to current baselined versions, or even known vulnerable versions are deployed.

## Considerations
* Trust baselines will need to be generated for specific devices
* Changes to trusted configurations will need to be managed across the enterprise""" ;
    ns1:kb-reference ns1:Reference-FirmwareVerificationEclypsium,
        ns1:Reference-FirmwareVerificationTrapezoid ;
    ns1:verifies ns1:PeripheralFirmware ;
    rdfs:subClassOf [ ],
        ns1:FirmwareVerification .

ns1:PeripheralHubFirmware a owl:Class ;
    rdfs:label "Peripheral Hub Firmware" ;
    ns1:definition "Firmware that is installed on peripheral hub device such as a USB or Firewire hub." ;
    rdfs:seeAlso <http://dbpedia.org/resource/USB_hub> ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    ns2:altLabel "USB Hub Firmware" .

ns1:Platform a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Platform" ;
    ns1:contains ns1:Firmware,
        ns1:HardwareDevice,
        ns1:OperatingSystem ;
    ns1:definition "Platform includes the hardware and OS. The term computing platform can refer to different abstraction levels, including a certain hardware architecture, an operating system (OS), and runtime libraries. In total it can be said to be the stage on which computer programs can run." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Computing_platform> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Computer Platform" .

ns1:PointerAuthentication a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pointer Authentication" ;
    ns1:authenticates ns1:Pointer ;
    ns1:d3fend-id "D3-PAN" ;
    ns1:definition "Comparing the cryptographic hash or derivative of a pointer's value to an expected value." ;
    ns1:kb-article """## How It Works

Pointer Authentication (frequently referred to as PAC, although the technique is properly Pointer Authentication) is a security feature to provide protection against attackers with memory read/write access.  A Pointer Authentication Code (PAC) is a cryptographic hash or derivative computed on the value of a pointer and some additional context information which can then provide a cryptographically strong guarantee about the likelihood that a pointer has been tampered with by an attacker.

Although pointers are 64 bits, most systems have a substantially smaller virtual address space, leaving unused bits in pointers that can store the value of the PAC, this can be done to reduce memory space requirements. One implementation is in ARMv8.3-A.  A PAC is computed over the 64-bit pointer value and a 64-bit context value.  Instructions are introduced to deal with pointers: one category to compute and insert the PAC into a pointer, another category to verify the pointer and invalidate the pointer if the PAC does not check, and a third category to remove the pointer and restore the original value without verifying.

The ARM standard specifies a cryptographic algorithm called QARMA-64 (designed by Qualcomm) to compute the signature, although this algorithm is not required.  The architecture provides for five secret 128-bit Pointer Authentication keys: two for instruction pointers, two for data pointers, and a general key for signing larger blocks of data.

## Considerations

In the ARM implementation, the mechanisms above for manipulating PACS are provided, but it is up to the code developer to manage the keys for the cryptographic algorithm.


A known potential limitation of PACs concerns signing gadgets. Under certain circumstances PACs can be bypassed by forcing the system to run a signing gadget which will allow the signing of arbitrary pointers to occur.""" ;
    ns1:kb-reference ns1:Reference-PointerAuthenticationOnARMv8.3,
        ns1:Reference-PointerAuthenticationProjectZero ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:PointerDereferencingFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pointer Dereferencing Function" ;
    ns1:addresses ns1:MemoryBlock,
        ns1:Pointer ;
    ns1:definition "A function which has an operation which dereferences a pointer." ;
    rdfs:comment "Note, this is not the actual code which performs the dereferencing operation internal to an application runtime." ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Subroutine .

ns1:PrintServer a owl:Class ;
    rdfs:label "Print Server" ;
    ns1:definition "A print server, or printer server, is a device that connects printers to client computers over a network. It accepts print jobs from the computers and sends the jobs to the appropriate printers, queuing the jobs locally to accommodate the fact that work may arrive more quickly than the printer can actually handle." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Print_server> ;
    rdfs:subClassOf ns1:Server .

ns1:PrivilegedUserAccount a owl:Class ;
    rdfs:label "Privileged User Account" ;
    ns1:definition "A privileged account is a user account that has more privileges than ordinary users. Privileged accounts might, for example, be able to install or remove software, upgrade the operating system, or modify system or application configurations. They might also have access to files that are not normally accessible to standard users. Typical examples are root and administrator accounts. But there also service accounts, system accounts, etc. Privileged accounts are especially powerful, and should be monitored especially closely." ;
    rdfs:isDefinedBy <https://www.ssh.com/iam/user/privileged-account> ;
    rdfs:seeAlso <https://www.cyberark.com/resources/blog/7-types-of-privileged-accounts-service-accounts-and-more> ;
    rdfs:subClassOf ns1:UserAccount .

ns1:ProcessCodeSegmentVerification a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Code Segment Verification" ;
    ns1:d3fend-id "D3-PCSV" ;
    ns1:definition "Comparing the \"text\" or \"code\" memory segments to a source of truth." ;
    ns1:kb-article """## How it works
A process code segment is an executable portion of computer memory allocated to a particular process. Process Code Segment Verification implements verification to compare a process code segment to some expected value.

### Verification logic
Verification can occur during application startup, or continuously during execution. The logic which verifies the process code may be separate in a third-party process, embedded in the application itself at compile time, or dynamically linked at runtime.

### System of record
Examples of systems of record:

 * On-disk application binary files or checksums
 * Remotely stored binary data or checksums
 * Embedded binary data or checksums

### Post Verification Actions
If the verification function determines a process code segment may have been altered, a capability may invoke Eviction techniques  as **Process Termination** to end the current process, or **Executable Blacklisting** to prevent the executable from launching in the future.

## Considerations

### False positives

False positives commonly occur in the case that the layout of code in the process segment is legitimately modified:

*  Operating system features or third-party security software may modify the layout of process code, for example in the defensive technique **Segment Address Offset Randomization**, or in the case that a module is rebased.  In both of these cases, the alteration occurs before the code is fully loaded into memory, and it would be possible to avoid the false positive by securely feeding this constant offset and any relocation data into the verification logic.

* Process code segments may be written to modify themselves or other process code segments; however, this goes against widely-accepted current practices in software development.

### False negatives

False negatives can occur via alteration of the verification logic or source of truth, or insufficient verification logic.

* Verification techniques which are executed only locally may be defeated by altering the local verification logic.

* Verification that is run only on a recurring basis could be evaded if the malicious alteration is completed before verification is run.

* Verification that requests an operation to be performed on a subset of the code segment could be evaded by performing that operation on a copy of the relevant bytes of the code segment.

* Verification based on a system of record that can be altered may fail if that system of record is modifiable by a malicious user.""" ;
    ns1:kb-reference ns1:Reference-Anti-tamperSystemWithSelf-adjustingGuards_ARXANTECHNOLOGIESInc,
        ns1:Reference-GuardsForApplicationInSoftwareTamperproofing_PurdueResearchFoundation,
        ns1:Reference-SystemAndMethodForDetectingMalwareInjectedIntoMemoryOfAComputingDevice_EndgameInc,
        ns1:Reference-SystemAndMethodForValidatingIn-memoryIntegrityOfExecutableFilesToIdentifyMaliciousActivity_EndgameInc,
        ns1:Reference-TamperProofMutatingSoftware_ARXANTECHNOLOGIESInc,
        ns1:Reference-ThreatDetectionThroughTheAccumulatedDetectionOfThreatCharacteristics_SophosLtd ;
    ns1:verifies ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:ProcessDataSegment a owl:Class ;
    rdfs:label "Process Data Segment" ;
    ns1:definition "A process data segment, is a portion of the program's virtual address space that contains executable instructions and corresponds to the loaded image data segment." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Data_segment>,
        "Image Data Segment" ;
    rdfs:subClassOf ns1:ProcessSegment .

ns1:ProcessLineageAnalysis a ns1:ProcessSpawnAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Lineage Analysis" ;
    ns1:analyzes ns1:Process,
        ns1:ProcessTree ;
    ns1:d3fend-id "D3-PLA" ;
    ns1:definition "Identification of suspicious processes executing on an end-point device by examining the ancestry and siblings of a process, and the associated metadata of each node on the tree, such as process execution, duration, and order relative to siblings and ancestors." ;
    ns1:kb-article """## How it works
Process tree analysis techniques gather information on how a process was initiated to determine if a process is malicious. For example, if a process was not initiated from boot or not initiated by another process, that process is identified as suspicious. Also, if a new process was started before a process initiated by the device (ex. during boot) and that new process was not initiated by a user (which can be determined by examining process parameters such as type of process, its creator, source, etc.) the process is identified as suspicious.

For example, Microsoft Word may block execution of any subprocess that is not in an approved path.

## Considerations
* Attackers may spoof the parent PID (https://attack.mitre.org/techniques/T1502/), rendering such after-the-fact analysis on process lineage ineffective.
* Processes may hide from various means of detection; an example on Linux is where a rootkit might remove key files for the process from its directory in /proc.
* Zombie processes.""" ;
    ns1:kb-reference ns1:Reference-CAR-2020-11-002%3ALocalNetworkSniffing_MITRE,
        ns1:Reference-CAR-2020-11-004%3AProcessesStartedFromIrregularParent_MITRE,
        ns1:Reference-CAR-2021-02-002%3AGetSystemElevation_MITRE,
        ns1:Reference-CAR-2021-05-003%3ABCDEditFailureRecoveryModification_MITRE,
        ns1:Reference-CommandLaunchedFromWinLogon_MITRE,
        ns1:Reference-DebuggersForAccessibilityApplications_MITRE,
        ns1:Reference-GenericRegsvr32_MITRE,
        ns1:Reference-OutlierParentsOfCmd_MITRE,
        ns1:Reference-ProcessesSpawningCmd.exe_MITRE,
        ns1:Reference-QuickExecutionOfASeriesOfSuspiciousCommands_MITRE,
        ns1:Reference-Reg.exeCalledFromCommandShell_MITRE,
        ns1:Reference-RemotelyLaunchedExecutablesViaWMI_MITRE,
        ns1:Reference-ServiceOutlierExecutables_MITRE,
        ns1:Reference-ServiceSearchPathInterception_MITRE,
        ns1:Reference-ServicesLaunchingCmd_MITRE,
        ns1:Reference-SystemAndMethodsThereofForCausalityIdentificationAndAttributionsDeterminationOfProcessesInANetwork_PaloAltoNetworksIncCyberSecdoLtd,
        ns1:Reference-SystemAndMethodsThereofForIdentificationOfSuspiciousSystemProcesses_PaloAltoNetworksInc,
        ns1:Reference-UACBypass_MITRE ;
    ns1:synonym "Process Tree Analysis" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ProcessSpawnAnalysis .

ns1:ProcessSegmentExecutionPrevention a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Segment Execution Prevention" ;
    ns1:d3fend-id "D3-PSEP" ;
    ns1:definition "Preventing execution of any address in a memory region other than the code segment." ;
    ns1:kb-article """## How it works

During execution of a process, the instruction pointer register should only point to addresses in a code segment (also called the .text segment), as this is the sole segment which should contain program code.

When this technique detects an attempt to execute something that has been designated as non-executable, other techniques such as those in **Process Eviction** might be invoked, such as **Process Termination** to end the current process, or **Executable Blacklisting** to blacklist the potentially vulnerable or malfunctioning executable.

### Software-based implementations
The software-based implementation in Windows XP SP2 might not check that every time the instruction pointer is changed, and does not check on each jump or return.  Before calling an exception handler, Windows XP SP2 software-enforced DEP checks whether the exception handler is located in a memory region marked as executable.  If the program was also built with SafeSEH, this implementation also checks before changing control to the exception handler whether it is a registered exception handler in the program's file on disk.

### Hardware-based implementations
The NX (No Execute) or XD (Execute Disable) bit on the processor specifies whether a certain part of memory is executable.  Early implementations set this bit by the memory segment, while modern implementations which are built on the flat memory model often store this bit in each entry of the page table, to control execution by the page.


## Considerations

Non-hardware process data segment execution prevention is more susceptible to being able to be turned off for a page of memory.

Different implementations of this defense have been in place since the 1980s, but implementation stalled when larger 16-bit programs began stuffing code in the segments usually reserved for data. Many modern programs follow the best practice of separation of code and data, are able to run under this defense.

ROP or ret2libc/return-to-function attacks could bypass this defense, as although they may pass attacker-controlled data or stack frames to a function, they abuse functions that are legitimately located in the .text segment (code segment) of the program.  For those, more advanced defenses such as a table of valid jump addresses, function call analysis, or return depth analysis could be used.""" ;
    ns1:kb-reference ns1:Reference-DataExecutionPrevention_Microsoft,
        ns1:Reference-WhatIsNX_XDFeature_RedHat ;
    ns1:neutralizes ns1:ProcessSegment ;
    ns1:synonym "Execute Disable",
        "No Execute" ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:ProcessSelf-ModificationDetection a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Self-Modification Detection" ;
    ns1:analyzes ns1:Process ;
    ns1:d3fend-id "D3-PSMD" ;
    ns1:definition "Detects processes that modify, change, or replace their own code at runtime." ;
    ns1:kb-article """## How it Works
A security agent installed on the host machine intercepts API calls between a process and operating system. Intercepted API calls are then compared against attack signatures/patterns to identify API calls that modify executable memory or modify the entry point address of a suspended child process. Attack patterns include:

* Executable code of a suspended child process removed from memory by one or more API calls.
* New executable code injected and / or loaded into memory of a suspended child process by one or more API calls.
* Executable code modified by one or more API calls.
* Next instruction pointer value in memory modified by one or more API calls.

## Considerations
Comparing loaded code segments of processes with what is expected to have been loaded from a file can result in false positives, due to legitimate uses of self-modification for decrypting or uncompressing code segments.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodForProcessHollowingDetection_CarbonBlackInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:ProcessStartFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Start Function" ;
    ns1:definition "A function creates a new computer process, usually by invoking a create process system call." ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:ProcessSuspension a ns1:ProcessEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Suspension" ;
    ns1:d3fend-id "D3-PS" ;
    ns1:definition "Suspending a running process on a computer system." ;
    ns1:kb-article """## How it works

A running process might be suspended to mitigate its immediate effects if it is exhibiting anomalous, unauthorized, or malicious behavior. Defenders may choose to suspend rather than terminate to analyze the process first and resume the process if deemed benign.

### System-provided functions

#### Windows tools
In Windows, the `PsSuspend` command line utility from the SysInternals Suite provides functionality to suspend processes on a local or remote system.""" ;
    ns1:kb-reference ns1:Reference-PsSuspend ;
    ns1:suspends ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:ProcessEviction .

ns1:ProcessTermination a ns1:ProcessEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Termination" ;
    ns1:d3fend-id "D3-PT" ;
    ns1:definition "Terminating a running application process on a computer system." ;
    ns1:kb-article """## How it works

Processes are managed by the operating system kernel.  Different operating system kernels manage the creation and termination of processes in a different manner, and expose this functionality via the kernel API.

A running process might be terminated to mitigate its immediate effects if it is exhibiting anomalous, unauthorized, or malicious behavior; such as after detecting anomalous behavior via <a href="https://d3fend.mitre.org/technique/d3f:AdministrativeNetworkActivityAnalysis" rdf:about="https://d3fend.mitre.org/ontologies/d3fend.owl#AdministrativeNetworkActivityAnalysis">Administrative Network Activity Analysis</a>, after a failed check from <a href="https://d3fend.mitre.org/technique/d3f:StackFrameCanaryVerification" rdf:about="https://d3fend.mitre.org/ontologies/d3fend.owl#StackFrameCanaryValidation">Stack Frame Canary Validation</a>, or after <a href="https://d3fend.mitre.org/technique/d3f:SystemCallAnalysis" rdf:about="https://d3fend.mitre.org/ontologies/d3fend.owl#SystemCallAnalysis">System Call Analysis</a> finds an attempt to execute an unauthorized system call.

### Proprietary technology
Security software might use proprietary technology to terminate processes, instead of the system-provided functions.    Further research may provide specific detail on such methods used.

### System-provided functions

#### Windows tools
In Windows, `ExitProcess()` is used to send a signal to a process to request it to exit, and `TerminateProcess()` is used to force a process to exit.

The `taskkill` executable available in the cmd shell is used to kill a process, with the `/F` switch forcing termination as with `TerminateProcess()`.  In PowerShell, `Stop-Process` is used, which is aliased by default to `spps` and `kill`.  Processes started in the Windows Subsystem for Linux (WSL) environment may be terminated there with the `kill` command.

In some cases, existing drivers can also be leveraged to kill processes.

#### Unix/Linux tools
In Unix-like systems, all process termination requests are handled using signals.  The `kill` function takes the Process ID and signal to send, and is accessible with the `kill` command.  Some shells have a `kill` builtin function which is separate than the `kill` binary, which can also kill background jobs in the shell and additionally perform the function faster, and can run from an existing instance of the shell if the process table is full.  The signal SIGTERM specifies that the process to terminate may invoke a handler that it has defined instead of terminating, and the signal SIGKILL forces immediate termination.

The related command `xkill` terminates the connection of a program to the X window server, after which the user process may decide to terminate itself; however, termination is not guaranteed as the process, which could be on the same or different host, could then run in a terminal or reconnect to a different X server on any host.  Emacs is such a program that would not terminate itself after its connection to the X server is terminated.

## Considerations

### Persistence Mechanisms
Terminating a malicious process is not enough to stop an adversary that has already gained persistence in the host via any initial access mechanism, including through that process or another access mechanism.

### Terminating Multiple Processes
On most operating systems, process termination operations typically occur independently of each other, without functionality provided to atomically terminate multiple processes.  If there are multiple malicious processes which can make system calls to spawn other processes once one of them is closed, user session termination or system restart might be required.

### Process Access Permissions
Users must have permissions to kill the process.  On Unix-like systems, either root or the process user can kill the process.  On Windows systems, process permissions are managed separately via process security tokens.

### Process Resource Handles

#### Terminating Processes with Open Resource Handles

Processes may have open resource handles, which could leave those resources in an undesired state if the process is forced to terminate.  As such, most operating systems provide a means to send a signal to a process to inform it to gracefully terminate, and on most of these operating systems, it is the typical first step used to terminate a process.

#### Signal Traps
As the process may have open resource handles, commonly-used methods of process termination involve sending a signal to the process to terminate.
On Windows, the `ExitProcess()` function is used for this purpose.  Process instructions, as well as a third-party DLL can also cause the process to exit.
On Linux, the process is sent a signal on the occurrence of various events: when it loses the console, `SIGHUP`; when termination is requested, `SIGTERM`.  The processor then redirects execution to the function registered to handle the signal.

Therefore, sending a signal to the process to ask it to terminate may not always work.

##### Avoiding Signal Traps

On Unix-like systems, sending the `SIGKILL` signal for a process does not send a message to the process or invoke an implementation-defined handler; instead, it immediately does not allow the process to execute any further processor instructions.   On Windows `TerminateProcess()` instead of `ExitProcess()` performs the equivalent.

#### Hang on System Call Execution

Even still, as the operating system kernel manages the processes, kernel code may block process signals, including those which cannot be trapped, and does in certain circumstances.  Signals are blocked and queued for the duration of the system call when interrupting the system call would result in a kernel invariant being violated, such as when an action results in a malformed data structure; this blocking is common for filesystem requests.  Such system calls can hang when a filesystem has gone offline, leading to a long-term uninterruptible sleep, represented in POSIX command `ps` output as D state.
Any malicious system calls or system call handlers are issues of a much larger problem (a kernel-level rootkit) and the system should be redeployed entirely or restored from a backup known to be prior to compromise, and other systems accessible directly and indirectly from that one should also be examined.

A process that is truly hung in a system call may prevent the system from shutting down and leave it in an unresponsive state; a hard power off is required.

To speed up the action of terminating a process in uninterruptible sleep, the process resource accesses (handles) could be analyzed.

On Linux, [`sync` followed by `echo 3 > /proc/sys/vm/drop_caches`](https://www.kernel.org/doc/Documentation/sysctl/vm.txt) is a safe way to free up some inactive resource handles.


#### Kernel Processes and Threads
The kernel may not allow kernel processes, which are created via methods other than user-space processes, to be terminated.

#### Other Code using the Process

Terminating a shared library can lead to unexpected errors; such shared libraries have their own mechanisms for termination.

On Windows, a DLL is unloaded when the reference count of the library reaches 0.

#### Zombie process

After a process has been terminated, it may still take up an entry in the operating system process table until another event occurs.

##### Windows
In Windows, a process object is deleted when the last handle to the process is closed.

##### Linux
In Linux, a process is removed from the process table when it is reaped by its parent process.  If the parent terminates, historically the parent has been changed to pid 1; however, in the Linux kernel 3.4 and above, processes can set a different process as the subreaper using the `prctl()` system call.

Zombie processes and hung processes could be resolved with a restart of the system.

#### System restart
Finally a system restart might be required to kill a process.
Systems which are only accessible via a remote in-band connection may become inaccessible if a process termination operation that is necessary for reboot does not complete.

### Subsystems
Processes that are started in a subsystem might not be fully terminated if they are terminated using the command for that subsystem.  For example, in the Windows Subsystem for Linux (WSL), processes started and terminated via WSL calls such as with the `kill` command in Bash may still have an entry in the Windows process table.""" ;
    ns1:kb-reference ns1:Reference-InstantProcessTerminationToolToRecoverControlOfAnInformationHandlingSystem_DellProductsLP,
        ns1:Reference-MalwareDetectionUsingLocalComputationalModels_CrowdstrikeInc ;
    ns1:terminates ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:ProcessEviction .

ns1:ProtocolMetadataAnomalyDetection a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Protocol Metadata Anomaly Detection" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-PMAD" ;
    ns1:definition "Collecting network communication protocol metadata and identifying statistical outliers." ;
    ns1:kb-article """## How it works
Network protocol metadata is first collected and processed in real-time or post-facto. Metadata may include packet header information or information about a session (ex. time between requests/responses). Metadata is then grouped based on shared characteristics and those groups are compared to each other. If particular metadata differs significantly from other data, an alert is generated, identifying the network event as anomalous. Anomalous activity may indicate unauthorized activity.

## Considerations
Metadata collection on enterprises can yield large data sets. Storage, indexing, querying, and aging should be considered prior to implementation.""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingThreatsUsingMetadataVectors_VECTRANETWORKSInc,
        ns1:Reference-MethodAndSystemForDetectingThreatsUsingPassiveClusterMapping_VectraNetworksInc,
        ns1:Reference-SystemForImplementingThreatDetectionUsingDailyNetworkTrafficCommunityOutliers_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:PythonPackage a owl:Class ;
    rdfs:label "Python Package" ;
    ns1:definition "A Python package is an aggregation of many Python files - either in source code or in bytecode - and associated metadata and resources (text, images, etc.). Python packages can be distributed in different file formats." ;
    rdfs:seeAlso <https://packaging.python.org/> ;
    rdfs:subClassOf ns1:SoftwarePackage .

ns1:PythonScriptFile a owl:Class ;
    rdfs:label "Python Script File" ;
    rdfs:subClassOf ns1:ExecutableScript .

ns1:RAM a owl:Class ;
    rdfs:label "RAM" ;
    ns1:definition "Random-access memory (RAM) is a form of computer memory that can be read and changed in any order, typically used to store working data and machine code." ;
    ns1:synonym "Random-access Memory" ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Random-access_memory" ;
    rdfs:subClassOf ns1:PrimaryStorage .

ns1:RFReceiver a owl:Class ;
    rdfs:label "RF Receiver" ;
    rdfs:subClassOf ns1:RFNode .

ns1:RFShielding a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RF Shielding" ;
    ns1:d3fend-id "D3-RFS" ;
    ns1:definition "Adding physical barriers to a platform to prevent undesired radio interference." ;
    ns1:kb-reference ns1:Reference-PrivacyAndSecuritySystemsAndMethodsOfUse,
        ns1:Reference-Technical_Specifications_for_Construction_and_Management_of_Sensitive_Compartmented_Information_Facilities ;
    rdfs:subClassOf ns1:PlatformHardening .

ns1:RFTransmitter a owl:Class ;
    rdfs:label "RF Transmitter" ;
    rdfs:subClassOf ns1:RFNode .

ns1:ROM a owl:Class ;
    rdfs:label "ROM" ;
    ns1:definition "Read-only memory (ROM) is a type of non-volatile memory used in computers and other electronic devices. Data stored in ROM cannot be electronically modified after the manufacture of the memory device. Read-only memory is useful for storing software that is rarely changed during the life of the system, also known as firmware." ;
    ns1:synonym "Read-only Memory" ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Read-only_memory" ;
    rdfs:subClassOf ns1:PrimaryStorage .

ns1:RPCTrafficAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RPC Traffic Analysis" ;
    ns1:analyzes ns1:RPCNetworkTraffic ;
    ns1:d3fend-id "D3-RTA" ;
    ns1:definition "Monitoring the activity of remote procedure calls in communication traffic to establish standard protocol operations and potential attacker activities." ;
    ns1:kb-article """## How it works
A remote procedure call (RPC) enables one computer to execute a specific function on another computer, as if it were a local application process. There are numerous RPC specifications and implementations. RPC capabilities can be abused by attackers in order to achieve a variety of tactical objectives including execution, persistence, initial access, and more. RPC proxies may be used to collect and store RPC traffic. RPCs can occur over network sockets or named pipes.

Analytics look for unauthorized behavior such as:

* Processes being launched or scheduled remotely
* System configurations being changed remotely
* Unauthorized file read activity

Example RPC Protocols:

* DCE/RPC
* CORBA
* Open Network Computing Remote Procedure Call
* D-Bus
* XML-RPC
* JSON-RPC
* SOAP
* Apache Thrift

## Considerations
* RPC is widely used in enterprise environments, and significant data filtering may be required in large environments to enable analytic processing.
* RPC traffic may occur over a pipe, or within a host over loopback interface, thus making network collection difficult.""" ;
    ns1:kb-reference ns1:Reference-CAR-2014-05-001%3ARPCActivity_MITRE,
        ns1:Reference-CAR-2014-11-007-RemoteWindowsManagementInstrumentation_WMI_OverRPC_MITRE,
        ns1:Reference-CreateRemoteProcessViaWMIC_MITRE_Other,
        ns1:Reference-RPCCallInterception_CrowdstrikeInc,
        ns1:Reference-RemotelyLaunchedExecutablesViaServices_MITRE,
        ns1:Reference-RemotelyLaunchedExecutablesViaWMI_MITRE,
        ns1:Reference-RemotelyScheduledTasksViaSchtasks_MITRE,
        ns1:Reference-SMBWriteRequest-NamedPipes_MITRE ;
    ns1:synonym "RPC Protocol Analysis" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:RadioModem a owl:Class ;
    rdfs:label "Radio Modem" ;
    ns1:definition "A radio modem provides the means to send digital data wirelessly.  Radio modems are used to communicate by direct broadcast satellite, WiFi, WiMax, mobile phones, GPS, Bluetooth and NFC. Modern telecommunications and data networks also make extensive use of radio modems where long distance data links are required. Such systems are an important part of the PSTN, and are also in common use for high-speed computer network links to outlying areas where fiber optic is not economical." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem#Radio> ;
    rdfs:subClassOf ns1:Modem .

ns1:RawMemoryAccessFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Raw Memory Access Function" ;
    ns1:accesses ns1:MemoryBlock ;
    ns1:definition "A function which accesses raw memory, usually using memory addresses." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:RelayPatternAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Relay Pattern Analysis" ;
    ns1:analyzes ns1:OutboundInternetNetworkTraffic ;
    ns1:d3fend-id "D3-RPA" ;
    ns1:definition "The detection of an internal host relaying traffic between the internal network and the external network." ;
    ns1:kb-article """## How it works
A relay may use a variety of proxying, forwarding, or routing technologies to bridge a protected network with an external network. A defensive analytic to detect a relay network may compare the network sessions among multiple hosts. Hosts which have nearly similar network statistics may be part of a relay network. The statistics may include number of bytes sent to and from, time of session initiation, packet size, or packet arrival time data.

## Considerations

Complex intranet VPNs or routing encapsulation may affect the detection analytics.  In addition, unwanted packets might not be forwarded, and additional packets may be added at the relay, further complicating detection.""" ;
    ns1:kb-reference ns1:Reference-MaliciousRelayDetectionOnNetworks_VECTRANETWORKSInc ;
    ns1:synonym "Relay Network Detection" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:RemoteAuthenticationService a owl:Class ;
    rdfs:label "Remote Authentication Service" ;
    ns1:definition "A remote authentication service provides for the authentication of a user across a network (i.e., remotely)." ;
    rdfs:subClassOf ns1:AuthenticationService,
        ns1:NetworkService .

ns1:RemoteAuthorizationService a owl:Class ;
    rdfs:label "Remote Authorization Service" ;
    ns1:definition "A remote authorization service provides for the authorization of a user across a network (i.e., remotely)." ;
    rdfs:subClassOf ns1:AuthorizationService .

ns1:RemoteDatabaseQuery a owl:Class ;
    rdfs:label "Remote Database Query" ;
    ns1:definition "A remote query session enabling a user to make an SQL, SPARQL, or similar query over the network from one host to another." ;
    rdfs:subClassOf ns1:DatabaseQuery,
        ns1:RemoteCommand .

ns1:RemoteProcedureCall a owl:Class ;
    rdfs:label "Remote Procedure Call" ;
    ns1:definition "In distributed computing a remote procedure call (RPC) is when a computer program causes a procedure (subroutine) to execute in another address space (commonly on another computer on a shared network), which is coded as if it were a normal (local) procedure call, without the programmer explicitly coding the details for the remote interaction. That is, the programmer writes essentially the same code whether the subroutine is local to the executing program, or remote. This is a form of client-server interaction (caller is client, executor is server), typically implemented via a request-response message-passing system. The object-oriented programming analog is remote method invocation (RMI). The RPC model implies a level of location transparency." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Remote_procedure_call> ;
    rdfs:subClassOf ns1:RemoteCommand .

ns1:RemoteTerminalSession a owl:Class ;
    rdfs:label "Remote Terminal Session" ;
    ns1:definition "A remote terminal session is a session that provides a user access from one host to another host via a terminal." ;
    rdfs:subClassOf ns1:NetworkSession .

ns1:RemoteTerminalSessionDetection a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Terminal Session Detection" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-RTSD" ;
    ns1:definition "Detection of an unauthorized remote live terminal console session by examining network traffic to a network host." ;
    ns1:kb-article """## How it works
An external attacker takes remote control of a host inside a company or organization's network and manually directs offensive techniques. Nonstandard terminal sessions and abnormal behaviors are analyzed in this technique. Abnormal behavior detection includes analysis of user input patterns in the real-time session, keyboard output and packet inspection.

### Network Traffic Inspection
Network traffic from internal hosts is the main concern and focus for the traffic inspection. The network traffic is collected into inspection groups. The groups of traffic are assembled into distinct pair flows (outbound/inbound) and the pair flows are further divided into sessions. Only sessions originated inside of the network are considered for the inspection. Traffic inspection includes analysis to determine if a human is involved in the session exchanges. Time-based statistics are captured for each session being analyzed by the detection engine.

### Algorithm Analysis Description
Analysis algorithms look for patterns in the network traffic captured from the session data.  A detection engine groups the session traffic data, between the hosts, into rapid exchange instances. Analysis of rapid exchange traffic patterns can lead to the discovery of abnormal behavior which is indicative of a compromised internal host. The analysis algorithms look for patterns in the traffic which correlate to known activity (e.g., relay attacks, bot activity, bitcoin mining). Some metrics used during inspection include the following.

* Number of rapid-exchange instances
* Time interval between packets
* Fixed cadence of traffic
* Rhythm and direction of the initiation of instances
* Volume of data flowing from internal to external controlling host
* Data transfer characteristics
* Variability in length of silent periods

## Considerations
* Full packet capture is required which can be process intensive to analyze
* Attackers that move low and slow may blend in with existing traffic resulting in false negatives""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingExternalControlOfCompromisedHosts_VECTRANETWORKSInc,
        ns1:Reference-RDPConnectionDetection_MITRE,
        ns1:Reference-RemoteDesktopLogon_MITRE ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:ResourceAccessPatternAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Access Pattern Analysis" ;
    ns1:analyzes ns1:Authentication,
        ns1:Authorization ;
    ns1:d3fend-id "D3-RAPA" ;
    ns1:definition "Analyzing the resources accessed by a user to identify unauthorized activity." ;
    ns1:kb-article """## How it works
This technique analyzes a user's resource accesses by comparing the user's recent activity against a baseline activity model. Major differences between the current activity and the baseline model might indicate unauthorized activity if they are severe enough.


## Considerations
* Potential for false positives from anomalies that are not associated with malicious activity.
* Attackers that move low and slow may not differentiate their resource access activity behavior enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        ns1:Reference-ModelingUserAccessToComputerResources_DaedalusGroupLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc>,
        ns1:Reference-SystemAndMethodThereofForIdentifyingAndRespondingToSecurityIncidentsBasedOnPreemptiveForensics_PaloAltoNetworksInc ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:UserBehaviorAnalysis .

ns1:ReverseProxyServer a owl:Class ;
    rdfs:label "Reverse Proxy Server" ;
    ns1:definition "In computer networks, a reverse proxy is a type of proxy server that retrieves resources on behalf of a client from one or more servers. These resources are then returned to the client, appearing as if they originated from the proxy server itself. Unlike a forward proxy, which is an intermediary for its associated clients to contact any server, a reverse proxy is an intermediary for its associated servers to be contacted by any client. In other words, a proxy acts on behalf of the client(s), while a reverse proxy acts on behalf of the server(s); a reverse proxy is usually an internal-facing proxy used as a 'front-end' to control and protect access to a server on a private network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Reverse_proxy> ;
    rdfs:subClassOf ns1:ProxyServer .

ns1:ReverseResolutionDomainDenylisting a ns1:DNSDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reverse Resolution Domain Denylisting" ;
    ns1:blocks ns1:InboundInternetDNSResponseTraffic ;
    ns1:d3fend-id "D3-RRDD" ;
    ns1:definition "Blocking a reverse DNS lookup's answer's domain name value." ;
    ns1:kb-article """## How it works

In reverse resolution requests, the client sends to a nameserver (such as a DNS server) a query of an IP address, to get a response of the associated domain name(s). This technique drops reverse lookup responses where a domain name matches an entry in the blacklist, either verbatim or as a wildcard subdomain of a higher-level domain on the list. Such domain names might be unwanted because Forward Domain Name Resolution requests to such a blacklisted domain might return an unwanted IP address.

This technique is useful because relying solely on Forward Resolution Domain Blacklisting will miss instances where the domain in question is forward-resolved in a manner that is not inspected via a subsequent technique (as is likely the case if that resolution is performed with DoH (DNS over HTTPS) or DoT (DNS over TLS)). Additionally, note that responses to forward lookups of that domain are *not* necessarily equal to the original IP in the reverse lookup request, and that future lookups of a string based on this domain may even employ a less-common name resolution protocol, such as NBNS.

The DNS response can either be blocked by dropping the network traffic with an inline device, or by modifying the value of the response sent by the DNS server.  To prevent client applications from hanging on a request, it is common practice to replace malicious values, either with names like "localhost." or the address of a honeypot maintained by the network administrators.

## Considerations

* This technique does not prevent the client from contacting the blacklisted domain or any IP addresses that it might resolve to, only from learning about this domain name via a nameserver lookup.
* DNS response traffic can be transmitted over many different protocols, which presents a challenge to implementing methods to extract all DNS answer domain name value(s).
  * DNS has historically used UDP port 53, with TCP port 53 instead used for responses over 512 bytes or after a lack of response over UDP.
  * Usage of new protocols to provide confidentiality for DNS traffic, such as DoH (DNS over HTTPS) and DoT (DNS over TLS), complicates collection of the IP address(es) in DNS responses. These protocols have often been enabled in browser settings transparently after a browser update, with DNS requests proxied over one of these cryptographic protocols through a specified host.
* This technique must be deployed between the application that receives the response and the server which sent the response.
  * DNS responses sent in an encrypted manner, such as using DoH or DoT, will require interception of the TLS connections in order to determine the domain name(s) in the response.
* Replacing the response is not effective in the case that the nameserver uses a technique to provide integrity of its responses, such as DNSSEC for DNS responses.""" ;
    ns1:synonym "Reverse Resolution Domain Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:DNSDenylisting .

ns1:ReverseResolutionIPDenylisting a ns1:DNSDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reverse Resolution IP Denylisting" ;
    ns1:blocks ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-RRID" ;
    ns1:definition "Blocking a reverse lookup based on the query's IP address value." ;
    ns1:kb-article """## How it works
This technique prevents a client from learning domains deemed to be potentially malicious, which would have been delivered via reverse resolution responses over the DNS protocol.

Queries for reverse resolution requests (that is, requests where IP(s) are sent and a domain is returned) are collected, and the IP address(es) included in the query are examined. If the IP address(es) are in a range included in the blacklist, then the query is dropped.

## Considerations
- The blacklist will have to be maintained and will need to be kept up to date with identified maintenance cycles to ensure lists are not stale.
- DNS query traffic can be transmitted over many different protocols, which presents a challenge to implementing methods to extract all DNS query IP address value(s).
  - DNS has historically used UDP port 53, with TCP port 53 instead used for responses over 512 bytes or after a lack of response over UDP.
  - Usage of new protocols to provide confidentiality for DNS traffic, such as DoH (DNS over HTTPS) and DoT (DNS over TLS), complicates collection of the IP address(es) in DNS queries. These protocols have often been enabled in browser settings transparently after a browser update, with DNS queries proxied over one of these cryptographic protocols through a specified host.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Reverse Resolution IP Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:DNSDenylisting .

ns1:SavedInstructionPointer a owl:Class ;
    rdfs:label "Saved Instruction Pointer" ;
    ns1:definition "A saved instruction pointer points to the instruction that generated an exception (trap or fault)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Exception_handling> ;
    rdfs:subClassOf ns1:Pointer,
        ns1:StackComponent .

ns1:ScheduledJobAnalysis a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Job Analysis" ;
    ns1:analyzes ns1:TaskSchedule ;
    ns1:d3fend-id "D3-SJA" ;
    ns1:definition "Analysis of source files, processes, destination files, or destination servers associated with a scheduled job to detect unauthorized use of job scheduling." ;
    ns1:kb-article """## How it works
Scheduled job execution can be utilized by adversaries for the purpose of persistence, conducting remote execution, or gaining privileges. Details of a scheduled job such as associated source files, processes, destination files, or destination servers are first identified and analyzed and then compared against an anti-malware signature database, whitelist, or reputation server. For example, a file associated with a scheduled job to be executed at a specified time or a remote server that is accessed as part of a scheduled task is compared against an anti-malware signature database, whitelist, or reputation server, and if a match is found, execution is denied and an alert is generated.

In addition to traditional scheduled jobs, triggers can be set to execute a specific command after detecting a specific event in the system, such as with WMI Event Subscriptions in Windows.

## Considerations
Jobs can be scheduled in many different and sometimes creative ways through operating system capabilities.""" ;
    ns1:kb-reference ns1:Reference-ExecutionWithAT_MITRE,
        ns1:Reference-ExecutionWithSchtasks_MITRE,
        ns1:Reference-PreventingExecutionOfTaskScheduledMalware_McAfeeLLC ;
    ns1:synonym "Scheduled Job Execution" ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:ScriptExecutionAnalysis a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Script Execution Analysis" ;
    ns1:analyzes ns1:ScriptApplicationProcess ;
    ns1:d3fend-id "D3-SEA" ;
    ns1:definition "Analyzing the execution of a script to detect unauthorized user activity." ;
    ns1:kb-article """## How it works
Software installed on the host system hooks into a scripting engine to intercept commands before they are executed and block commands if they are determined to be harmful. Pattern matching is used to identify unauthorized commands or in the case of script files, a hash of the file is compared against hashes of known unauthorized script files.

## Considerations
List of known unauthorized script files or regular expression patterns must be kept up to date to ensure detection of new threats.""" ;
    ns1:kb-reference ns1:Reference-DetectingScript-basedMalware_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:Second-stageBootLoader a owl:Class ;
    rdfs:label "Second-stage Boot Loader" ;
    ns1:definition "An optional, often feature rich,  second stage set of routines run in order to load the operating system." ;
    rdfs:subClassOf ns1:BootLoader .

ns1:SegmentAddressOffsetRandomization a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Segment Address Offset Randomization" ;
    ns1:d3fend-id "D3-SAOR" ;
    ns1:definition "Randomizing the base (start) address of one or more segments of memory during the initialization of a process." ;
    ns1:kb-article """## How it works

Many application exploits rely on an attacker specifying a location in memory, which points to data or code used by the attacker.  If the addresses are changed each time the program is run, then it becomes more difficult for the attacker to determine the location that will contain the code they wish to run.

Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as "rebasing."  Just as not all code is built for participation in ASLR, not all modules can be rebased; instead, modules must indicate whether they implement support for rebasing.  Such information to relocate the executable is typically stored in the ".reloc" segment -- each of the addresses pointed to in this segment has its address increased by the amount of the offset.
(An alternative method for relocation would be to add an amount to a global variable each time -- leading to less overhead in the module load, but more for each access.  Still another implementation could instead contain code to deference each changeable memory location on the fly, so that each of the references do not need to be updated.


## Considerations

As the offset for each segment is constant, it is possible to guess at the value of the address given the address of another variable.  Alternatively, memory pointers may be kept around, which contain the address of another variable.
Another bypass technique is known as an "egg hunt," whereby the attacker searches for a rather unique piece of the data or code in memory to determine its likely address.

The program needs to store these addresses for the functions somewhere.  In Linux, the PLT contains a "trampoline" to these addresses.  If an attacker desires to jump to the start of an existing function, they can jump directly to the trampoline anyway, and may have the opportunity to provide their own stack frame to the function with a write to the stack. If they overwrite a saved stack pointer which is loaded back into memory, or execute a function, that changes the address of a stack pointer.

If an attacker wants to inject some data into the program, for example as a parameter to a known function that is not under ASLR or a pointer to a trampoline function in the PLT, then they can repeat the data until they exceed the range of ASLR coverage, which on 32-bit systems is accomplishable in a few seconds with a heap spray.  Microsoft's EMET and Windows 10 Exploit Guard can pre-allocate particular addresses that are commonly used in heap sprays.  However, in many products, there does not seem to be nearly a complete coverage of such addresses, which only need to be executable and in the range of the heap; 0x0c0c0c0c is such an address that is commonly used for the x86 processor architecture, as when executed it only performs a numeric operation to a register four times.""" ;
    ns1:kb-reference ns1:Reference-DYNAMICBASE_UseAddressSpaceLayoutRandomization_MicrosoftDocs,
        ns1:Reference-HowASLRProtectsLinuxSystemsFromBufferOverflowAttacks_NetworkWorld ;
    ns1:obfuscates ns1:ProcessSegment ;
    ns1:synonym "ASLR",
        "Address Space Layout Randomization" ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:SenderMTAReputationAnalysis a ns1:MessageAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sender MTA Reputation Analysis" ;
    ns1:analyzes ns1:Email ;
    ns1:d3fend-id "D3-SMRA" ;
    ns1:definition "Characterizing the reputation of mail transfer agents (MTA) to determine the security risk in emails." ;
    ns1:kb-article """## How it works
The sender message transfer agent (MTA) trust rating can be considered an indicator of the level of security risk and/or a trust level associated with sender MTAs in an email header.

The features considered in determining the trust rating may include:

* Length of time MTA has interacted with the enterprise
* Number of sender domains sending emails from the MTA
* Number of recipients in the enterprise the MTA sends emails to
* Number of emails received from this MTA
* Number of email replies received from this MTA

For example, higher values for the length of time an MTA has interacted with the enterprise, or number of emails received from an MTA can result in a higher trust rating. The trust rating categorizes the sender MTA as unrated, neutral, trusted, suspicious, or malicious.

## Considerations
Legitimate emails from a sender MTA may receive a lower trust rating over time if the sender's domain gets spoofed and is used to send unauthorized emails.""" ;
    ns1:kb-reference ns1:Reference-SystemsAndMethodsForDetectingAnd_orHandlingTargetedAttacksInTheEmailChannel_GraphusInc ;
    rdfs:subClassOf [ ],
        ns1:MessageAnalysis .

ns1:SenderReputationAnalysis a ns1:MessageAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sender Reputation Analysis" ;
    ns1:analyzes ns1:Email ;
    ns1:d3fend-id "D3-SRA" ;
    ns1:definition "Ascertaining sender reputation based on information associated with a message (e.g. email/instant messaging)." ;
    ns1:kb-article """## How it works

Sender trust rating can be considered an indicator of the level of security risk and/or a trust level associated with a sender. The features considered in determining the trust rating include:

* Length of time sender has sent emails to the enterprise
* Number of recipients in the enterprise the sender interacts with
* Sender vs. enterprise originated message ratio
* Sender messages opened vs. not-opened ratio
* Number of emails received from this sender
* Number of emails replied to this sender
* Number of emails from this sender not opened
* Number of emails from this sender not opened that contain an attachment
* Number of emails from this sender not opened that contain a URL
* Number of emails sent to this sender
* Number of email replies received from this sender.

Higher values for the number of recipients the sender has interacted with or the number of emails received from the sender, for example, results in a higher trust rating. The trust rating can categorize the sender as unrated, neutral, trusted, suspicious, or malicious.

## Considerations
Legitimate emails from a sender may receive a lower trust rating over time if the sender's domain gets spoofed and is used to send unauthorized emails.""" ;
    ns1:kb-reference ns1:Reference-SystemsAndMethodsForDetectingAnd_orHandlingTargetedAttacksInTheEmailChannel_GraphusInc ;
    rdfs:subClassOf [ ],
        ns1:MessageAnalysis .

ns1:SerializationFunction a owl:Class ;
    rdfs:label "Serialization Function" ;
    ns1:definition "A function which has an operation that serializes data." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:ServiceBinaryVerification a ns1:SystemFileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Binary Verification" ;
    ns1:d3fend-id "D3-SBV" ;
    ns1:definition "Analyzing changes in service binary files by comparing to a source of truth." ;
    ns1:kb-article """## How it works
System service applications may originate from the operating system installation or third-party applications installed with administrative privileges. These services have an entry point of some executable file-- a binary or a script. Attackers sometimes modify these executables to launch their own code. Analyzing changes in these files may uncover unauthorized activity.

## Considerations
* These files change for legitimate reasons when the system or software updates.
* The source of truth must not be corrupted in order for this method to work.""" ;
    ns1:kb-reference ns1:Reference-ServiceBinaryModifications_MITRE ;
    ns1:verifies ns1:ServiceApplication ;
    rdfs:subClassOf [ ],
        ns1:SystemFileAnalysis .

ns1:ServiceDependencyMapping a ns1:SystemMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Dependency Mapping" ;
    ns1:d3fend-id "D3-SVCDM" ;
    ns1:definition "Service dependency mapping determines the services on which each given service relies." ;
    ns1:kb-article """## How it works
The organization collects and models architectural information about the services and consumers of services and maps the dependencies between the services.

## Considerations
* Architectural design artifacts and SMEs may need to be consulted to determine if dependencies are intended or otherwise essential.
* Service dependencies for critical systems--those supporting critical organizational activities--should be prioritized for supply chain risk analysis.
* Service dependencies in cloud or microservice architectures may be discovered using distributed tracing capabilities""" ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:ServiceDependency ;
    ns1:synonym "Distributed Tracing" ;
    rdfs:subClassOf [ ],
        ns1:SystemMapping .

ns1:SessionDurationAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Session Duration Analysis" ;
    ns1:analyzes ns1:Authentication,
        ns1:Authorization ;
    ns1:d3fend-id "D3-SDA" ;
    ns1:definition "Analyzing the duration of user sessions in order to detect unauthorized  activity." ;
    ns1:kb-article """## How it works
Detecting unauthorized user sessions by comparing the duration of a user logon session with a baseline behavior model. The behavior model comprises historical user session duration times.  Abnormalities between session duration and the behavior model may indicate suspicious activity.

## Considerations
* Potential for false positives from anomalies that are not associated with malicious activity.
* Attackers may not differentiate their session duration enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:UserBehaviorAnalysis .

ns1:SetSystemConfigValue a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Set System Config Value" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:seeAlso "https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsetvalueexa" ;
    rdfs:subClassOf [ ],
        ns1:SystemConfigSystemCall .

ns1:ShadowStack a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shadow Stack" ;
    ns1:copy-of ns1:CallStack ;
    ns1:definition "A shadow stack is a mechanism for protecting a procedure's stored return address, such as from a stack buffer overflow. The shadow stack itself is a second, separate stack that \"shadows\" the program call stack. In the function prologue, a function stores its return address to both the call stack and the shadow stack. In the function epilogue, a function loads the return address from both the call stack and the shadow stack, and then compares them. If the two records of the return address differ, then an attack is detected." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Shadow_stack" ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:ShadowStackComparisons a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shadow Stack Comparisons" ;
    ns1:analyzes ns1:StackFrame ;
    ns1:d3fend-id "D3-SSC" ;
    ns1:definition "Comparing a call stack in system memory with a shadow call stack maintained by the processor to determine unauthorized shellcode activity." ;
    ns1:kb-article """## How it works
This technique compares the call stack stored in system memory with the shadow call stack maintained in the cache memory of the processor.  Mismatches between the two are compared since a return oriented programming attack may only be able to control or spoof the call stack and not the shadow call stack. Mismatches are counted and if the number of mismatches exceeds a certain threshold it is an indication of unauthorized activity and a security response action is performed.

## Considerations
If the threshold for detecting a stack anomaly is low, it may not detect a return-oriented attack with just one gadget, such as a return-to-libc or return-to-plt attack.  Additionally, this technique may not detect JOP (Jump-oriented programming), as the return instruction is not executed.""" ;
    ns1:kb-reference ns1:Reference-ThreatDetectionForReturnOrientedProgramming_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:SharedResourceAccessFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shared Resource Access Function" ;
    ns1:accesses ns1:Resource ;
    ns1:definition "A function which access a shared resource." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:SoftwareArtifactServer a owl:Class ;
    rdfs:label "Software Artifact Server" ;
    ns1:definition "A software artifact server provides access to the software artifacts in a software repository. A software repository, or \"repo\" for short, is a storage location for software packages. Often a table of contents is stored, as well as metadata. Repositories group packages. Sometimes the grouping is for a programming language, such as CPAN for the Perl programming language, sometimes for an entire operating system, sometimes the license of the contents is the criteria. At client side, a package manager helps installing from and updating the repositories." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Artifact_(software_development)>,
        <http://dbpedia.org/resource/Software_repository> ;
    rdfs:subClassOf ns1:ArtifactServer .

ns1:SoftwareInventory a ns1:AssetInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Inventory" ;
    ns1:d3fend-id "D3-SWI" ;
    ns1:definition "Software inventorying identifies and records the software items in the organization's architecture." ;
    ns1:inventories ns1:Software ;
    ns1:kb-article """## How it works
Administrators collect information on software items in their architecture using a variety of administrative and management tools that query network nodes for information.  In limited cases, where such queries are not supported or provide specific information of interest, an administrator may also collect this information through network enumeration methods to determine services responding on network nodes.

## Considerations
* Scanning and probing techniques using mapping tools can result in side effects to information technology (IT) and operational technology (OT) systems.
* An adversary conducting network enumeration may engage in activities that parallel normal software inventorying activities, but would require escalating to admin privileges for most of the operations requiting administrative tools.

## Examples

Application-layer discovery:

* Simple Network Management Protocol (SNMP) collects MIB information
* Web-based Enterprise Management (WBEM) collects CIM information
   * Windows Management Instrumentation (WMI)
   * Windows Management Infrastructure (MI)""" ;
    ns1:kb-reference ns1:Reference-Web-BasedEnterpriseManagement,
        ns1:Reference-Windows-Management-Infrastructure,
        ns1:Reference-Windows-Management-Instrumentation ;
    ns1:synonym "Software Discovery",
        "Software Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:SoftwareLibrary a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Library" ;
    ns1:contains ns1:SoftwareLibraryFile ;
    ns1:definition "A software library is a collection of software components that are used to build a software product." ;
    rdfs:seeAlso <https://dbpedia.org/page/Library_(computing)> ;
    rdfs:subClassOf [ ],
        ns1:Software .

ns1:SoftwarePatch a owl:Class ;
    rdfs:label "Software Patch" ;
    ns1:definition "A patch is a piece of software designed to update a computer program or its supporting data, to fix or improve it. This includes fixing security vulnerabilities and other bugs, with such patches usually called bugfixes or bug fixes, and improving the usability or performance. Although meant to fix problems, poorly designed patches can sometimes introduce new problems (see software regressions). In some special cases updates may knowingly break the functionality, for instance, by removing components for which the update provider is no longer licensed or disabling a device." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Patch_(computing)> ;
    rdfs:subClassOf ns1:Software ;
    ns2:altLabel "Patch" .

ns1:SoftwareUpdate a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Update" ;
    ns1:d3fend-id "D3-SU" ;
    ns1:definition "Replacing old software on a computer system component." ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForProvidingSoftwareUpdatesToLocalMachines ;
    ns1:updates ns1:Software ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:SourceCodeAnalyzerTool a owl:Class ;
    rdfs:label "Source Code Analyzer Tool" ;
    ns1:definition "A source code analyzer tool is a static analysis tool that operates specifically on source code, but not object code." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Static_program_analysis> ;
    rdfs:subClassOf ns1:StaticAnalysisTool .

ns1:StackFrameCanaryValidation a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Frame Canary Validation" ;
    ns1:d3fend-id "D3-SFCV" ;
    ns1:definition "Comparing a value stored in a stack frame with a known good value in order to prevent or detect a memory segment overwrite." ;
    ns1:kb-article """## How it works

This defense must be applied at compile-time, or via a patch to the program binary.  Stack Frame Canary Verification inserts instructions at the prologue and epilogue of desired functions.  In the prologue, a canary value, typically with the same size as the register size, is stored in the system of record and on the stack.  Typically, the canary is loaded to where it has a memory address just below that of the saved instruction pointer and base pointer.  In the epilogue, the canary value stored on the stack and, is compared to the canary value in the system of record.  If the values are different, other techniques such as those in Process Eviction might be invoked, such as Process Termination to end the current process, or Executable Blacklisting to blacklist the potentially vulnerable or malfunctioning executable.

Stack Frame Canary Verification is commonly used to detect potential tampering of a saved register value on the stack before it has been restored.  Examples of registers with values commonly saved to the stack include the instruction pointer and the base pointer.

The canary should be stored between where the start of a buffer overrun is likely, and the data to protect, in cases where the buffer size increases it will overwrite the data to be protected.

On most processor architectures, including x86, x64, and ARM, a "push" operation to store data to the stack grows the stack towards a lower memory address.  As in these architectures, saved register values are stored to the stack at a point in time just before space is made for the local function variables, the saved register values have a higher address than that of the local function variables.  Values at increasing indexes of a buffer are written to increasing memory addresses; therefore, an overwrite in the local variable buffer could overwrite saved register values, and a stack canary between these two would be useful in detecting an overwrite.

On some other processor architectures such as the B5000, the stack grows towards increasing memory addresses, and some architectures, such as System Z and RCA1802A, stack direction can be chosen.  If the stack grows towards increasing memory addresses, while this architecture inherently provides more protection against a saved register being overwritten, other data including local function variables might be overwritten.


## Considerations

There are several ways that the protection provided by a canary could be rendered ineffective.

### Performing a malicious action before the canary is checked

If the attacker alters the memory in such a way that it performs a malicious action before the epilogue is called, then this protection will not be effective.  This includes altering the logic of the program by altering the values of local variables stored on the function stack, or by causing an exception and exploiting the exception mechanism such as the SEH (Structured Exception Handling) mechanism on Windows.

### Determining the canary value

Determining the canary value is possible through reading memory either for the code used to check the canary, or from the stored canary value itself in a stack frame.

### Changing the canary value

A vulnerability such as a write-what-where condition that allows one to write data after the canary in the stack, would allow control of the value of the saved instruction pointer without needing to know the canary value.""" ;
    ns1:kb-reference ns1:Reference-GS_BufferSecurityCheck_MicrosoftDocs,
        ns1:Reference-StackSmashingProtection_StackGuard_RedHat ;
    ns1:validates ns1:StackFrame ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:StackSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Segment" ;
    ns1:contains ns1:StackFrame ;
    ns1:definition "The stack segment contains the program stack, a last-in-first-out structure, typically allocated in the higher parts of memory for the process." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Call_stack>,
        <http://dbpedia.org/resource/Data_segment#Stack> ;
    rdfs:subClassOf [ ],
        ns1:ProcessSegment .

ns1:StandaloneHoneynet a ns1:DecoyEnvironment,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Standalone Honeynet" ;
    ns1:d3fend-id "D3-SHN" ;
    ns1:definition "An environment created for the purpose of attracting attackers and eliciting their behaviors that is not connected to any production enterprise systems." ;
    ns1:kb-article """## How it works
A standalone honeynet does not directly interact with the real enterprise environment. It may be located near or in some portion of the enterprise address space, but it does not interact with enterprise resources.

## Considerations
A standalone honeynet is a lower risk to deploy compared to connected or integrated honeynets due to its isolation from the enterprise network. However, this comes at cost in loss of fidelity and realism. Significant extra effort must be made in order to make the environment look realistic.""" ;
    ns1:kb-reference ns1:Reference-DynamicSelectionAndGenerationOfAVirtualCloneForDetonationOfSuspiciousContentWithinAHoneyNetwork_PaloAltoNetworksInc ;
    ns1:spoofs ns1:IntranetNetwork ;
    rdfs:subClassOf [ ],
        ns1:DecoyEnvironment .

ns1:StartupDirectory a owl:Class ;
    rdfs:label "Startup Directory" ;
    ns1:definition "A startup directory is a directory containing executable files or links to executable files which are run when a user logs in or when a system component or service is started." ;
    rdfs:subClassOf ns1:Directory,
        ns1:LocalResource .

ns1:StringFormatFunction a owl:Class ;
    rdfs:label "String Format Function" ;
    ns1:definition "A function which creates a new string based on a format specification and correspondingi specified values." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:StrongPasswordPolicy a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Strong Password Policy" ;
    ns1:d3fend-id "D3-SPP" ;
    ns1:definition "Modifying system configuration to increase password strength." ;
    ns1:kb-article """## How it works
Password strength guidelines include increasing password length, permitting passwords that contain ASCII or Unicode characters, and requiring systems to screen new passwords against lists of commonly used or compromised passwords.
## Considerations
Extremely complex password requirements may lead users to saving passwords in text files or picking obvious passwords that meet the policy.""" ;
    ns1:kb-reference ns1:Reference-DigitalIdentityGuidelines800-63-3,
        ns1:Reference-Testing_Metrics_for_Password_Creation_Policies_by_Attacking_Large_Sets_of_Revealed_Passwords ;
    ns1:strengthens ns1:Password,
        ns1:UserAccount ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialHardening .

ns1:SuspendProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Suspend Process" ;
    ns1:evicts ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:Switch a owl:Class ;
    rdfs:label "Switch" ;
    ns1:definition "A network switch (also called switching hub, bridging hub, and by the IEEE MAC bridge) is networking hardware that connects devices on a computer network by using packet switching to receive and forward data to the destination device. A network switch is a multiport network bridge that uses MAC addresses to forward data at the data link layer (layer 2) of the OSI model. Some switches can also forward data at the network layer (layer 3) by additionally incorporating routing functionality. Such switches are commonly known as layer-3 switches or multilayer switches." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_switch> ;
    rdfs:subClassOf ns1:NetworkNode ;
    ns2:altLabel "Bridging Hub",
        "MAC Bridge",
        "Network Switch",
        "Switching Hub" .

ns1:SymmetricKey a owl:Class ;
    rdfs:label "Symmetric Key" ;
    ns1:definition "A symmetric key is a single key used for both encryption and decryption and used with a symmetric-key algorithm. Symmetric-key algorithms are algorithms for cryptography that use the same cryptographic keys for both encryption of plaintext and decryption of ciphertext. The keys may be identical or there may be a simple transformation to go between the two keys. The keys, in practice, represent a shared secret between two or more parties that can be used to maintain a private information link. This requirement that both parties have access to the secret key is one of the main drawbacks of symmetric key encryption, in comparison to public-key encrytption (also known as asymmetric key encryption)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Symmetric-key_algorithm> ;
    rdfs:subClassOf ns1:CryptographicKey .

ns1:SystemCallFiltering a ns1:Kernel-basedProcessIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Call Filtering" ;
    ns1:d3fend-id "D3-SCF" ;
    ns1:definition "Configuring a kernel to use an allow or deny list to filter kernel api calls." ;
    ns1:filters ns1:SystemCall ;
    ns1:kb-reference ns1:Reference-OverviewOfTheSeccompSandbox ;
    rdfs:subClassOf [ ],
        ns1:Kernel-basedProcessIsolation .

ns1:SystemConfigurationPermissions a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Permissions" ;
    ns1:d3fend-id "D3-SCP" ;
    ns1:definition "Restricting system configuration modifications to a specific user or group of users." ;
    ns1:kb-reference ns1:Reference-HowToChangeRegistryValuesOrPermissionsFromACommandLineOrAScript ;
    ns1:restricts ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:PlatformHardening .

ns1:SystemDaemonMonitoring a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Daemon Monitoring" ;
    ns1:d3fend-id "D3-SDM" ;
    ns1:definition "Tracking changes to the state or configuration of critical system level processes." ;
    ns1:kb-article """## How it works
Attackers may manipulate system settings or services to disable system logging or monitoring of security tools and events. Firewall and antivirus services are popular targets for attackers. Disabling system logs will also allow an attacker's actions to go unnoticed. Analysis of logs, registries, and process monitoring help defenders locate signs of tampering. Two possible approaches are to monitor hardened system services or to monitor registry updates for modifications to security settings.""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-MethodUsingKernelModeAssistanceForTheDetectionAndRemovalOfThreatsWhichAreActivelyPreventingDetectionAndRemovalFromARunningSystem_SymantecCorporation,
        ns1:Reference-UserActivityFromStoppingWindowsDefensiveServices_MITRE ;
    ns1:monitors ns1:OperatingSystemProcess ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:SystemDependencyMapping a ns1:SystemMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Dependency Mapping" ;
    ns1:d3fend-id "D3-SYSDM" ;
    ns1:definition "System dependency mapping identifies and models the dependencies of system components on each other to carry out their function." ;
    ns1:kb-article """## How it works
The organization collects and models architectural information about the software, hardware, and products and maps the dependencies between systems, including each system's internal components and dependencies.

## Considerations
* Data exchanges identified in the network mapping efforts usually indicate such dependencies, but may not be part of the intended design.
* Architectural design artifacts and SMEs may need to be consulted to determine if dependencies are intended or otherwise essential.
* System depedency mapping can identify internal dependencies of standard and pre-built systems that should be incorporated into a complete system dependency model.
* System dependencies for critical systems--those supporting critical organizational activities--should be prioritized for supply chain risk analysis.
* System dependencies should identify the integral components of a given named system and their structure to form a system.
* System dependencies with a given system may be fixed by a particular product's configuration, and leveraging external knowledge bases about dependencies available (e.g., from package managers) is essential.""" ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-SoftwareVulnerabilityGraphDatabase,
        ns1:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:SystemDependency ;
    rdfs:subClassOf [ ],
        ns1:SystemMapping .

ns1:SystemFirmwareVerification a ns1:FirmwareVerification,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firmware Verification" ;
    ns1:d3fend-id "D3-SFV" ;
    ns1:definition "Cryptographically verifying installed system firmware integrity." ;
    ns1:kb-article """## How it works
Cryptographic hash values are computed for system firmware. The hash values are compared against precomputed firmware hash values to determine if the firmware has been tampered with.

When system firmware verification fails a set of predefined responses is typically invoked. The responses may direct the system to disable some devices or operations.

## Considerations
* Requires the use of system provided security modules
* Secure hash values will need to be computed for firmware""" ;
    ns1:kb-reference ns1:Reference-FirmwareVerificationEclypsium,
        ns1:Reference-PlatformFirmwareResiliencyGuidelines_NIST ;
    ns1:verifies ns1:SystemFirmware ;
    rdfs:subClassOf [ ],
        ns1:FirmwareVerification .

ns1:SystemInitConfigAnalysis a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Init Config Analysis" ;
    ns1:analyzes ns1:SystemInitConfiguration ;
    ns1:d3fend-id "D3-SICA" ;
    ns1:definition "Analysis of any system process startup configuration." ;
    ns1:kb-reference ns1:Reference-AutorunDifferences_MITRE,
        ns1:Reference-CAR-2020-09-005%3AAppInitDLLs_MITRE,
        ns1:Reference-CAR-2020-11-001%3ABootOrLogonInitializationScripts_MITRE ;
    ns1:synonym "Autorun Analysis",
        "Startup Analysis" ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring ;
    ns2:altLabel "System Initialization Configuration Analysis" .

ns1:SystemInitProcess a owl:Class ;
    rdfs:label "System Init Process" ;
    ns1:definition "A system initialization process is a process that executes to initialize (boot) an operating system." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Booting>,
        <http://dbpedia.org/resource/Linux_startup_process>,
        <http://dbpedia.org/resource/Windows_startup_process> ;
    rdfs:subClassOf ns1:OperatingSystemProcess ;
    ns2:altLabel "System Initialization Process",
        "System Startup Process" .

ns1:SystemUtilizationRecord a owl:Class ;
    rdfs:label "System Utilization Record" ;
    ns1:definition "A system utilization record is a record for the tracking of resource utilization e.g. CPU, Disk, Network, Memory Bandwidth, GPU, or other resources for a given time period." ;
    rdfs:subClassOf ns1:Record .

ns1:SystemVulnerabilityAssessment a ns1:SystemMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Vulnerability Assessment" ;
    ns1:d3fend-id "D3-SYSVA" ;
    ns1:definition "System vulnerability assessment relates all the vulnerabilities of a system's components in the context of their configuration and internal dependencies and can also include assessing risk emerging from the system's design as a whole, not just the sum of individual component vulnerabilities." ;
    ns1:evaluates ns1:DigitalSystem ;
    ns1:identifies ns1:Vulnerability ;
    ns1:kb-reference ns1:Reference-SoftwareVulnerabilityGraphDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:SystemMapping .

ns1:T1001.001 a owl:Class ;
    rdfs:label "Junk Data" ;
    ns1:attack-id "T1001.001" ;
    rdfs:subClassOf ns1:T1001 .

ns1:T1001.002 a owl:Class ;
    rdfs:label "Steganography" ;
    ns1:attack-id "T1001.002" ;
    rdfs:subClassOf ns1:T1001 .

ns1:T1001.003 a owl:Class ;
    rdfs:label "Protocol Impersonation" ;
    ns1:attack-id "T1001.003" ;
    rdfs:subClassOf ns1:T1001 .

ns1:T1002 a owl:Class ;
    rdfs:label "Data Compressed" ;
    ns1:attack-id "T1002" ;
    rdfs:subClassOf ns1:ExfiltrationTechnique .

ns1:T1003.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LSASS Memory" ;
    ns1:accesses ns1:AuthenticationService,
        ns1:Process ;
    ns1:attack-id "T1003.001" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Account Manager" ;
    ns1:attack-id "T1003.002" ;
    ns1:may-access ns1:AuthenticationService,
        ns1:Process,
        ns1:SystemPasswordDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "NTDS" ;
    ns1:accesses ns1:EncryptedCredential ;
    ns1:attack-id "T1003.003" ;
    rdfs:subClassOf [ ],
        ns1:T1003 .

ns1:T1003.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LSA Secrets" ;
    ns1:attack-id "T1003.004" ;
    ns1:may-access ns1:Process,
        ns1:SystemPasswordDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cached Domain Credentials" ;
    ns1:accesses ns1:EncryptedCredential ;
    ns1:attack-id "T1003.005" ;
    ns1:may-modify ns1:Log ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DCSync" ;
    ns1:attack-id "T1003.006" ;
    ns1:may-modify ns1:EventLog ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Proc Filesystem" ;
    ns1:accesses ns1:OperatingSystemFile,
        ns1:ProcessImage ;
    ns1:attack-id "T1003.007" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "/etc/passwd and /etc/shadow" ;
    ns1:accesses ns1:EncryptedCredential,
        ns1:PasswordFile ;
    ns1:attack-id "T1003.008" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1004 a owl:Class ;
    rdfs:label "Winlogon Helper DLL" ;
    ns1:attack-id "T1004" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Local System" ;
    ns1:accesses ns1:File,
        ns1:LocalResource ;
    ns1:attack-id "T1005" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CollectionTechnique .

ns1:T1006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Direct Volume Access" ;
    ns1:accesses ns1:Volume ;
    ns1:attack-id "T1006" ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Service Discovery" ;
    ns1:attack-id "T1007" ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetRunningProcesses ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Fallback Channels" ;
    ns1:attack-id "T1008" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1009 a owl:Class ;
    rdfs:label "Binary Padding" ;
    ns1:attack-id "T1009" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Window Discovery" ;
    ns1:attack-id "T1010" ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetOpenWindows ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1011.001 a owl:Class ;
    rdfs:label "Exfiltration Over Bluetooth" ;
    ns1:attack-id "T1011.001" ;
    rdfs:subClassOf ns1:T1011 .

ns1:T1012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Query Registry" ;
    ns1:accesses ns1:SystemConfigurationDatabase ;
    ns1:attack-id "T1012" ;
    ns1:may-invoke ns1:GetSystemConfigValue ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1013 a owl:Class ;
    rdfs:label "Port Monitors" ;
    ns1:attack-id "T1013" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rootkit" ;
    ns1:attack-id "T1014" ;
    ns1:may-modify ns1:BootSector,
        ns1:Firmware,
        ns1:Kernel,
        ns1:KernelModule,
        ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1015 a owl:Class ;
    rdfs:label "Accessibility Features" ;
    ns1:attack-id "T1015" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1016.001 a owl:Class ;
    rdfs:label "Internet Connection Discovery" ;
    ns1:attack-id "T1016.001" ;
    rdfs:subClassOf ns1:T1016 .

ns1:T1017 a owl:Class ;
    rdfs:label "Application Deployment Software" ;
    ns1:attack-id "T1017" ;
    rdfs:subClassOf ns1:LateralMovementTechnique .

ns1:T1018 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote System Discovery" ;
    ns1:attack-id "T1018" ;
    ns1:may-access ns1:OperatingSystemConfigurationFile ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:CreateSocket ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1019 a owl:Class ;
    rdfs:label "System Firmware" ;
    ns1:attack-id "T1019" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1020.001 a owl:Class ;
    rdfs:label "Traffic Duplication" ;
    ns1:attack-id "T1020.001" ;
    rdfs:subClassOf ns1:T1020 .

ns1:T1021.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Desktop Protocol" ;
    ns1:attack-id "T1021.001" ;
    ns1:creates ns1:RDPSession ;
    ns1:produces ns1:AdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1021 .

ns1:T1021.002 a owl:Class ;
    rdfs:label "SMB/Windows Admin Shares" ;
    ns1:attack-id "T1021.002" ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.003 a owl:Class ;
    rdfs:label "Distributed Component Object Model" ;
    ns1:attack-id "T1021.003" ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SSH" ;
    ns1:attack-id "T1021.004" ;
    ns1:creates ns1:SSHSession ;
    ns1:produces ns1:AdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1021 .

ns1:T1021.005 a owl:Class ;
    rdfs:label "VNC" ;
    ns1:attack-id "T1021.005" ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.006 a owl:Class ;
    rdfs:label "Windows Remote Management" ;
    ns1:attack-id "T1021.006" ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1022 a owl:Class ;
    rdfs:label "Data Encrypted" ;
    ns1:attack-id "T1022" ;
    rdfs:subClassOf ns1:ExfiltrationTechnique .

ns1:T1023 a owl:Class ;
    rdfs:label "Shortcut Modification" ;
    ns1:attack-id "T1023" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1024 a owl:Class ;
    rdfs:label "Custom Cryptographic Protocol" ;
    ns1:attack-id "T1024" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1025 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Removable Media" ;
    ns1:accesses ns1:RemovableMediaDevice ;
    ns1:attack-id "T1025" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1027.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Binary Padding" ;
    ns1:attack-id "T1027.001" ;
    ns1:modifies ns1:ExecutableBinary ;
    rdfs:subClassOf [ ],
        ns1:T1027 .

ns1:T1027.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Packing" ;
    ns1:attack-id "T1027.002" ;
    ns1:obfuscates ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1027 .

ns1:T1027.003 a owl:Class ;
    rdfs:label "Steganography" ;
    ns1:attack-id "T1027.003" ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compile After Delivery" ;
    ns1:attack-id "T1027.004" ;
    ns1:creates ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1027 .

ns1:T1027.005 a owl:Class ;
    rdfs:label "Indicator Removal from Tools" ;
    ns1:attack-id "T1027.005" ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "HTML Smuggling" ;
    ns1:attack-id "T1027.006" ;
    ns1:creates ns1:JavaScriptBlob ;
    ns1:hides ns1:DigitalArtifact ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1027 .

ns1:T1028 a owl:Class ;
    rdfs:label "Windows Remote Management" ;
    ns1:attack-id "T1028" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:LateralMovementTechnique .

ns1:T1029 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Transfer" ;
    ns1:attack-id "T1029" ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1030 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Transfer Size Limits" ;
    ns1:attack-id "T1030" ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1031 a owl:Class ;
    rdfs:label "Modify Existing Service" ;
    ns1:attack-id "T1031" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1032 a owl:Class ;
    rdfs:label "Standard Cryptographic Protocol" ;
    ns1:attack-id "T1032" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1033 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Owner/User Discovery" ;
    ns1:attack-id "T1033" ;
    ns1:may-access ns1:DirectoryService,
        ns1:GetSystemConfigValue,
        ns1:PasswordFile,
        ns1:ProcessSegment ;
    ns1:may-invoke ns1:CopyToken,
        ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1035 a owl:Class ;
    rdfs:label "Service Execution" ;
    ns1:attack-id "T1035" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1036.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Invalid Code Signature" ;
    ns1:attack-id "T1036.001" ;
    ns1:creates ns1:ExecutableBinary ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Right-to-Left Override" ;
    ns1:attack-id "T1036.002" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rename System Utilities" ;
    ns1:attack-id "T1036.003" ;
    ns1:may-create ns1:ExecutableFile ;
    ns1:may-modify ns1:OperatingSystemExecutableFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1036 .

ns1:T1036.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Masquerade Task or Service" ;
    ns1:attack-id "T1036.004" ;
    ns1:modifies ns1:TaskSchedule ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Match Legitimate Name or Location" ;
    ns1:attack-id "T1036.005" ;
    ns1:invokes ns1:MoveFile ;
    ns1:may-create ns1:File ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1036 .

ns1:T1036.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Space after Filename" ;
    ns1:attack-id "T1036.006" ;
    ns1:creates ns1:File ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Double File Extension" ;
    ns1:attack-id "T1036.007" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1037.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logon Script (Windows)" ;
    ns1:attack-id "T1037.001" ;
    ns1:modifies ns1:UserInitScript ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logon Script (Mac)" ;
    ns1:attack-id "T1037.002" ;
    ns1:modifies ns1:UserInitScript ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Logon Script" ;
    ns1:attack-id "T1037.003" ;
    ns1:definition "Group Policy Object / Active Directory Users and Computers are both Active Directory-based" ;
    ns1:modifies ns1:NetworkInitScriptFileResource ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rc.common" ;
    ns1:attack-id "T1037.004" ;
    ns1:modifies ns1:SystemInitScript ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Startup Items" ;
    ns1:attack-id "T1037.005" ;
    ns1:modifies ns1:SystemStartupDirectory ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1038 a owl:Class ;
    rdfs:label "DLL Search Order Hijacking" ;
    ns1:attack-id "T1038" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1039 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Network Shared Drive" ;
    ns1:accesses ns1:NetworkFileShareResource ;
    ns1:attack-id "T1039" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1040 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Sniffing" ;
    ns1:attack-id "T1040" ;
    ns1:may-produce ns1:DNSLookup ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique,
        ns1:DiscoveryTechnique .

ns1:T1041 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over C2 Channel" ;
    ns1:attack-id "T1041" ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExfiltrationTechnique .

ns1:T1042 a owl:Class ;
    rdfs:label "Change Default File Association" ;
    ns1:attack-id "T1042" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1044 a owl:Class ;
    rdfs:label "File System Permissions Weakness" ;
    ns1:attack-id "T1044" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1045 a owl:Class ;
    rdfs:label "Software Packing" ;
    ns1:attack-id "T1045" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1046 a owl:Class ;
    rdfs:label "Network Service Scanning" ;
    ns1:attack-id "T1046" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1047 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Management Instrumentation Execution" ;
    ns1:attack-id "T1047" ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionTechnique .

ns1:T1048.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Symmetric Encrypted Non-C2 Protocol" ;
    ns1:attack-id "T1048.001" ;
    ns1:produces ns1:OutboundInternetEncryptedTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1048 .

ns1:T1048.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol" ;
    ns1:attack-id "T1048.002" ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:produces ns1:OutboundInternetEncryptedTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1048 .

ns1:T1048.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol" ;
    ns1:attack-id "T1048.003" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1048 .

ns1:T1049 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Network Connections Discovery" ;
    ns1:attack-id "T1049" ;
    ns1:may-invoke ns1:GetOpenSockets ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1050 a owl:Class ;
    rdfs:label "New Service" ;
    ns1:attack-id "T1050" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1052.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration over USB" ;
    ns1:attack-id "T1052.001" ;
    ns1:modifies ns1:RemovableMediaDevice ;
    rdfs:subClassOf [ ],
        ns1:T1052 .

ns1:T1053.001 a owl:Class ;
    rdfs:label "At (Linux) Execution" ;
    ns1:attack-id "T1053.001" ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.002 a owl:Class ;
    rdfs:label "At (Windows) Execution" ;
    ns1:attack-id "T1053.002" ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.003 a owl:Class ;
    rdfs:label "Cron Execution" ;
    ns1:attack-id "T1053.003" ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Launchd" ;
    ns1:attack-id "T1053.004" ;
    ns1:creates ns1:PropertyListFile ;
    rdfs:subClassOf [ ],
        ns1:T1053 .

ns1:T1053.005 a owl:Class ;
    rdfs:label "Schtasks Execution" ;
    ns1:attack-id "T1053.005" ;
    ns1:definition "Renamed from ATT&CK to be consistent with at, launchd, cron siblings; name as is looks like parent.  Not sure why parent is not just Scheduled Task [Execution[." ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.006 a owl:Class ;
    rdfs:label "Systemd Timers" ;
    ns1:attack-id "T1053.006" ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.007 a owl:Class ;
    rdfs:label "Container Orchestration Job" ;
    ns1:attack-id "T1053.007" ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1054 a owl:Class ;
    rdfs:label "Indicator Blocking" ;
    ns1:attack-id "T1054" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1055.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dynamic-link Library Injection" ;
    ns1:adds ns1:SharedLibraryFile ;
    ns1:attack-id "T1055.001" ;
    ns1:invokes ns1:SystemCall ;
    ns1:loads ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Portable Executable Injection" ;
    ns1:attack-id "T1055.002" ;
    ns1:may-add ns1:ObjectFile ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread Execution Hijacking" ;
    ns1:attack-id "T1055.003" ;
    ns1:invokes ns1:SystemCall ;
    ns1:may-add ns1:ExecutableBinary ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asynchronous Procedure Call" ;
    ns1:attack-id "T1055.004" ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread Local Storage" ;
    ns1:attack-id "T1055.005" ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Ptrace System Calls" ;
    ns1:attack-id "T1055.008" ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Proc Memory" ;
    ns1:accesses ns1:OperatingSystemFile ;
    ns1:attack-id "T1055.009" ;
    ns1:may-modify ns1:OperatingSystemFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.011 a owl:Class ;
    rdfs:label "Extra Window Memory Injection" ;
    ns1:attack-id "T1055.011" ;
    rdfs:subClassOf ns1:T1055 .

ns1:T1055.012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Hollowing" ;
    ns1:attack-id "T1055.012" ;
    ns1:modifies ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.013 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Doppelgänging" ;
    ns1:attack-id "T1055.013" ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "VDSO Hijacking" ;
    ns1:accesses ns1:SharedLibraryFile ;
    ns1:attack-id "T1055.014" ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.015 a owl:Class ;
    rdfs:label "ListPlanting" ;
    ns1:attack-id "T1055.015" ;
    rdfs:subClassOf ns1:T1055 .

ns1:T1056.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keylogging" ;
    ns1:accesses ns1:KeyboardInputDevice ;
    ns1:attack-id "T1056.001" ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1056.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "GUI Input Capture" ;
    ns1:accesses ns1:GraphicalUserInterface ;
    ns1:attack-id "T1056.002" ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1056.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Portal Capture" ;
    ns1:attack-id "T1056.003" ;
    ns1:modifies ns1:WebServerApplication ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1056.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential API Hooking" ;
    ns1:attack-id "T1056.004" ;
    ns1:may-modify ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1057 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Discovery" ;
    ns1:attack-id "T1057" ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetRunningProcesses ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1058 a owl:Class ;
    rdfs:label "Service Registry Permissions Weakness" ;
    ns1:attack-id "T1058" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1059.001 a owl:Class ;
    rdfs:label "PowerShell Execution" ;
    ns1:attack-id "T1059.001" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.002 a owl:Class ;
    rdfs:label "AppleScript Execution" ;
    ns1:attack-id "T1059.002" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.003 a owl:Class ;
    rdfs:label "Windows Command Shell Execution" ;
    ns1:attack-id "T1059.003" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.004 a owl:Class ;
    rdfs:label "Unix Shell Execution" ;
    ns1:attack-id "T1059.004" ;
    rdfs:subClassOf ns1:T1059 ;
    ns2:altLabel "Bash Execution" .

ns1:T1059.005 a owl:Class ;
    rdfs:label "VBScript Execution" ;
    ns1:attack-id "T1059.005" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.006 a owl:Class ;
    rdfs:label "Python Execution" ;
    ns1:attack-id "T1059.006" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.007 a owl:Class ;
    rdfs:label "JavaScript/JScript" ;
    ns1:attack-id "T1059.007" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.008 a owl:Class ;
    rdfs:label "Network Device CLI" ;
    ns1:attack-id "T1059.008" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1060 a owl:Class ;
    rdfs:label "Registry Run Keys / Startup Folder" ;
    ns1:attack-id "T1060" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1063 a owl:Class ;
    rdfs:label "Security Software Discovery" ;
    ns1:attack-id "T1063" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1065 a owl:Class ;
    rdfs:label "Uncommonly Used Port" ;
    ns1:attack-id "T1065" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1066 a owl:Class ;
    rdfs:label "Indicator Removal from Tools" ;
    ns1:attack-id "T1066" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1067 a owl:Class ;
    rdfs:label "Bootkit" ;
    ns1:attack-id "T1067" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1068 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Privilege Escalation" ;
    ns1:attack-id "T1068" ;
    ns1:enables ns1:PrivilegeEscalation ;
    ns1:may-modify ns1:StackFrame ;
    ns1:modifies ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:PrivilegeEscalationTechnique .

ns1:T1069.001 a owl:Class ;
    rdfs:label "Local Groups" ;
    ns1:attack-id "T1069.001" ;
    rdfs:subClassOf ns1:T1069 .

ns1:T1069.002 a owl:Class ;
    rdfs:label "Domain Groups" ;
    ns1:attack-id "T1069.002" ;
    rdfs:subClassOf ns1:T1069 .

ns1:T1069.003 a owl:Class ;
    rdfs:label "Cloud Groups" ;
    ns1:attack-id "T1069.003" ;
    rdfs:subClassOf ns1:T1069 .

ns1:T1070.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clear Windows Event Logs" ;
    ns1:attack-id "T1070.001" ;
    ns1:modifies ns1:EventLog ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clear Linux or Mac System Logs" ;
    ns1:attack-id "T1070.002" ;
    ns1:modifies ns1:OperatingSystemLogFile ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clear Command History" ;
    ns1:attack-id "T1070.003" ;
    ns1:modifies ns1:CommandHistoryLog ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Deletion" ;
    ns1:attack-id "T1070.004" ;
    ns1:deletes ns1:File ;
    ns1:may-modify ns1:File ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1070 .

ns1:T1070.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Share Connection Removal" ;
    ns1:attack-id "T1070.005" ;
    ns1:unmounts ns1:NetworkFileShareResource ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Timestomp" ;
    ns1:attack-id "T1070.006" ;
    ns1:forges ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1071.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Protocols" ;
    ns1:attack-id "T1071.001" ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1071 .

ns1:T1071.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Transfer Protocols" ;
    ns1:attack-id "T1071.002" ;
    ns1:produces ns1:OutboundInternetFileTransferTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1071 .

ns1:T1071.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mail Protocols" ;
    ns1:attack-id "T1071.003" ;
    ns1:produces ns1:OutboundInternetMailTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1071 .

ns1:T1071.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS" ;
    ns1:attack-id "T1071.004" ;
    ns1:produces ns1:OutboundInternetDNSLookupTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1071 .

ns1:T1072 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Deployment Tools Execution" ;
    ns1:adds ns1:File ;
    ns1:attack-id "T1072" ;
    ns1:executes ns1:SoftwareDeploymentTool ;
    ns1:installs ns1:Software ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:ExecutionTechnique,
        ns1:LateralMovementTechnique .

ns1:T1073 a owl:Class ;
    rdfs:label "DLL Side-Loading" ;
    ns1:attack-id "T1073" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1074.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Data Staging" ;
    ns1:attack-id "T1074.001" ;
    ns1:may-create ns1:File ;
    ns1:may-invoke ns1:CreateFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1074 .

ns1:T1074.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Data Staging" ;
    ns1:attack-id "T1074.002" ;
    ns1:modifies ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:T1074 .

ns1:T1075 a owl:Class ;
    rdfs:label "Pass the Hash" ;
    ns1:attack-id "T1075" ;
    rdfs:subClassOf ns1:LateralMovementTechnique .

ns1:T1076 a owl:Class ;
    rdfs:label "Remote Desktop Protocol" ;
    ns1:attack-id "T1076" ;
    rdfs:subClassOf ns1:LateralMovementTechnique .

ns1:T1077 a owl:Class ;
    rdfs:label "Windows Admin Shares" ;
    ns1:attack-id "T1077" ;
    rdfs:subClassOf ns1:LateralMovementTechnique .

ns1:T1078.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Default Accounts" ;
    ns1:attack-id "T1078.001" ;
    ns1:uses ns1:DefaultUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1078.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Accounts" ;
    ns1:attack-id "T1078.002" ;
    ns1:uses ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1078.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Accounts" ;
    ns1:attack-id "T1078.003" ;
    ns1:uses ns1:LocalUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1078.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Accounts" ;
    ns1:attack-id "T1078.004" ;
    ns1:uses ns1:CloudUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1079 a owl:Class ;
    rdfs:label "Multilayer Encryption" ;
    ns1:attack-id "T1079" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1080 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Taint Shared Content" ;
    ns1:attack-id "T1080" ;
    ns1:modifies ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1081 a owl:Class ;
    rdfs:label "Credentials in Files" ;
    ns1:attack-id "T1081" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1082 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Information Discovery" ;
    ns1:attack-id "T1082" ;
    ns1:may-access ns1:DecoyArtifact ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1083 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File and Directory Discovery" ;
    ns1:accesses ns1:Directory,
        ns1:File ;
    ns1:attack-id "T1083" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1084 a owl:Class ;
    rdfs:label "Windows Management Instrumentation Event Subscription" ;
    ns1:attack-id "T1084" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1085 a owl:Class ;
    rdfs:label "Rundll32" ;
    ns1:attack-id "T1085" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1086 a owl:Class ;
    rdfs:label "PowerShell" ;
    ns1:attack-id "T1086" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1087.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Account" ;
    ns1:attack-id "T1087.001" ;
    ns1:creates ns1:LocalUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1136 .

ns1:T1087.003 a owl:Class ;
    rdfs:label "Email Account" ;
    ns1:attack-id "T1087.003" ;
    rdfs:subClassOf ns1:T1087 .

ns1:T1087.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Account" ;
    ns1:attack-id "T1087.004" ;
    ns1:creates ns1:CloudUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1136 .

ns1:T1088 a owl:Class ;
    rdfs:label "Bypass User Account Control" ;
    ns1:attack-id "T1088" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1089 a owl:Class ;
    rdfs:label "Disabling Security Tools" ;
    ns1:attack-id "T1089" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1090.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internal Proxy" ;
    ns1:attack-id "T1090.001" ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1090.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Proxy" ;
    ns1:attack-id "T1090.002" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1090.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multi-hop Proxy" ;
    ns1:attack-id "T1090.003" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1090.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Fronting" ;
    ns1:attack-id "T1090.004" ;
    ns1:produces ns1:OutboundInternetEncryptedWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1091 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Replication Through Removable Media" ;
    ns1:attack-id "T1091" ;
    ns1:executes ns1:RemovableMediaDevice ;
    rdfs:subClassOf [ ],
        ns1:InitialAccessTechnique,
        ns1:LateralMovementTechnique .

ns1:T1092 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Communication Through Removable Media" ;
    ns1:attack-id "T1092" ;
    ns1:modifies ns1:RemovableMediaDevice ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1093 a owl:Class ;
    rdfs:label "Process Hollowing" ;
    ns1:attack-id "T1093" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1094 a owl:Class ;
    rdfs:label "Custom Command and Control Protocol" ;
    ns1:attack-id "T1094" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1095 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Non-Application Layer Protocol" ;
    ns1:attack-id "T1095" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1096 a owl:Class ;
    rdfs:label "NTFS File Attributes" ;
    ns1:attack-id "T1096" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1097 a owl:Class ;
    rdfs:label "Pass the Ticket" ;
    ns1:attack-id "T1097" ;
    rdfs:subClassOf ns1:LateralMovementTechnique .

ns1:T1098.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Additional Azure Service Principal Credentials" ;
    ns1:attack-id "T1098.001" ;
    ns1:creates ns1:Credential ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1098 .

ns1:T1098.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exchange Email Delegate Permissions" ;
    ns1:attack-id "T1098.002" ;
    ns1:modifies ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1098 .

ns1:T1098.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Add Office 365 Global Administrator Role" ;
    ns1:attack-id "T1098.003" ;
    ns1:modifies ns1:GlobalUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1098 .

ns1:T1098.004 a owl:Class ;
    rdfs:label "SSH Authorized Keys" ;
    ns1:attack-id "T1098.004" ;
    rdfs:subClassOf ns1:T1098 .

ns1:T1098.005 a owl:Class ;
    rdfs:label "Device Registration" ;
    ns1:attack-id "T1098.005" ;
    rdfs:subClassOf ns1:T1098 .

ns1:T1099 a owl:Class ;
    rdfs:label "Timestomp" ;
    ns1:attack-id "T1099" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1100 a owl:Class ;
    rdfs:label "Web Shell" ;
    ns1:attack-id "T1100" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1101 a owl:Class ;
    rdfs:label "Security Support Provider" ;
    ns1:attack-id "T1101" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1102.001 a owl:Class ;
    rdfs:label "Dead Drop Resolver" ;
    ns1:attack-id "T1102.001" ;
    rdfs:subClassOf ns1:T1102 .

ns1:T1102.002 a owl:Class ;
    rdfs:label "Bidirectional Communication" ;
    ns1:attack-id "T1102.002" ;
    rdfs:subClassOf ns1:T1102 .

ns1:T1102.003 a owl:Class ;
    rdfs:label "One-Way Communication" ;
    ns1:attack-id "T1102.003" ;
    rdfs:subClassOf ns1:T1102 .

ns1:T1103 a owl:Class ;
    rdfs:label "AppInit DLLs" ;
    ns1:attack-id "T1103" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1104 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multi-Stage Channels" ;
    ns1:attack-id "T1104" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1105 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Ingress Tool Transfer" ;
    ns1:attack-id "T1105" ;
    ns1:definition "Session is initiated by the client, and may be a custom protocol which is why it is related to generic network traffic instead of file transfer network traffic." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1106 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Native API Execution" ;
    ns1:attack-id "T1106" ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:ExecutionTechnique .

ns1:T1107 a owl:Class ;
    rdfs:label "File Deletion" ;
    ns1:attack-id "T1107" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1109 a owl:Class ;
    rdfs:label "Component Firmware" ;
    ns1:attack-id "T1109" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1110.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Guessing" ;
    ns1:accesses ns1:Password ;
    ns1:attack-id "T1110.001" ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1110 .

ns1:T1110.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Cracking" ;
    ns1:accesses ns1:Password ;
    ns1:attack-id "T1110.002" ;
    rdfs:subClassOf [ ],
        ns1:T1110 .

ns1:T1110.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Spraying" ;
    ns1:accesses ns1:Password ;
    ns1:attack-id "T1110.003" ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1110 .

ns1:T1110.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Stuffing" ;
    ns1:attack-id "T1110.004" ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1110 .

ns1:T1111 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Two-Factor Authentication Interception" ;
    ns1:attack-id "T1111" ;
    ns1:may-access ns1:SecurityToken ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1112 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Modify Registry" ;
    ns1:attack-id "T1112" ;
    ns1:modifies ns1:WindowsRegistry ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1113 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Screen Capture" ;
    ns1:attack-id "T1113" ;
    ns1:may-access ns1:DisplayServer ;
    ns1:may-invoke ns1:GetScreenCapture ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CollectionTechnique .

ns1:T1114.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Email Collection" ;
    ns1:attack-id "T1114.001" ;
    ns1:reads ns1:Email ;
    rdfs:subClassOf [ ],
        ns1:T1114 .

ns1:T1114.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Email Collection" ;
    ns1:accesses ns1:MailServer ;
    ns1:attack-id "T1114.002" ;
    rdfs:subClassOf [ ],
        ns1:T1114 .

ns1:T1114.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Forwarding Rule" ;
    ns1:attack-id "T1114.003" ;
    ns1:modifies ns1:ApplicationConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1114 .

ns1:T1115 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clipboard Data" ;
    ns1:attack-id "T1115" ;
    ns1:reads ns1:Clipboard ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1116 a owl:Class ;
    rdfs:label "Code Signing" ;
    ns1:attack-id "T1116" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1117 a owl:Class ;
    rdfs:label "Regsvr32" ;
    ns1:attack-id "T1117" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1118 a owl:Class ;
    rdfs:label "InstallUtil" ;
    ns1:attack-id "T1118" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1119 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Automated Collection" ;
    ns1:accesses ns1:File ;
    ns1:attack-id "T1119" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1120 a owl:Class ;
    rdfs:label "Peripheral Device Discovery" ;
    ns1:attack-id "T1120" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1121 a owl:Class ;
    rdfs:label "Regsvcs/Regasm" ;
    ns1:attack-id "T1121" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1122 a owl:Class ;
    rdfs:label "Component Object Model Hijacking" ;
    ns1:attack-id "T1122" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1123 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Audio Capture" ;
    ns1:accesses ns1:AudioInputDevice ;
    ns1:attack-id "T1123" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1124 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Time Discovery" ;
    ns1:attack-id "T1124" ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetSystemTime ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1125 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Video Capture" ;
    ns1:accesses ns1:VideoInputDevice ;
    ns1:attack-id "T1125" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1126 a owl:Class ;
    rdfs:label "Network Share Connection Removal" ;
    ns1:attack-id "T1126" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1127.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "MSBuild" ;
    ns1:attack-id "T1127.001" ;
    ns1:modifies ns1:CompilerConfigurationFile ;
    ns1:runs ns1:Compiler ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1127 .

ns1:T1128 a owl:Class ;
    rdfs:label "Netsh Helper DLL" ;
    ns1:attack-id "T1128" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1129 a owl:Class ;
    rdfs:label "Shared Modules Execution" ;
    ns1:attack-id "T1129" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1130 a owl:Class ;
    rdfs:label "Install Root Certificate" ;
    ns1:attack-id "T1130" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1131 a owl:Class ;
    rdfs:label "Authentication Package" ;
    ns1:attack-id "T1131" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1132.001 a owl:Class ;
    rdfs:label "Standard Encoding" ;
    ns1:attack-id "T1132.001" ;
    rdfs:subClassOf ns1:T1132 .

ns1:T1132.002 a owl:Class ;
    rdfs:label "Non-Standard Encoding" ;
    ns1:attack-id "T1132.002" ;
    rdfs:subClassOf ns1:T1132 .

ns1:T1133 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Remote Services" ;
    ns1:attack-id "T1133" ;
    ns1:produces ns1:Authentication,
        ns1:Authorization,
        ns1:NetworkSession ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:InitialAccessTechnique,
        ns1:PersistenceTechnique .

ns1:T1134.001 a ns1:AccessToken,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Token Impersonation/Theft" ;
    ns1:attack-id "T1134.001" ;
    ns1:copies ns1:AccessToken ;
    rdfs:subClassOf [ ],
        ns1:T1134 .

ns1:T1134.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Process with Token" ;
    ns1:attack-id "T1134.002" ;
    ns1:copies ns1:AccessToken ;
    ns1:may-modify ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1134 .

ns1:T1134.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Make and Impersonate Token" ;
    ns1:attack-id "T1134.003" ;
    ns1:copies ns1:AccessToken ;
    ns1:creates ns1:LoginSession ;
    ns1:may-modify ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1134 .

ns1:T1134.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Parent PID Spoofing" ;
    ns1:attack-id "T1134.004" ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:T1134 .

ns1:T1134.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SID-History Injection" ;
    ns1:attack-id "T1134.005" ;
    ns1:modifies ns1:AccessControlConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1134 .

ns1:T1135 a owl:Class ;
    rdfs:label "Network Share Discovery" ;
    ns1:attack-id "T1135" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1136.001 a owl:Class ;
    rdfs:label "Local Account" ;
    ns1:attack-id "T1136.001" ;
    rdfs:subClassOf ns1:T1136 .

ns1:T1136.002 a owl:Class ;
    rdfs:label "Domain Account" ;
    ns1:attack-id "T1136.002" ;
    rdfs:subClassOf ns1:T1136 .

ns1:T1136.003 a owl:Class ;
    rdfs:label "Cloud Account" ;
    ns1:attack-id "T1136.003" ;
    rdfs:subClassOf ns1:T1136 .

ns1:T1137.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Template Macros" ;
    ns1:attack-id "T1137.001" ;
    ns1:may-add ns1:ExecutableScript ;
    ns1:may-modify ns1:ExecutableScript,
        ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1137 .

ns1:T1137.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Test" ;
    ns1:attack-id "T1137.002" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outlook Forms" ;
    ns1:adds ns1:OfficeApplicationFile ;
    ns1:attack-id "T1137.003" ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outlook Home Page" ;
    ns1:attack-id "T1137.004" ;
    ns1:modifies ns1:ApplicationConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outlook Rules" ;
    ns1:attack-id "T1137.005" ;
    ns1:modifies ns1:ApplicationConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Add-ins" ;
    ns1:adds ns1:Software ;
    ns1:attack-id "T1137.006" ;
    ns1:may-modify ns1:SystemConfigurationDatabase ;
    ns1:modifies ns1:OfficeApplication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1137 .

ns1:T1138 a owl:Class ;
    rdfs:label "Application Shimming" ;
    ns1:attack-id "T1138" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1139 a owl:Class ;
    rdfs:label "Bash History" ;
    ns1:attack-id "T1139" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1140 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Deobfuscate/Decode Files or Information" ;
    ns1:attack-id "T1140" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-add ns1:ExecutableFile ;
    ns1:may-modify ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1141 a owl:Class ;
    rdfs:label "Input Prompt" ;
    ns1:attack-id "T1141" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1142 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keychain" ;
    ns1:accesses ns1:EncryptedCredential ;
    ns1:attack-id "T1142" ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1143 a owl:Class ;
    rdfs:label "Hidden Window" ;
    ns1:attack-id "T1143" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1144 a owl:Class ;
    rdfs:label "Gatekeeper Bypass" ;
    ns1:attack-id "T1144" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1145 a owl:Class ;
    rdfs:label "Private Keys" ;
    ns1:attack-id "T1145" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1146 a owl:Class ;
    rdfs:label "Clear Command History" ;
    ns1:attack-id "T1146" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1147 a owl:Class ;
    rdfs:label "Hidden Users" ;
    ns1:attack-id "T1147" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1148 a owl:Class ;
    rdfs:label "HISTCONTROL" ;
    ns1:attack-id "T1148" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1150 a owl:Class ;
    rdfs:label "Plist Modification" ;
    ns1:attack-id "T1150" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1151 a owl:Class ;
    rdfs:label "Space after Filename" ;
    ns1:attack-id "T1151" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1152 a owl:Class ;
    rdfs:label "Launchctl" ;
    ns1:attack-id "T1152" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique,
        ns1:PersistenceTechnique .

ns1:T1154 a owl:Class ;
    rdfs:label "Trap" ;
    ns1:attack-id "T1154" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:PersistenceTechnique .

ns1:T1155 a owl:Class ;
    rdfs:label "AppleScript" ;
    ns1:attack-id "T1155" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1156 a owl:Class ;
    rdfs:label "Malicious Shell Modification" ;
    ns1:attack-id "T1156" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1157 a owl:Class ;
    rdfs:label "Dylib Hijacking" ;
    ns1:attack-id "T1157" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1158 a owl:Class ;
    rdfs:label "Hidden Files and Directories" ;
    ns1:attack-id "T1158" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1159 a owl:Class ;
    rdfs:label "Launch Agent" ;
    ns1:attack-id "T1159" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1160 a owl:Class ;
    rdfs:label "Launch Daemon" ;
    ns1:attack-id "T1160" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1161 a owl:Class ;
    rdfs:label "LC_LOAD_DYLIB Addition" ;
    ns1:attack-id "T1161" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1162 a owl:Class ;
    rdfs:label "Login Item" ;
    ns1:attack-id "T1162" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1163 a owl:Class ;
    rdfs:label "Rc.common" ;
    ns1:attack-id "T1163" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1164 a owl:Class ;
    rdfs:label "Re-opened Applications" ;
    ns1:attack-id "T1164" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1165 a owl:Class ;
    rdfs:label "Startup Items" ;
    ns1:attack-id "T1165" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1166 a owl:Class ;
    rdfs:label "Setuid and Setgid" ;
    ns1:attack-id "T1166" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1167 a owl:Class ;
    rdfs:label "Securityd Memory" ;
    ns1:attack-id "T1167" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1168 a owl:Class ;
    rdfs:label "Local Job Scheduling" ;
    ns1:attack-id "T1168" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:PersistenceTechnique .

ns1:T1169 a owl:Class ;
    rdfs:label "Sudo" ;
    ns1:attack-id "T1169" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique .

ns1:T1170 a owl:Class ;
    rdfs:label "Mshta" ;
    ns1:attack-id "T1170" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1171 a owl:Class ;
    rdfs:label "LLMNR/NBT-NS Poisoning and Relay" ;
    ns1:attack-id "T1171" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1172 a owl:Class ;
    rdfs:label "Domain Fronting" ;
    ns1:attack-id "T1172" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1173 a owl:Class ;
    rdfs:label "Dynamic Data Exchange" ;
    ns1:attack-id "T1173" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1174 a owl:Class ;
    rdfs:label "Password Filter DLL" ;
    ns1:attack-id "T1174" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1176 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Browser Extensions" ;
    ns1:attack-id "T1176" ;
    ns1:modifies ns1:BrowserExtension ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1177 a owl:Class ;
    rdfs:label "LSASS Driver" ;
    ns1:attack-id "T1177" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:PersistenceTechnique .

ns1:T1178 a owl:Class ;
    rdfs:label "SID-History Injection" ;
    ns1:attack-id "T1178" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique .

ns1:T1179 a owl:Class ;
    rdfs:label "Hooking" ;
    ns1:attack-id "T1179" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1180 a owl:Class ;
    rdfs:label "Screensaver" ;
    ns1:attack-id "T1180" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1181 a owl:Class ;
    rdfs:label "Extra Window Memory Injection" ;
    ns1:attack-id "T1181" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1182 a owl:Class ;
    rdfs:label "AppCert DLLs" ;
    ns1:attack-id "T1182" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1183 a owl:Class ;
    rdfs:label "Image File Execution Options Injection" ;
    ns1:attack-id "T1183" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1184 a owl:Class ;
    rdfs:label "SSH Hijacking" ;
    ns1:attack-id "T1184" ;
    rdfs:subClassOf ns1:LateralMovementTechnique .

ns1:T1185 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Man in the Browser" ;
    ns1:attack-id "T1185" ;
    ns1:produces ns1:WebNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1186 a owl:Class ;
    rdfs:label "Process Doppelgänging" ;
    ns1:attack-id "T1186" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1187 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Forced Authentication" ;
    ns1:attack-id "T1187" ;
    ns1:may-modify ns1:WindowsShortcutFile ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1188 a owl:Class ;
    rdfs:label "Multi-hop Proxy" ;
    ns1:attack-id "T1188" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1189 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Drive-by Compromise" ;
    ns1:attack-id "T1189" ;
    ns1:modifies ns1:ProcessSegment ;
    ns1:produces ns1:OutboundInternetNetworkTraffic,
        ns1:URL ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:InitialAccessTechnique .

ns1:T1190 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploit Public-Facing Application" ;
    ns1:attack-id "T1190" ;
    ns1:injects ns1:DatabaseQuery ;
    ns1:modifies ns1:ProcessSegment ;
    ns1:produces ns1:InboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:InitialAccessTechnique .

ns1:T1191 a owl:Class ;
    rdfs:label "CMSTP" ;
    ns1:attack-id "T1191" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1192 a owl:Class ;
    rdfs:label "Spearphishing Link" ;
    ns1:attack-id "T1192" ;
    rdfs:subClassOf ns1:InitialAccessTechnique .

ns1:T1193 a owl:Class ;
    rdfs:label "Spearphishing Attachment" ;
    ns1:attack-id "T1193" ;
    rdfs:subClassOf ns1:InitialAccessTechnique .

ns1:T1194 a owl:Class ;
    rdfs:label "Spearphishing via Service" ;
    ns1:attack-id "T1194" ;
    rdfs:subClassOf ns1:InitialAccessTechnique .

ns1:T1195.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Software Dependencies and Development Tools" ;
    ns1:attack-id "T1195.001" ;
    ns1:modifies ns1:Software ;
    rdfs:subClassOf [ ],
        ns1:T1195 .

ns1:T1195.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Software Supply Chain" ;
    ns1:attack-id "T1195.002" ;
    ns1:modifies ns1:Software ;
    rdfs:subClassOf [ ],
        ns1:T1195 .

ns1:T1195.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Hardware Supply Chain" ;
    ns1:attack-id "T1195.003" ;
    ns1:modifies ns1:HardwareDevice ;
    rdfs:subClassOf [ ],
        ns1:T1195 .

ns1:T1196 a owl:Class ;
    rdfs:label "Control Panel Items" ;
    ns1:attack-id "T1196" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1197 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "BITS Jobs" ;
    ns1:attack-id "T1197" ;
    ns1:may-produce ns1:IntranetIPCNetworkTraffic,
        ns1:IntranetWebNetworkTraffic,
        ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1198 a owl:Class ;
    rdfs:label "SIP and Trust Provider Hijacking" ;
    ns1:attack-id "T1198" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1199 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trusted Relationship" ;
    ns1:attack-id "T1199" ;
    ns1:creates ns1:LoginSession ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:InitialAccessTechnique .

ns1:T1200 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Additions" ;
    ns1:attack-id "T1200" ;
    ns1:connects ns1:HardwareDevice ;
    rdfs:subClassOf [ ],
        ns1:InitialAccessTechnique .

ns1:T1201 a owl:Class ;
    rdfs:label "Password Policy Discovery" ;
    ns1:attack-id "T1201" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1202 a owl:Class ;
    rdfs:label "Indirect Command Execution" ;
    ns1:attack-id "T1202" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1203 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Client Execution" ;
    ns1:attack-id "T1203" ;
    ns1:modifies ns1:ProcessCodeSegment,
        ns1:StackFrame ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionTechnique .

ns1:T1204.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Malicious Link Execution" ;
    ns1:accesses ns1:URL ;
    ns1:attack-id "T1204.001" ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1204 .

ns1:T1204.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Malicious File Execution" ;
    ns1:attack-id "T1204.002" ;
    ns1:executes ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1204 .

ns1:T1204.003 a owl:Class ;
    rdfs:label "Malicious Image" ;
    ns1:attack-id "T1204.003" ;
    rdfs:subClassOf ns1:T1204 .

ns1:T1205.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Port Knocking" ;
    ns1:attack-id "T1205.001" ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1205 .

ns1:T1206 a owl:Class ;
    rdfs:label "Sudo Caching" ;
    ns1:attack-id "T1206" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique .

ns1:T1207 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rogue Domain Controller" ;
    ns1:attack-id "T1207" ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1208 a owl:Class ;
    rdfs:label "Kerberoasting" ;
    ns1:attack-id "T1208" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1209 a owl:Class ;
    rdfs:label "Time Providers" ;
    ns1:attack-id "T1209" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1210 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation of Remote Services" ;
    ns1:attack-id "T1210" ;
    ns1:may-modify ns1:ProcessCodeSegment,
        ns1:ProcessSegment,
        ns1:StackFrame ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:LateralMovementTechnique .

ns1:T1211 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Defense Evasion" ;
    ns1:attack-id "T1211" ;
    ns1:may-modify ns1:ProcessCodeSegment,
        ns1:StackFrame ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1212 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Credential Access" ;
    ns1:attack-id "T1212" ;
    ns1:may-access ns1:AuthenticationService,
        ns1:CredentialManagementSystem ;
    ns1:may-modify ns1:ProcessCodeSegment,
        ns1:StackFrame ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1213.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Confluence" ;
    ns1:accesses ns1:WebFileResource ;
    ns1:attack-id "T1213.001" ;
    rdfs:subClassOf [ ],
        ns1:T1213 .

ns1:T1213.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sharepoint" ;
    ns1:accesses ns1:WebFileResource ;
    ns1:attack-id "T1213.002" ;
    rdfs:subClassOf [ ],
        ns1:T1213 .

ns1:T1213.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Code Repositories" ;
    ns1:attack-id "T1213.003" ;
    ns1:reads ns1:CodeRepository ;
    rdfs:subClassOf [ ],
        ns1:T1213 .

ns1:T1214 a owl:Class ;
    rdfs:label "Credentials in Registry" ;
    ns1:attack-id "T1214" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1215 a owl:Class ;
    rdfs:label "Kernel Modules and Extensions" ;
    ns1:attack-id "T1215" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1216.001 a owl:Class ;
    rdfs:label "PubPrn Execution" ;
    ns1:attack-id "T1216.001" ;
    rdfs:subClassOf ns1:T1216 .

ns1:T1217 a owl:Class ;
    rdfs:label "Browser Bookmark Discovery" ;
    ns1:attack-id "T1217" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1218.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compiled HTML File" ;
    ns1:attack-id "T1218.001" ;
    ns1:invokes ns1:CreateFile,
        ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Control Panel Execution" ;
    ns1:attack-id "T1218.002" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-modify ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "CMSTP" ;
    ns1:attack-id "T1218.003" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-produce ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.004 a owl:Class ;
    rdfs:label "InstallUtil Execution" ;
    ns1:attack-id "T1218.004" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.005 a owl:Class ;
    rdfs:label "Mshta Execution" ;
    ns1:attack-id "T1218.005" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.007 a owl:Class ;
    rdfs:label "Msiexec Execution" ;
    ns1:attack-id "T1218.007" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.008 a owl:Class ;
    rdfs:label "Odbcconf Execution" ;
    ns1:attack-id "T1218.008" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.009 a owl:Class ;
    rdfs:label "Regsvcs/Regasm Execution" ;
    ns1:attack-id "T1218.009" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.010 a owl:Class ;
    rdfs:label "Regsvr32 Execution" ;
    ns1:attack-id "T1218.010" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rundll32 Execution" ;
    ns1:attack-id "T1218.011" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:loads ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.012 a owl:Class ;
    rdfs:label "Verclsid" ;
    ns1:attack-id "T1218.012" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.013 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mavinject" ;
    ns1:attack-id "T1218.013" ;
    ns1:invokes ns1:CreateThread ;
    ns1:modifies ns1:ProcessSegment ;
    rdfs:seeAlso <https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "MMC" ;
    ns1:attack-id "T1218.014" ;
    ns1:executes ns1:Command ;
    ns1:may-add ns1:Software ;
    ns1:may-modify ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1218 .

ns1:T1219 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Access Software" ;
    ns1:attack-id "T1219" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1220 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "XSL Script Processing" ;
    ns1:adds ns1:File ;
    ns1:attack-id "T1220" ;
    ns1:interprets ns1:ExecutableScript ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1221 a owl:Class ;
    rdfs:label "Template Injection" ;
    ns1:attack-id "T1221" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1222.001 a owl:Class ;
    rdfs:label "Windows File and Directory Permissions Modification" ;
    ns1:attack-id "T1222.001" ;
    rdfs:subClassOf ns1:T1222 .

ns1:T1222.002 a owl:Class ;
    rdfs:label "Linux and Mac File and Directory Permissions Modification" ;
    ns1:attack-id "T1222.002" ;
    rdfs:subClassOf ns1:T1222 .

ns1:T1223 a owl:Class ;
    rdfs:label "Compiled HTML File" ;
    ns1:attack-id "T1223" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1480.001 a owl:Class ;
    rdfs:label "Environmental Keying" ;
    ns1:attack-id "T1480.001" ;
    rdfs:subClassOf ns1:T1480 .

ns1:T1482 a owl:Class ;
    rdfs:label "Domain Trust Discovery" ;
    ns1:attack-id "T1482" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1483 a owl:Class ;
    rdfs:label "Domain Generation Algorithms" ;
    ns1:attack-id "T1483" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1484.001 a owl:Class ;
    rdfs:label "Group Policy Modification" ;
    ns1:attack-id "T1484.001" ;
    rdfs:subClassOf ns1:T1484 .

ns1:T1484.002 a owl:Class ;
    rdfs:label "Domain Trust Modification" ;
    ns1:attack-id "T1484.002" ;
    rdfs:subClassOf ns1:T1484 .

ns1:T1485 a owl:Class ;
    rdfs:label "Data Destruction" ;
    ns1:attack-id "T1485" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1486 a owl:Class ;
    rdfs:label "Data Encrypted for Impact" ;
    ns1:attack-id "T1486" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1487 a owl:Class ;
    rdfs:label "Disk Structure Wipe" ;
    ns1:attack-id "T1487" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1488 a owl:Class ;
    rdfs:label "Disk Content Wipe" ;
    ns1:attack-id "T1488" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1489 a owl:Class ;
    rdfs:label "Service Stop" ;
    ns1:attack-id "T1489" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1490 a owl:Class ;
    rdfs:label "Inhibit System Recovery" ;
    ns1:attack-id "T1490" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1491.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internal Defacement" ;
    ns1:attack-id "T1491.001" ;
    ns1:modifies ns1:Resource ;
    rdfs:subClassOf [ ],
        ns1:T1491 .

ns1:T1491.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Defacement" ;
    ns1:attack-id "T1491.002" ;
    ns1:modifies ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:T1491 .

ns1:T1492 a owl:Class ;
    rdfs:label "Stored Data Manipulation" ;
    ns1:attack-id "T1492" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1493 a owl:Class ;
    rdfs:label "Transmitted Data Manipulation" ;
    ns1:attack-id "T1493" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1494 a owl:Class ;
    rdfs:label "Runtime Data Manipulation" ;
    ns1:attack-id "T1494" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1495 a owl:Class ;
    rdfs:label "Firmware Corruption" ;
    ns1:attack-id "T1495" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1496 a owl:Class ;
    rdfs:label "Resource Hijacking" ;
    ns1:attack-id "T1496" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1497.001 a owl:Class ;
    rdfs:label "System Checks" ;
    ns1:attack-id "T1497.001" ;
    rdfs:subClassOf ns1:T1497 .

ns1:T1497.002 a owl:Class ;
    rdfs:label "User Activity Based Checks" ;
    ns1:attack-id "T1497.002" ;
    rdfs:subClassOf ns1:T1497 .

ns1:T1497.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Time Based Evasion" ;
    ns1:attack-id "T1497.003" ;
    ns1:may-invoke ns1:GetSystemTime ;
    ns1:may-run ns1:SystemTimeApplication ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1497 .

ns1:T1498.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Direct Network Flood" ;
    ns1:attack-id "T1498.001" ;
    ns1:creates ns1:InboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1498 .

ns1:T1498.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reflection Amplification" ;
    ns1:attack-id "T1498.002" ;
    ns1:produces ns1:InboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1498 .

ns1:T1499.001 a owl:Class ;
    rdfs:label "OS Exhaustion Flood" ;
    ns1:attack-id "T1499.001" ;
    rdfs:subClassOf ns1:T1499 .

ns1:T1499.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Exhaustion Flood" ;
    ns1:attack-id "T1499.002" ;
    ns1:produces ns1:InboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1498 .

ns1:T1499.003 a owl:Class ;
    rdfs:label "Application Exhaustion Flood" ;
    ns1:attack-id "T1499.003" ;
    rdfs:subClassOf ns1:T1499 .

ns1:T1499.004 a owl:Class ;
    rdfs:label "Application or System Exploitation" ;
    ns1:attack-id "T1499.004" ;
    rdfs:subClassOf ns1:T1499 .

ns1:T1500 a owl:Class ;
    rdfs:label "Compile After Delivery" ;
    ns1:attack-id "T1500" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1501 a owl:Class ;
    rdfs:label "Systemd Service" ;
    ns1:attack-id "T1501" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1502 a owl:Class ;
    rdfs:label "Parent PID Spoofing" ;
    ns1:attack-id "T1502" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1503 a owl:Class ;
    rdfs:label "Credentials from Web Browsers" ;
    ns1:attack-id "T1503" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1504 a owl:Class ;
    rdfs:label "PowerShell Profile" ;
    ns1:attack-id "T1504" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1505.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SQL Stored Procedures" ;
    ns1:attack-id "T1505.001" ;
    ns1:creates ns1:StoredProcedure ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1505 .

ns1:T1505.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Transport Agent" ;
    ns1:adds ns1:MessageTransferAgent ;
    ns1:attack-id "T1505.002" ;
    ns1:modifies ns1:MailServer ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1505 .

ns1:T1505.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Shell" ;
    ns1:adds ns1:WebScriptFile ;
    ns1:attack-id "T1505.003" ;
    ns1:modifies ns1:WebServer ;
    ns1:produces ns1:Process ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1505 .

ns1:T1505.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IIS Components" ;
    ns1:adds ns1:Software ;
    ns1:attack-id "T1505.004" ;
    rdfs:subClassOf [ ],
        ns1:T1505 .

ns1:T1505.005 a owl:Class ;
    rdfs:label "Terminal Services DLL" ;
    ns1:attack-id "T1505.005" ;
    rdfs:subClassOf ns1:T1505 .

ns1:T1506 a owl:Class ;
    rdfs:label "Web Session Cookie" ;
    ns1:attack-id "T1506" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:LateralMovementTechnique .

ns1:T1514 a owl:Class ;
    rdfs:label "Elevated Execution with Prompt" ;
    ns1:attack-id "T1514" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique .

ns1:T1518.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Software Discovery" ;
    ns1:attack-id "T1518.001" ;
    ns1:may-access ns1:FileSystemMetadata,
        ns1:KernelProcessTable,
        ns1:SystemConfigurationDatabaseRecord,
        ns1:SystemFirewallConfiguration ;
    ns1:may-invoke ns1:GetRunningProcesses ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1518 .

ns1:T1519 a owl:Class ;
    rdfs:label "Emond" ;
    ns1:attack-id "T1519" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1522 a owl:Class ;
    rdfs:label "Cloud Instance Metadata API" ;
    ns1:attack-id "T1522" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1525 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Implant Container Image" ;
    ns1:adds ns1:ContainerImage ;
    ns1:attack-id "T1525" ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1526 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Discovery" ;
    ns1:attack-id "T1526" ;
    ns1:reads ns1:CloudConfiguration ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1527 a owl:Class ;
    rdfs:label "Application Access Token" ;
    ns1:attack-id "T1527" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:LateralMovementTechnique .

ns1:T1528 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Steal Application Access Token" ;
    ns1:accesses ns1:AccessToken ;
    ns1:attack-id "T1528" ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1529 a owl:Class ;
    rdfs:label "System Shutdown/Reboot" ;
    ns1:attack-id "T1529" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1530 a owl:Class ;
    rdfs:label "Data from Cloud Storage Object" ;
    ns1:attack-id "T1530" ;
    rdfs:subClassOf ns1:CollectionTechnique .

ns1:T1531 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Account Access Removal" ;
    ns1:attack-id "T1531" ;
    ns1:modifies ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:ImpactTechnique .

ns1:T1534 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internal Spearphishing" ;
    ns1:attack-id "T1534" ;
    ns1:produces ns1:Email ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1535 a owl:Class ;
    rdfs:label "Unused/Unsupported Cloud Regions" ;
    ns1:attack-id "T1535" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1536 a owl:Class ;
    rdfs:label "Revert Cloud Instance" ;
    ns1:attack-id "T1536" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1537 a owl:Class ;
    rdfs:label "Transfer Data to Cloud Account" ;
    ns1:attack-id "T1537" ;
    rdfs:subClassOf ns1:ExfiltrationTechnique .

ns1:T1538 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Dashboard" ;
    ns1:accesses ns1:CloudConfiguration ;
    ns1:attack-id "T1538" ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1539 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Steal Web Session Cookie" ;
    ns1:accesses ns1:SessionCookie ;
    ns1:attack-id "T1539" ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1542.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firmware" ;
    ns1:attack-id "T1542.001" ;
    ns1:modifies ns1:SystemFirmware ;
    rdfs:subClassOf [ ],
        ns1:T1542 .

ns1:T1542.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Component Firmware" ;
    ns1:attack-id "T1542.002" ;
    ns1:modifies ns1:Firmware ;
    rdfs:subClassOf [ ],
        ns1:T1542 .

ns1:T1542.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bootkit" ;
    ns1:attack-id "T1542.003" ;
    ns1:may-modify ns1:BootLoader,
        ns1:BootSector,
        ns1:VolumeBootRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1542 .

ns1:T1542.004 a owl:Class ;
    rdfs:label "ROMMONkit" ;
    ns1:attack-id "T1542.004" ;
    rdfs:subClassOf ns1:T1542 .

ns1:T1542.005 a owl:Class ;
    rdfs:label "TFTP Boot" ;
    ns1:attack-id "T1542.005" ;
    rdfs:subClassOf ns1:T1542 .

ns1:T1543.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Launch Agent" ;
    ns1:attack-id "T1543.001" ;
    ns1:creates ns1:PropertyListFile ;
    rdfs:subClassOf [ ],
        ns1:T1543 .

ns1:T1543.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Systemd Service" ;
    ns1:attack-id "T1543.002" ;
    ns1:may-create ns1:OperatingSystemConfigurationFile ;
    ns1:may-modify ns1:OperatingSystemConfigurationFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1543 .

ns1:T1543.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Service" ;
    ns1:attack-id "T1543.003" ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1543 .

ns1:T1543.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Launch Daemon" ;
    ns1:attack-id "T1543.004" ;
    ns1:modifies ns1:PropertyListFile ;
    rdfs:subClassOf [ ],
        ns1:T1543 .

ns1:T1546.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Change Default File Association" ;
    ns1:attack-id "T1546.001" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Screensaver" ;
    ns1:attack-id "T1546.002" ;
    ns1:creates ns1:ExecutableFile ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Management Instrumentation Event Subscription" ;
    ns1:attack-id "T1546.003" ;
    ns1:modifies ns1:EventLog ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label ".bash_profile and .bashrc" ;
    ns1:attack-id "T1546.004" ;
    ns1:modifies ns1:UserInitConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trap" ;
    ns1:attack-id "T1546.005" ;
    ns1:executes ns1:Command ;
    ns1:may-create ns1:ExecutableScript ;
    ns1:may-modify ns1:ExecutableScript ;
    ns1:modifies ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LC_LOAD_DYLIB Addition" ;
    ns1:attack-id "T1546.006" ;
    ns1:modifies ns1:ExecutableBinary ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Netsh Helper DLL" ;
    ns1:attack-id "T1546.007" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    ns1:produces ns1:Process ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Accessibility Features" ;
    ns1:attack-id "T1546.008" ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:may-modify ns1:ExecutableBinary,
        ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "AppCert DLLs" ;
    ns1:attack-id "T1546.009" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:loads ns1:SharedLibraryFile ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "AppInit DLLs" ;
    ns1:attack-id "T1546.010" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:loads ns1:SharedLibraryFile ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Shimming" ;
    ns1:attack-id "T1546.011" ;
    ns1:creates ns1:Shim ;
    ns1:modifies ns1:ShimDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Image File Execution Options Injection" ;
    ns1:attack-id "T1546.012" ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.013 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "PowerShell Profile" ;
    ns1:attack-id "T1546.013" ;
    ns1:modifies ns1:PowerShellProfileScript ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Emond" ;
    ns1:attack-id "T1546.014" ;
    ns1:may-create ns1:PropertyListFile ;
    ns1:may-modify ns1:PropertyListFile ;
    ns1:modifies ns1:ConfigurationResource ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.015 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Component Object Model Hijacking" ;
    ns1:attack-id "T1546.015" ;
    ns1:loads ns1:ExecutableBinary ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    rdfs:seeAlso <http://dbpedia.org/resource/Component_Object_Model> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1547.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Registry Run Keys / Startup Folder" ;
    ns1:attack-id "T1547.001" ;
    ns1:may-modify ns1:SystemConfigurationInitDatabaseRecord,
        ns1:UserStartupScriptFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1547 .

ns1:T1547.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Package" ;
    ns1:attack-id "T1547.002" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Time Providers" ;
    ns1:attack-id "T1547.003" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Winlogon Helper DLL" ;
    ns1:attack-id "T1547.004" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Support Provider" ;
    ns1:attack-id "T1547.005" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel Modules and Extensions" ;
    ns1:attack-id "T1547.006" ;
    ns1:modifies ns1:KernelModule ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Re-opened Applications" ;
    ns1:attack-id "T1547.007" ;
    ns1:modifies ns1:ApplicationConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LSASS Driver" ;
    ns1:attack-id "T1547.008" ;
    ns1:may-create ns1:SharedLibraryFile ;
    ns1:modifies ns1:SystemServiceSoftware ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1547 .

ns1:T1547.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shortcut Modification" ;
    ns1:attack-id "T1547.009" ;
    ns1:may-modify ns1:SymbolicLink,
        ns1:UserStartupScriptFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1547 .

ns1:T1547.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Port Monitors" ;
    ns1:attack-id "T1547.010" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Plist Modification" ;
    ns1:attack-id "T1547.011" ;
    ns1:modifies ns1:ApplicationConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.012 a owl:Class ;
    rdfs:label "Print Processors" ;
    ns1:attack-id "T1547.012" ;
    rdfs:subClassOf ns1:T1547 .

ns1:T1547.013 a owl:Class ;
    rdfs:label "XDG Autostart Entries" ;
    ns1:attack-id "T1547.013" ;
    rdfs:subClassOf ns1:T1547 .

ns1:T1547.014 a owl:Class ;
    rdfs:label "Active Setup" ;
    ns1:attack-id "T1547.014" ;
    rdfs:subClassOf ns1:T1547 .

ns1:T1547.015 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Login Items" ;
    ns1:attack-id "T1547.015" ;
    ns1:modifies ns1:UserLogonInitResource ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1548.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Setuid and Setgid" ;
    ns1:attack-id "T1548.001" ;
    ns1:modifies ns1:AccessControlConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1548 .

ns1:T1548.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bypass User Access Control" ;
    ns1:attack-id "T1548.002" ;
    ns1:executes ns1:ExecutableFile ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-modify ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1548 .

ns1:T1548.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sudo and Sudo Caching" ;
    ns1:attack-id "T1548.003" ;
    ns1:may-modify ns1:EventLog ;
    ns1:modifies ns1:OperatingSystemConfigurationFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1548 .

ns1:T1548.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Elevated Execution with Prompt" ;
    ns1:attack-id "T1548.004" ;
    ns1:creates ns1:SystemConfigurationDatabase ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1548 .

ns1:T1550.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Access Token" ;
    ns1:attack-id "T1550.001" ;
    ns1:may-produce ns1:NetworkTraffic ;
    ns1:uses ns1:AccessToken ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1550 .

ns1:T1550.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pass The Hash" ;
    ns1:attack-id "T1550.002" ;
    ns1:creates ns1:Authentication ;
    rdfs:subClassOf [ ],
        ns1:T1550 .

ns1:T1550.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pass The Ticket" ;
    ns1:attack-id "T1550.003" ;
    ns1:creates ns1:Authentication ;
    rdfs:subClassOf [ ],
        ns1:T1550 .

ns1:T1550.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Session Cookie" ;
    ns1:adds ns1:SessionCookie ;
    ns1:attack-id "T1550.004" ;
    ns1:produces ns1:WebNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1550 .

ns1:T1552.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials in Files" ;
    ns1:accesses ns1:File ;
    ns1:attack-id "T1552.001" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials in Registry" ;
    ns1:accesses ns1:SystemConfigurationDatabase ;
    ns1:attack-id "T1552.002" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bash History" ;
    ns1:accesses ns1:CommandHistoryLogFile ;
    ns1:attack-id "T1552.003" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Private Keys" ;
    ns1:accesses ns1:PrivateKey ;
    ns1:attack-id "T1552.004" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Instance Metadata  API" ;
    ns1:accesses ns1:CloudInstanceMetadata ;
    ns1:attack-id "T1552.005" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Group Policy Preferences" ;
    ns1:accesses ns1:GroupPolicy ;
    ns1:attack-id "T1552.006" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.007 a owl:Class ;
    rdfs:label "Container API" ;
    ns1:attack-id "T1552.007" ;
    rdfs:subClassOf ns1:T1552 .

ns1:T1553.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Gatekeeper Bypass" ;
    ns1:attack-id "T1553.001" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Code Signing" ;
    ns1:attack-id "T1553.002" ;
    ns1:enables ns1:DefenseEvasion ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SIP and Trust Provider Hijacking" ;
    ns1:attack-id "T1553.003" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Install Root Certificate" ;
    ns1:attack-id "T1553.004" ;
    ns1:modifies ns1:CertificateTrustStore ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.005 a owl:Class ;
    rdfs:label "Mark-of-the-Web Bypass" ;
    ns1:attack-id "T1553.005" ;
    rdfs:subClassOf ns1:T1553 .

ns1:T1553.006 a owl:Class ;
    rdfs:label "Code Signing Policy Modification" ;
    ns1:attack-id "T1553.006" ;
    rdfs:subClassOf ns1:T1553 .

ns1:T1554 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Client Software Binary" ;
    ns1:attack-id "T1554" ;
    ns1:modifies ns1:ClientApplication ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1555.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keychain" ;
    ns1:accesses ns1:MacOSKeychain ;
    ns1:attack-id "T1555.001" ;
    rdfs:subClassOf [ ],
        ns1:T1555 .

ns1:T1555.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Securityd Memory" ;
    ns1:accesses ns1:In-memoryPasswordStore ;
    ns1:attack-id "T1555.002" ;
    rdfs:subClassOf [ ],
        ns1:T1555 .

ns1:T1555.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials from Web Browsers" ;
    ns1:accesses ns1:DatabaseFile ;
    ns1:attack-id "T1555.003" ;
    ns1:may-access ns1:In-memoryPasswordStore ;
    ns1:may-invoke ns1:ReadFile ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1555 .

ns1:T1555.004 a owl:Class ;
    rdfs:label "Windows Credential Manager" ;
    ns1:attack-id "T1555.004" ;
    rdfs:subClassOf ns1:T1555 .

ns1:T1555.005 a owl:Class ;
    rdfs:label "Password Managers" ;
    ns1:attack-id "T1555.005" ;
    rdfs:subClassOf ns1:T1555 .

ns1:T1556.001 a owl:Class ;
    rdfs:label "Domain Controller Authentication" ;
    ns1:attack-id "T1556.001" ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Filter DLL" ;
    ns1:attack-id "T1556.002" ;
    ns1:creates ns1:SharedLibraryFile ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1556 .

ns1:T1556.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pluggable Authentication Modules" ;
    ns1:attack-id "T1556.003" ;
    ns1:may-modify ns1:OperatingSystemConfigurationFile,
        ns1:OperatingSystemSharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1556 .

ns1:T1556.004 a owl:Class ;
    rdfs:label "Network Device Authentication" ;
    ns1:attack-id "T1556.004" ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.005 a owl:Class ;
    rdfs:label "Reversible Encryption" ;
    ns1:attack-id "T1556.005" ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1557.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LLMNR/NBT-NS Poisoning and SMB Relay" ;
    ns1:attack-id "T1557.001" ;
    ns1:produces ns1:IntranetMulticastNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1557 .

ns1:T1557.002 a owl:Class ;
    rdfs:label "ARP Cache Poisoning" ;
    ns1:attack-id "T1557.002" ;
    rdfs:subClassOf ns1:T1557 .

ns1:T1557.003 a owl:Class ;
    rdfs:label "DHCP Spoofing" ;
    ns1:attack-id "T1557.003" ;
    rdfs:subClassOf ns1:T1557 .

ns1:T1558.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Golden Ticket" ;
    ns1:attack-id "T1558.001" ;
    ns1:forges ns1:KerberosTicketGrantingTicket ;
    rdfs:subClassOf [ ],
        ns1:T1558 .

ns1:T1558.002 a owl:Class ;
    rdfs:label "Silver Ticket" ;
    ns1:attack-id "T1558.002" ;
    rdfs:subClassOf ns1:T1558 .

ns1:T1558.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kerberoasting" ;
    ns1:attack-id "T1558.003" ;
    ns1:definition "Service Provider Name (SPN) scanning is one way to gather hashes, which results in RPC calls conforming to the NSPI protocol." ;
    ns1:may-produce ns1:RPCNetworkTraffic ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nspi/6dd0a3ea-b4d4-4a73-a857-add03a89a543> ;
    rdfs:subClassOf [ ],
        ns1:T1558 .

ns1:T1558.004 a owl:Class ;
    rdfs:label "AS-REP Roasting" ;
    ns1:attack-id "T1558.004" ;
    rdfs:subClassOf ns1:T1558 .

ns1:T1559.001 a owl:Class ;
    rdfs:label "Component Object Model Execution" ;
    ns1:attack-id "T1559.001" ;
    rdfs:subClassOf ns1:T1559 .

ns1:T1559.002 a owl:Class ;
    rdfs:label "Dynamic Data Exchange Execution" ;
    ns1:attack-id "T1559.002" ;
    rdfs:subClassOf ns1:T1559 .

ns1:T1559.003 a owl:Class ;
    rdfs:label "XPC Services" ;
    ns1:attack-id "T1559.003" ;
    rdfs:subClassOf ns1:T1559 .

ns1:T1560.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive via Utility" ;
    ns1:attack-id "T1560.001" ;
    ns1:creates ns1:ArchiveFile ;
    rdfs:subClassOf [ ],
        ns1:T1560 .

ns1:T1560.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive via Library" ;
    ns1:attack-id "T1560.002" ;
    ns1:creates ns1:ArchiveFile ;
    rdfs:subClassOf [ ],
        ns1:T1560 .

ns1:T1560.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive via Custom Method" ;
    ns1:attack-id "T1560.003" ;
    ns1:creates ns1:CustomArchiveFile ;
    rdfs:subClassOf [ ],
        ns1:T1560 .

ns1:T1561.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Content Wipe" ;
    ns1:attack-id "T1561.001" ;
    ns1:may-modify ns1:BootSector,
        ns1:Partition,
        ns1:PartitionTable,
        ns1:Volume ;
    ns1:modifies ns1:BlockDevice ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1561 .

ns1:T1561.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Structure Wipe" ;
    ns1:attack-id "T1561.002" ;
    ns1:may-modify ns1:BootSector,
        ns1:PartitionTable ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1561 .

ns1:T1562.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disable or Modify Tools" ;
    ns1:attack-id "T1562.001" ;
    ns1:disables ns1:OperatingSystemProcess ;
    rdfs:subClassOf [ ],
        ns1:T1562 .

ns1:T1562.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disable Windows Event Logging" ;
    ns1:attack-id "T1562.002" ;
    ns1:may-modify ns1:ApplicationConfiguration,
        ns1:OperatingSystemConfigurationComponent ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1562 .

ns1:T1562.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Impair Command History Logging" ;
    ns1:attack-id "T1562.003" ;
    ns1:may-modify ns1:UserInitScript,
        ns1:WindowsRegistryKey ;
    ns1:modifies ns1:ProcessEnvironmentVariable ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1562 .

ns1:T1562.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disable or Modify System Firewall" ;
    ns1:attack-id "T1562.004" ;
    ns1:modifies ns1:SystemFirewallConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1562 .

ns1:T1562.006 a owl:Class ;
    rdfs:label "Indicator Blocking" ;
    ns1:attack-id "T1562.006" ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1562.007 a owl:Class ;
    rdfs:label "Disable or Modify Cloud Firewall" ;
    ns1:attack-id "T1562.007" ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1562.008 a owl:Class ;
    rdfs:label "Disable Cloud Logs" ;
    ns1:attack-id "T1562.008" ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1562.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Safe Mode Boot" ;
    ns1:attack-id "T1562.009" ;
    ns1:disables ns1:EndpointSensor,
        ns1:SystemConfigurationInitDatabaseRecord ;
    ns1:may-modify ns1:EndpointHealthBeacon ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1562 .

ns1:T1562.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Downgrade Attack" ;
    ns1:accesses ns1:LegacySystem ;
    ns1:attack-id "T1562.010" ;
    rdfs:subClassOf [ ],
        ns1:T1562 .

ns1:T1563.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SSH Hijacking" ;
    ns1:accesses ns1:SSHSession ;
    ns1:attack-id "T1563.001" ;
    rdfs:subClassOf [ ],
        ns1:T1563 .

ns1:T1563.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RDP Hijacking" ;
    ns1:accesses ns1:RDPSession ;
    ns1:attack-id "T1563.002" ;
    rdfs:subClassOf [ ],
        ns1:T1563 .

ns1:T1564.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden Files and Directories" ;
    ns1:attack-id "T1564.001" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden Users" ;
    ns1:attack-id "T1564.002" ;
    ns1:modifies ns1:UserInitConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden Window" ;
    ns1:attack-id "T1564.003" ;
    ns1:may-modify ns1:PropertyListFile,
        ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "NTFS File Attributes" ;
    ns1:attack-id "T1564.004" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden File System" ;
    ns1:attack-id "T1564.005" ;
    ns1:may-modify ns1:SystemConfigurationDatabase ;
    ns1:modifies ns1:Storage ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Run Virtual Instance" ;
    ns1:attack-id "T1564.006" ;
    ns1:creates ns1:File ;
    ns1:executes ns1:VirtualizationSoftware ;
    ns1:may-add ns1:VirtualizationSoftware ;
    ns1:may-create ns1:Directory ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "VBA Stomping" ;
    ns1:attack-id "T1564.007" ;
    ns1:modifies ns1:OfficeApplicationFile ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Hiding Rules" ;
    ns1:attack-id "T1564.008" ;
    ns1:may-create ns1:EmailRule ;
    ns1:may-modify ns1:EmailRule ;
    ns1:modifies ns1:ApplicationConfiguration ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Forking" ;
    ns1:attack-id "T1564.009" ;
    ns1:may-create ns1:ResourceFork ;
    ns1:may-modify ns1:ResourceFork ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.010 a owl:Class ;
    rdfs:label "Process Argument Spoofing" ;
    ns1:attack-id "T1564.010" ;
    rdfs:subClassOf ns1:T1564 .

ns1:T1565.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stored Data Manipulation" ;
    ns1:attack-id "T1565.001" ;
    ns1:modifies ns1:File ;
    rdfs:subClassOf [ ],
        ns1:T1565 .

ns1:T1565.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Transmitted Data Manipulation" ;
    ns1:attack-id "T1565.002" ;
    ns1:may-modify ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1565 .

ns1:T1565.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Runtime Data Manipulation" ;
    ns1:attack-id "T1565.003" ;
    ns1:may-modify ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1565 .

ns1:T1566.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Spearphishing Attachment" ;
    ns1:attack-id "T1566.001" ;
    ns1:produces ns1:Email,
        ns1:InboundInternetMailTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1566 .

ns1:T1566.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Spearphishing Link" ;
    ns1:attack-id "T1566.002" ;
    ns1:produces ns1:Email,
        ns1:InboundInternetMailTraffic,
        ns1:URL ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1566 .

ns1:T1566.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Spearphishing Via Service" ;
    ns1:attack-id "T1566.003" ;
    ns1:produces ns1:File,
        ns1:URL ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1566 .

ns1:T1567.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration to Code Repository" ;
    ns1:attack-id "T1567.001" ;
    ns1:may-produce ns1:OutboundInternetEncryptedRemoteTerminalTraffic,
        ns1:OutboundInternetEncryptedWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1567 .

ns1:T1567.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration to Cloud Storage" ;
    ns1:attack-id "T1567.002" ;
    ns1:produces ns1:OutboundInternetEncryptedWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1567 .

ns1:T1568.001 a owl:Class ;
    rdfs:label "Fast Flux DNS" ;
    ns1:attack-id "T1568.001" ;
    rdfs:subClassOf ns1:T1568 .

ns1:T1568.002 a owl:Class ;
    rdfs:label "Domain Generation Algorithms" ;
    ns1:attack-id "T1568.002" ;
    rdfs:subClassOf ns1:T1568 .

ns1:T1568.003 a owl:Class ;
    rdfs:label "DNS Calculation" ;
    ns1:attack-id "T1568.003" ;
    rdfs:subClassOf ns1:T1568 .

ns1:T1569.001 a owl:Class ;
    rdfs:label "Launchctl" ;
    ns1:attack-id "T1569.001" ;
    rdfs:subClassOf ns1:T1569 .

ns1:T1569.002 a owl:Class ;
    rdfs:label "Service Execution" ;
    ns1:attack-id "T1569.002" ;
    rdfs:subClassOf ns1:T1569 .

ns1:T1570 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Lateral Tool Transfer" ;
    ns1:attack-id "T1570" ;
    ns1:produces ns1:IntranetFileTransferTraffic ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1571 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Non-Standard Port" ;
    ns1:attack-id "T1571" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1572 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Protocol Tunneling" ;
    ns1:attack-id "T1572" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1573.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Symmetric Cryptography" ;
    ns1:attack-id "T1573.001" ;
    ns1:creates ns1:OutboundInternetEncryptedTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1573 .

ns1:T1573.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asymmetric Cryptography" ;
    ns1:attack-id "T1573.002" ;
    ns1:creates ns1:OutboundInternetEncryptedTraffic ;
    ns1:may-transfer ns1:CertificateFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1573 .

ns1:T1574.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DLL Search Order Hijacking" ;
    ns1:attack-id "T1574.001" ;
    ns1:may-create ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DLL Side-Loading" ;
    ns1:attack-id "T1574.002" ;
    ns1:may-create ns1:SharedLibraryFile ;
    ns1:may-modify ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1574 .

ns1:T1574.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dylib Hijacking" ;
    ns1:attack-id "T1574.004" ;
    ns1:may-create ns1:SharedLibraryFile ;
    ns1:may-modify ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1574 .

ns1:T1574.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Installer File Permissions Weakness" ;
    ns1:attack-id "T1574.005" ;
    ns1:modifies ns1:ServiceApplication ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LD_PRELOAD" ;
    ns1:attack-id "T1574.006" ;
    ns1:modifies ns1:OperatingSystemConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Path Interception by PATH Environment Variable" ;
    ns1:attack-id "T1574.007" ;
    ns1:creates ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Path Interception by Search Order Hijacking" ;
    ns1:attack-id "T1574.008" ;
    ns1:creates ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Path Interception by Unquoted Path" ;
    ns1:attack-id "T1574.009" ;
    ns1:creates ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Services File Permissions Weakness" ;
    ns1:attack-id "T1574.010" ;
    ns1:modifies ns1:ServiceApplication ;
    rdfs:subClassOf [ ],
        ns1:T1574 ;
    ns2:altLabel "Service Registry Permissions Weakness" .

ns1:T1574.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Services Registry Permissions Weakness" ;
    ns1:attack-id "T1574.011" ;
    ns1:modifies ns1:SystemConfigurationInitDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "COR_PROFILER" ;
    ns1:adds ns1:SharedLibraryFile ;
    ns1:attack-id "T1574.012" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1574 .

ns1:T1574.013 a owl:Class ;
    rdfs:label "KernelCallbackTable" ;
    ns1:attack-id "T1574.013" ;
    rdfs:subClassOf ns1:T1574 .

ns1:T1578.001 a owl:Class ;
    rdfs:label "Create Snapshot" ;
    ns1:attack-id "T1578.001" ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1578.002 a owl:Class ;
    rdfs:label "Create Cloud Instance" ;
    ns1:attack-id "T1578.002" ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1578.003 a owl:Class ;
    rdfs:label "Delete Cloud Instance" ;
    ns1:attack-id "T1578.003" ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1578.004 a owl:Class ;
    rdfs:label "Revert Cloud Instance" ;
    ns1:attack-id "T1578.004" ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1580 a owl:Class ;
    rdfs:label "Cloud Infrastructure Discovery" ;
    ns1:attack-id "T1580" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1583.001 a owl:Class ;
    rdfs:label "Domains" ;
    ns1:attack-id "T1583.001" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.002 a owl:Class ;
    rdfs:label "DNS Server" ;
    ns1:attack-id "T1583.002" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.003 a owl:Class ;
    rdfs:label "Virtual Private Server" ;
    ns1:attack-id "T1583.003" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.004 a owl:Class ;
    rdfs:label "Server" ;
    ns1:attack-id "T1583.004" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.005 a owl:Class ;
    rdfs:label "Botnet" ;
    ns1:attack-id "T1583.005" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.006 a owl:Class ;
    rdfs:label "Web Services" ;
    ns1:attack-id "T1583.006" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1584.001 a owl:Class ;
    rdfs:label "Domains" ;
    ns1:attack-id "T1584.001" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.002 a owl:Class ;
    rdfs:label "DNS Server" ;
    ns1:attack-id "T1584.002" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.003 a owl:Class ;
    rdfs:label "Virtual Private Server" ;
    ns1:attack-id "T1584.003" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.004 a owl:Class ;
    rdfs:label "Server" ;
    ns1:attack-id "T1584.004" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.005 a owl:Class ;
    rdfs:label "Botnet" ;
    ns1:attack-id "T1584.005" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.006 a owl:Class ;
    rdfs:label "Web Services" ;
    ns1:attack-id "T1584.006" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1585.001 a owl:Class ;
    rdfs:label "Social Media Accounts" ;
    ns1:attack-id "T1585.001" ;
    rdfs:subClassOf ns1:T1585 .

ns1:T1585.002 a owl:Class ;
    rdfs:label "Email Accounts" ;
    ns1:attack-id "T1585.002" ;
    rdfs:subClassOf ns1:T1585 .

ns1:T1586.001 a owl:Class ;
    rdfs:label "Social Media Accounts" ;
    ns1:attack-id "T1586.001" ;
    rdfs:subClassOf ns1:T1586 .

ns1:T1586.002 a owl:Class ;
    rdfs:label "Email Accounts" ;
    ns1:attack-id "T1586.002" ;
    rdfs:subClassOf ns1:T1586 .

ns1:T1587.001 a owl:Class ;
    rdfs:label "Malware" ;
    ns1:attack-id "T1587.001" ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1587.002 a owl:Class ;
    rdfs:label "Code Signing Certificates" ;
    ns1:attack-id "T1587.002" ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1587.003 a owl:Class ;
    rdfs:label "Digital Certificates" ;
    ns1:attack-id "T1587.003" ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1587.004 a owl:Class ;
    rdfs:label "Exploits" ;
    ns1:attack-id "T1587.004" ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1588.001 a owl:Class ;
    rdfs:label "Malware" ;
    ns1:attack-id "T1588.001" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.002 a owl:Class ;
    rdfs:label "Tool" ;
    ns1:attack-id "T1588.002" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.003 a owl:Class ;
    rdfs:label "Code Signing Certificates" ;
    ns1:attack-id "T1588.003" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.004 a owl:Class ;
    rdfs:label "Digital Certificates" ;
    ns1:attack-id "T1588.004" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.005 a owl:Class ;
    rdfs:label "Exploits" ;
    ns1:attack-id "T1588.005" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.006 a owl:Class ;
    rdfs:label "Vulnerabilities" ;
    ns1:attack-id "T1588.006" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1589.001 a owl:Class ;
    rdfs:label "Credentials" ;
    ns1:attack-id "T1589.001" ;
    rdfs:subClassOf ns1:T1589 .

ns1:T1589.002 a owl:Class ;
    rdfs:label "Email Addresses" ;
    ns1:attack-id "T1589.002" ;
    rdfs:subClassOf ns1:T1589 .

ns1:T1589.003 a owl:Class ;
    rdfs:label "Employee Names" ;
    ns1:attack-id "T1589.003" ;
    rdfs:subClassOf ns1:T1589 .

ns1:T1590.001 a owl:Class ;
    rdfs:label "Domain Properties" ;
    ns1:attack-id "T1590.001" ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.002 a owl:Class ;
    rdfs:label "DNS" ;
    ns1:attack-id "T1590.002" ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.003 a owl:Class ;
    rdfs:label "Network Trust Dependencies" ;
    ns1:attack-id "T1590.003" ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.004 a owl:Class ;
    rdfs:label "Network Topology" ;
    ns1:attack-id "T1590.004" ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.005 a owl:Class ;
    rdfs:label "IP Addresses" ;
    ns1:attack-id "T1590.005" ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.006 a owl:Class ;
    rdfs:label "Network Security Appliances" ;
    ns1:attack-id "T1590.006" ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1591.001 a owl:Class ;
    rdfs:label "Determine Physical Locations" ;
    ns1:attack-id "T1591.001" ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1591.002 a owl:Class ;
    rdfs:label "Business Relationships" ;
    ns1:attack-id "T1591.002" ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1591.003 a owl:Class ;
    rdfs:label "Identify Business Tempo" ;
    ns1:attack-id "T1591.003" ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1591.004 a owl:Class ;
    rdfs:label "Identify Roles" ;
    ns1:attack-id "T1591.004" ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1592.001 a owl:Class ;
    rdfs:label "Hardware" ;
    ns1:attack-id "T1592.001" ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1592.002 a owl:Class ;
    rdfs:label "Software" ;
    ns1:attack-id "T1592.002" ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1592.003 a owl:Class ;
    rdfs:label "Firmware" ;
    ns1:attack-id "T1592.003" ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1592.004 a owl:Class ;
    rdfs:label "Client Configurations" ;
    ns1:attack-id "T1592.004" ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1593.001 a owl:Class ;
    rdfs:label "Social Media" ;
    ns1:attack-id "T1593.001" ;
    rdfs:subClassOf ns1:T1593 .

ns1:T1593.002 a owl:Class ;
    rdfs:label "Search Engines" ;
    ns1:attack-id "T1593.002" ;
    rdfs:subClassOf ns1:T1593 .

ns1:T1594 a owl:Class ;
    rdfs:label "Search Victim-Owned Websites" ;
    ns1:attack-id "T1594" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1595.001 a owl:Class ;
    rdfs:label "Scanning IP Blocks" ;
    ns1:attack-id "T1595.001" ;
    rdfs:subClassOf ns1:T1595 .

ns1:T1595.002 a owl:Class ;
    rdfs:label "Vulnerability Scanning" ;
    ns1:attack-id "T1595.002" ;
    rdfs:subClassOf ns1:T1595 .

ns1:T1595.003 a owl:Class ;
    rdfs:label "Wordlist Scanning" ;
    ns1:attack-id "T1595.003" ;
    rdfs:subClassOf ns1:T1595 .

ns1:T1596.001 a owl:Class ;
    rdfs:label "DNS/Passive DNS" ;
    ns1:attack-id "T1596.001" ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.002 a owl:Class ;
    rdfs:label "WHOIS" ;
    ns1:attack-id "T1596.002" ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.003 a owl:Class ;
    rdfs:label "Digital Certificates" ;
    ns1:attack-id "T1596.003" ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.004 a owl:Class ;
    rdfs:label "CDNs" ;
    ns1:attack-id "T1596.004" ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.005 a owl:Class ;
    rdfs:label "Scan Databases" ;
    ns1:attack-id "T1596.005" ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1597.001 a owl:Class ;
    rdfs:label "Threat Intel Vendors" ;
    ns1:attack-id "T1597.001" ;
    rdfs:subClassOf ns1:T1597 .

ns1:T1597.002 a owl:Class ;
    rdfs:label "Purchase Technical Data" ;
    ns1:attack-id "T1597.002" ;
    rdfs:subClassOf ns1:T1597 .

ns1:T1598.001 a owl:Class ;
    rdfs:label "Spearphishing Service" ;
    ns1:attack-id "T1598.001" ;
    rdfs:subClassOf ns1:T1598 .

ns1:T1598.002 a owl:Class ;
    rdfs:label "Spearphishing Attachment" ;
    ns1:attack-id "T1598.002" ;
    rdfs:subClassOf ns1:T1598 .

ns1:T1598.003 a owl:Class ;
    rdfs:label "Spearphishing Link" ;
    ns1:attack-id "T1598.003" ;
    rdfs:subClassOf ns1:T1598 .

ns1:T1599.001 a owl:Class ;
    rdfs:label "Network Address Translation Traversal" ;
    ns1:attack-id "T1599.001" ;
    rdfs:subClassOf ns1:T1599 .

ns1:T1600.001 a owl:Class ;
    rdfs:label "Reduce Key Space" ;
    ns1:attack-id "T1600.001" ;
    rdfs:subClassOf ns1:T1600 .

ns1:T1600.002 a owl:Class ;
    rdfs:label "Disable Crypto Hardware" ;
    ns1:attack-id "T1600.002" ;
    rdfs:subClassOf ns1:T1600 .

ns1:T1601.001 a owl:Class ;
    rdfs:label "Patch System Image" ;
    ns1:attack-id "T1601.001" ;
    rdfs:subClassOf ns1:T1601 .

ns1:T1601.002 a owl:Class ;
    rdfs:label "Downgrade System Image" ;
    ns1:attack-id "T1601.002" ;
    rdfs:subClassOf ns1:T1601 .

ns1:T1602.001 a owl:Class ;
    rdfs:label "SNMP (MIB Dump)" ;
    ns1:attack-id "T1602.001" ;
    rdfs:subClassOf ns1:T1602 .

ns1:T1602.002 a owl:Class ;
    rdfs:label "Network Device Configuration Dump" ;
    ns1:attack-id "T1602.002" ;
    rdfs:subClassOf ns1:T1602 .

ns1:T1606.001 a owl:Class ;
    rdfs:label "Web Cookies" ;
    ns1:attack-id "T1606.001" ;
    rdfs:subClassOf ns1:T1606 .

ns1:T1606.002 a owl:Class ;
    rdfs:label "SAML Tokens" ;
    ns1:attack-id "T1606.002" ;
    rdfs:subClassOf ns1:T1606 .

ns1:T1608.001 a owl:Class ;
    rdfs:label "Upload Malware" ;
    ns1:attack-id "T1608.001" ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.002 a owl:Class ;
    rdfs:label "Upload Tool" ;
    ns1:attack-id "T1608.002" ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.003 a owl:Class ;
    rdfs:label "Install Digital Certificate" ;
    ns1:attack-id "T1608.003" ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.004 a owl:Class ;
    rdfs:label "Drive-by Target" ;
    ns1:attack-id "T1608.004" ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.005 a owl:Class ;
    rdfs:label "Link Target" ;
    ns1:attack-id "T1608.005" ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1609 a owl:Class ;
    rdfs:label "Container Administration Command" ;
    ns1:attack-id "T1609" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1610 a owl:Class ;
    rdfs:label "Deploy Container" ;
    ns1:attack-id "T1610" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1611 a owl:Class ;
    rdfs:label "Escape to Host" ;
    ns1:attack-id "T1611" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique .

ns1:T1612 a owl:Class ;
    rdfs:label "Build Image on Host" ;
    ns1:attack-id "T1612" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1613 a owl:Class ;
    rdfs:label "Container and Resource Discovery" ;
    ns1:attack-id "T1613" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1614.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Language Discovery" ;
    ns1:attack-id "T1614.001" ;
    ns1:queries ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1614 .

ns1:T1615 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Group Policy Discovery" ;
    ns1:attack-id "T1615" ;
    ns1:reads ns1:GroupPolicy ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1619 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Storage Object Discovery" ;
    ns1:accesses ns1:CloudStorage ;
    ns1:attack-id "T1619" ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1620 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reflective Code Loading" ;
    ns1:attack-id "T1620" ;
    ns1:modifies ns1:ProcessSegment ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1621 a owl:Class ;
    rdfs:label "Multi-Factor Authentication Request Generation" ;
    ns1:attack-id "T1621" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1622 a owl:Class ;
    rdfs:label "Debugger Evasion" ;
    ns1:attack-id "T1622" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:DiscoveryTechnique .

ns1:T1647 a owl:Class ;
    rdfs:label "Plist File Modification" ;
    ns1:attack-id "T1647" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:TPMBootIntegrity a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "TPM Boot Integrity" ;
    ns1:d3fend-id "D3-TBI" ;
    ns1:definition "Assuring the integrity of a platform by demonstrating that the boot process starts from a trusted combination of hardware and software and continues until the operating system has fully booted and applications are running.  Sometimes called Static Root of Trust Measurement (STRM)." ;
    ns1:kb-article """## How it works
During the boot process, the BIOS boot block (which with this defense enabled, is the Core Root of Trust for Measurement) measures boot components (firmware, ROM). The TPM hashes those measurements and stores the hashes in Platform Configuration Registers (PCRs).  Upon a subsequent boot, these hashes are provided to a verifier which compares the stored measurements to the new boot measurements. Integrity of the boot components is assured if they match.

Attestation of the secure boot occurs when a verifying entity requests a Quote which is a concatenation of the requested PCR values, hashed and signed by the TPM's unique RSA key.  The TPM signature is trusted because the private key is stored securely in hardware and never leaves the TPM.

## Considerations

* The TPM does not perform the follow-on actions of acting on the PCR value information, it just provides the PCR stored information.
* The current version of TPM is 2.0.; most existing implementations use TPM 1.2.

## Citations
[1] [TPM 2.0 Library](https://trustedcomputinggroup.org/resource/tpm-library-specification/)
[2] [TCG Trusted Attestation Protocol (TAP) Use Cases for TPM Families 1.2 and 2.0 and DICE](https://trustedcomputinggroup.org/wp-content/uploads/TCG_TNC_TAP_Use_Cases_v1r0p35_published.pdf)""" ;
    ns1:kb-reference ns1:Reference-TCGTrustedAttestationProtocolUseCasesForTPMFamilies1.2And2.0AndDICE,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-TPM2.0LibrarySpecification_TrustedComputingGroup,Incorporated>,
        ns1:Reference-TrustedAttestationProtocolUseCases ;
    ns1:synonym "STRM",
        "Static Root of Trust Measurement" ;
    rdfs:subClassOf ns1:PlatformHardening .

ns1:TabletComputer a owl:Class ;
    rdfs:label "Tablet Computer" ;
    ns1:definition "A tablet computer, commonly shortened to tablet, is a mobile device, typically with a mobile operating system and touchscreen display processing circuitry, and a rechargeable battery in a single, thin and flat package. Tablets, being computers, do what other personal computers do, but lack some input/output (I/O) abilities that others have. Modern tablets largely resemble modern smartphones, the only differences being that tablets are relatively larger than smartphones, with screens 7 inches (18 cm) or larger, measured diagonally, and may not support access to a cellular network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Tablet_computer> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    ns2:altLabel "Tablet" .

ns1:TaskSchedulerProcess a owl:Class ;
    rdfs:label "Task Scheduler Process" ;
    ns1:definition "A task scheduler process is an operating system process that executes scheduled tasks (time-scheduling in the sense of wall clock time; not operating system scheduling of processes for multitasking)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Cron>,
        <http://dbpedia.org/resource/Windows_Task_Scheduler> ;
    rdfs:subClassOf ns1:OperatingSystemProcess .

ns1:TaskSchedulerSoftware a owl:Class ;
    rdfs:label "Task Scheduler Software" ;
    ns1:definition "A task scheduler software is operating system software that when run executes scheduled tasks (time-scheduling in the sense of wall clock time; not operating system scheduling of processes for multitasking). Processes running such software are task scheduler processes." ;
    rdfs:seeAlso "Task Scheduler Process" ;
    rdfs:subClassOf ns1:SystemServiceSoftware .

ns1:TerminateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Terminate Process" ;
    ns1:definition "On many computer operating systems, a computer process terminates its execution by making an exit system call. More generally, an exit in a multithreading environment means that a thread of execution has stopped running. For resource management, the operating system reclaims resources (memory, files, etc.) that were used by the process. The process is said to be a dead process after it terminates." ;
    ns1:terminates ns1:Process ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Exit_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:TertiaryStorage a owl:Class ;
    rdfs:label "Tertiary Storage" ;
    ns1:definition "Tertiary storage or tertiary memory is memory primarily used for archiving rarely accessed information. It is primarily useful for extraordinarily large data stores. Typical examples include tape libraries and optical jukeboxes." ;
    rdfs:isDefinedBy "https://en.wikipedia.org/wiki/Computer_data_storage#Tertiary_storage" ;
    rdfs:subClassOf ns1:HardwareDevice,
        ns1:MemoryBlock,
        ns1:SecondaryStorage .

ns1:ThreadStartFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread Start Function" ;
    ns1:definition "A function which invokes a create thread system call." ;
    ns1:executes ns1:Thread ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:TraceProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trace Process" ;
    ns1:definition "A trace system call provides a means by which one process (the \"tracer\") may observe and control the execution of another process (the \"tracee\"), and examine and change the tracee's memory and registers. It is primarily used to implement breakpoint debugging and system call tracing." ;
    ns1:monitors ns1:Process ;
    rdfs:seeAlso <https://dbpedia.org/resource/Ptrace>,
        <https://linux.die.net/man/2/ptrace> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:TransferAgentAuthentication a ns1:MessageHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Transfer Agent Authentication" ;
    ns1:d3fend-id "D3-TAAN" ;
    ns1:definition "Validating that server components of a messaging infrastructure are authorized to send a particular message." ;
    ns1:kb-article """## How it works
Transfer Agent Authentication can be accomplished in different ways for depending on the protocol. In Email,  Sender Policy Framework (SPF), Domain Key Identified Email (DKIM) or Domain-based Message Authentication Reporting and Conformance (DMARC) to validate sender domain ownership.

### SPF
SPF protocol allows for mail domain owners to specify the mail servers they use when sending email. SPF requires the use of SPF records published in the Domain Name System (DNS). The records record the authorized IPs for email senders. SPF uses the return-path address for domain IP identification. Email that is forwarded may cause the return-path validation problems.
### DKIM
DKIM also uses a record entry in DNS for authentication but does not rely on the simple return-path for validation. A signature header is added to email and encryption is used for security. This adds an additional layer of complexity and requires that DKIM servers be configured identified cryptographic signatures. The additional complexity results in a validation process that can survive complex routing of emails.

### DMARC
DMARC is an email policy and authentication protocol that seeks to ensure that the "From" field of emails is not spoofed. DMARC makes use of both SPF records and DKIM published key validation. DMARC also has a decision policy framework, contained in a DMARC record, for handling of rejected email. The DMARC framework also updates DMARC domains with authentication statues for allowed senders of that domain.

## Considerations
- Additional work is required to ensure that all SPF, DKIM and DMARC records are current and up to date.
- Maintenance of DKIM signing keys is needed.
- Using SPF without DKIM and DMARC verifies the Return-Path domain however does not prevent spoofing of the displayed From: address.
- Parts of an email that are not signed or verified by email authentication methods, such as the message body or the header To: and Subject: fields, can be altered or modified.
- Email message authentication does not replace the need to do email content analysis since executables, attachments, or links or other parts of the email beyond the sender domain are not verified.""" ;
    ns1:kb-reference ns1:Reference-DomainKeysIdentifiedMail-Signatures-IETF,
        ns1:Reference-RFC7208-SenderPolicyFramework-SPF-ForAuthorizingUseOfDomainsInEmail-IETF,
        ns1:Reference-RFC7489-Domain-basedMessageAuthentication-Reporting-AndConformance-DMARC ;
    rdfs:subClassOf ns1:MessageHardening .

ns1:TransportLink a owl:Class ;
    rdfs:label "Transport Link" ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:URLAnalysis a ns1:IdentifierAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "URL Analysis" ;
    ns1:analyzes ns1:URL ;
    ns1:d3fend-id "D3-UA" ;
    ns1:definition "Determining if a URL is benign or malicious by analyzing the URL or its components." ;
    ns1:kb-article """## How it works

URLs may contain components, for example:

 * scheme
 * userinfo
 * host name
 * port
 * path
 * query
 * fragment

These components are used as features in analysis algorithms.

Contextual information about a URL such as where it is embedded (ex. emails, files, network protocols), header, path, location, and origin information, as well as information about the content returned from the URL request, may be incorporated into an analytic for URL analysis. For example, if a URL indicates a .pdf file but an executable is actually returned, the combination of these two pieces of information indicates suspicious activity.

Additional techniques include:

* Extracting features of a URL such as domain name length, ratio of consecutive consonants, percentage of digits in a domain, and number of vowels. Values for each feature are combined to develop a score for the URL.
* Determining the probability of a character occurring in the URL given the preceding two characters. For example, for google.com, the probability of a 'g' occurring at the beginning of a word, the probability of an 'o' occurring after a "g, the probability of an o" occurring after a 'g' and "o, and so forth. A dictionary or a list of known good domains is used to determine probability. Probabilities are multiplied to develop a score for the URL.

URL analysis may trigger follow-on analytics such as **File Analysis**

## Considerations

* Volume of URLs being analyzed, combined with the speed at which they are analyzed
* Fidelity of analysis technique at detecting brand new URLs versus analyzing URLs of established domains""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForDetectingMaliciousWebsites_EndgameInc,
        ns1:Reference-MethodAndSystemForDetectingRestrictedContentAssociatedWithRetrievedContent_SophosLtd ;
    rdfs:subClassOf [ ],
        ns1:IdentifierAnalysis .

ns1:URLReputationAnalysis a ns1:IdentifierReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "URL Reputation Analysis" ;
    ns1:analyzes ns1:URL ;
    ns1:d3fend-id "D3-URA" ;
    ns1:definition "Analyzing the reputation of a URL." ;
    ns1:kb-reference ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:UnitTestExecutionTool a owl:Class ;
    rdfs:label "Unit Test Execution Tool" ;
    ns1:definition "An unit test execution tool automatically performs unit testing.  Unit testing is a software testing method by which individual units of source code are tested to determine whether they are fit for use.  Unit test execution tools work with sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures. This contrasts with integration testing, which tests inter-unit dependencies and the modules as a group." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Unit_testing> ;
    rdfs:subClassOf ns1:TestExecutionTool .

ns1:UnixHardLink a owl:Class ;
    rdfs:label "Unix Hard Link" ;
    ns1:definition "A Unix hard link is a hard link on a Unix file system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:HardLink,
        ns1:UnixLink .

ns1:UserAccountPermissions a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Account Permissions" ;
    ns1:d3fend-id "D3-UAP" ;
    ns1:definition "Restricting a user account's access to resources." ;
    ns1:kb-reference ns1:Reference-ConfigureUserAccessControlAndPermissions ;
    ns1:restricts ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:UserBehavior a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Behavior" ;
    ns1:contains ns1:UserAction ;
    ns1:definition "A user behavior is a pattern of user actions, or set of such patterns. Modeling and analyzing these patterns and monitoring a users actions for meaningful anomalies is known as user behavior analytics (UBA)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/User_behavior_analytics> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:UserDataTransferAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Data Transfer Analysis" ;
    ns1:analyzes ns1:ResourceAccess ;
    ns1:d3fend-id "D3-UDTA" ;
    ns1:definition "Analyzing the amount of data transferred by a user." ;
    ns1:kb-article """## How it works
Unusual data transfer activity may indicate unauthorized activity. Data transfers can be analyzed by collecting network traffic or application logs.

## Considerations
* There is a potential for false positives from anomalies that are not associated with unauthorized activity.
* Attackers that move low and slow may not differentiate their data transfer behavior enough for an alert to trigger.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodThereofForIdentifyingAndRespondingToSecurityIncidentsBasedOnPreemptiveForensics_PaloAltoNetworksInc,
        ns1:Reference-SystemForImplementingThreatDetectionUsingThreatAndRiskAssessmentOfAsset-actorInteractions_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:UserGeolocationLogonPatternAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Geolocation Logon Pattern Analysis" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-UGLPA" ;
    ns1:definition "Monitoring geolocation data of user logon attempts and comparing it to a baseline user behavior profile to identify anomalies in logon location." ;
    ns1:kb-article """## How it works
Geolocation data for each user logon attempt is collected and used to create a baseline user behavior profile. Current geolocation logon data is then compared against the user behavior profile. Logon activity that deviates from normal patterns and can help in identifying situations that may be indicative of a remote attacker using stolen credentials. For example:

* logons from locations that are different from where a user usually logs in
* logons from a location in which an enterprise has no users located
* logon that is not physically possible given the elapsed time since a logon from another location.

## Considerations
* Potential for false positives from logon anomalies that are not associated with malicious activity.
* Attackers may not differentiate their logon behavior enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc> ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:UserInputFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Input Function" ;
    ns1:definition "Generic function that receives direct user input from an untrusted source." ;
    rdfs:subClassOf ns1:InputFunction .

ns1:UserSessionInitConfigAnalysis a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Session Init Config Analysis" ;
    ns1:analyzes ns1:UserInitConfigurationFile ;
    ns1:d3fend-id "D3-USICA" ;
    ns1:definition "Analyzing modifications to user session config files such as .bashrc or .bash_profile." ;
    ns1:kb-reference ns1:Reference-CAR-2020-09-002%3AComponentObjectModelHijacking_MITRE,
        ns1:Reference-CAR-2020-11-011%3ARegistryEditFromScreensaver,
        ns1:Reference-IdentificationAndExtractionOfKeyForensicsIndicatorsOfCompromiseUsingSubject-specificFilesystemViews,
        ns1:Reference-RegistryKeySecurityAndAccessRights ;
    ns1:synonym "User Startup Config Analysis" ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:UserStartupDirectory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Startup Directory" ;
    ns1:contains ns1:UserStartupScriptFile ;
    ns1:definition "A user startup directory holds information necessary to start the users session with the system." ;
    rdfs:subClassOf [ ],
        ns1:UserLogonInitResource .

ns1:VPNServer a owl:Class ;
    rdfs:label "VPN Server" ;
    ns1:definition """A VPN server is a type of server that enables hosting and delivery of VPN services.

It is a combination of VPN hardware and software technologies that provides VPN clients with connectivity to a secure and/or private network, or rather, the VPN.""" ;
    rdfs:isDefinedBy <https://www.techopedia.com/definition/30750/vpn-server> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Virtual_private_network> ;
    rdfs:subClassOf ns1:Server .

ns1:VersionControlTool a owl:Class ;
    rdfs:label "Version Control Tool" ;
    ns1:definition "Version control tools are tools that used to conduct version control. A  component of software configuration management, version control, also known as revision control, source control, or source code management systems are systems responsible for the management of changes to documents, computer programs, large web sites, and other collections of information. Changes are usually identified by a number or letter code, termed the \"revision number\", \"revision level\", or simply \"revision\". For example, an initial set of files is \"revision 1\". When the first change is made, the resulting set is \"revision 2\", and so on. Each revision is associated with a timestamp and the person making the change. Revisions can be compared, restored, and with some types of files, merged." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Version_control> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Software_configuration_management> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    ns2:altLabel "Revision Control",
        "Source Control" .

ns1:VirtualMemorySpace a owl:Class ;
    rdfs:label "Virtual Memory Space" ;
    ns1:definition "Virtual memory is a memory management technique where secondary memory can be used as if it were a part of the main memory. Virtual memory uses hardware and software to enable a computer to compensate for physical memory shortages" ;
    rdfs:isDefinedBy "https://whatis.techtarget.com/definition/memory" ;
    rdfs:seeAlso "https://dbpedia.org/page/Virtual_memory" ;
    rdfs:subClassOf ns1:MemoryAddressSpace .

ns1:WebApplicationFirewall a owl:Class ;
    rdfs:label "Web Application Firewall" ;
    ns1:definition "A web application firewall (or WAF) filters, monitors, and blocks HTTP traffic to and from a web application. A WAF is differentiated from a regular firewall in that a WAF is able to filter the content of specific web applications while regular firewalls serve as a safety gate between servers. By inspecting HTTP traffic, it can prevent attacks stemming from web application security flaws, such as SQL injection, cross-site scripting (XSS), file inclusion, and security misconfigurations." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_application_firewall> ;
    rdfs:subClassOf ns1:ApplicationLayerFirewall ;
    ns2:altLabel "WAF" .

ns1:WebApplicationServer a owl:Class ;
    rdfs:label "Web Application Server" ;
    ns1:definition "A web application server is a web server that hosts applications. Application server frameworks are software frameworks for building application servers. An application server framework provides both facilities to create web applications and a server environment to run them. In the case of Java application servers, the server behaves like an extended virtual machine for running applications, transparently handling connections to the database on one side, and, often, connections to the Web client on the other." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Application_server> ;
    rdfs:subClassOf ns1:WebServer .

ns1:WebSessionActivityAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Session Activity Analysis" ;
    ns1:analyzes ns1:WebResourceAccess ;
    ns1:d3fend-id "D3-WSAA" ;
    ns1:definition "Monitoring changes in user web session behavior by comparing current web session activity to a baseline behavior profile or a catalog of predetermined malicious behavior." ;
    ns1:kb-article """## How it works
User web session data is collected over a period of time to create a user behavior profile. Data collected includes clicks made on a website, average time between clicks, filling out web forms, order in which pages are viewed, and downloading files. Current user web session behavior is then compared against the use behavior profile to identify anomalies and a likelihood that the current user web session is malicious. Current user web session behavior can also be compared to predetermined known malicious behavior profiles that are developed through analysis of malware in run time at a threat research facility.

## Considerations
* Potential for false positives from anomalies that are not associated with malicious activity.
* Attackers may not differentiate their web session activity enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-SystemAndMethodForDetectionOfAChangeInBehaviorInTheUseOfAWebsiteThroughVectorVelocityAnalysis_SilverTailSystems,
        ns1:Reference-SystemAndMethodForNetworkSecurityIncludingDetectionOfAttacksThroughPartnerWebsites_EMCIPHoldingCoLLC,
        ns1:Reference-SystemAndMethodThereofForIdentifyingAndRespondingToSecurityIncidentsBasedOnPreemptiveForensics_PaloAltoNetworksInc ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:WideAreaNetwork a owl:Class ;
    rdfs:label "Wide Area Network" ;
    ns1:definition "By contrast to a local area network (LAN), a wide area network (WAN), not only covers a larger geographic distance, but also generally involves leased telecommunication circuits or Internet links." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Local_area_network> ;
    rdfs:subClassOf ns1:Network ;
    ns2:altLabel "WAN" .

ns1:WirelessRouter a owl:Class ;
    rdfs:label "Wireless Router" ;
    ns1:definition "A wireless router is a device that performs the functions of a router and also includes the functions of a wireless access point. It is used to provide access to the Internet or a private computer network. Depending on the manufacturer and model, it can function in a wired local area network, in a wireless-only LAN, or in a mixed wired and wireless network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Wireless_router> ;
    rdfs:seeAlso "Wireless Access Point" ;
    rdfs:subClassOf ns1:Router,
        ns1:WirelessAccessPoint .

ns1:WriteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Write File" ;
    ns1:definition "The write is one of the most basic routines provided by a Unix-like operating system kernel. It writes data from a buffer declared by the user to a given device, such as a file. This is the primary way to output data from a program by directly using a system call. The destination is identified by a numeric code. The data to be written, for instance a piece of text, is defined by a pointer and a size, given in number of bytes. write thus takes three arguments." ;
    ns1:modifies ns1:File ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Write_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ZeroClientComputer a owl:Class ;
    rdfs:label "Zero Client Computer" ;
    ns1:definition "Zero client is also referred as ultra thin client, contains no moving parts but centralizes all processing and storage to just what is running on the server. As a result, it requires no local driver to install, no patch management, and no local operating system licensing fees or updates. The device consumes very little power and is tamper-resistant and completely incapable of storing any data locally, providing a more secure endpoint." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Thin_client#Zero_client> ;
    rdfs:subClassOf ns1:ThinClientComputer .

ns1:ActiveCertificateAnalysis a ns1:ActiveCertificateAnalysis,
        ns1:CertificateAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Active Certificate Analysis" ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-ACA" ;
    ns1:definition "Actively collecting PKI certificates by connecting to the server and downloading its server certificates for analysis." ;
    ns1:kb-article """## How it works
Analysis of server certificates using active methods to detect if certificates have been misconfigured or spoofed by using elements of the certificate, certificate authorities and signatures.

### Certificate validity analysis
This can be accomplished by verifying the digital signature on certificate.

### Certificate path analysis
The client's browser can perform path verification to ensure that the server's certificate contains a valid trust anchor.

### Certificate configuration analysis
Some browsers can be configured to implement the key-usage extensions contained certificates. This can help to prevent a certificate from being misused.

### Certificate revocation status analysis
Using either Certificate Revocation Lists (CRLs) or Online Certificate Status Protocol (OCSP) to determine the revocation status. OCSP Stapling, binding the status with the certificate, helps to mitigate potential delay in status verifications.

## Considerations
* Management of the PKI across the enterprise typically requires automation to maintain scalability and flexibility
* If the certificate authority, issuing the certificate, is compromised then all of the certificates issued by the CA are suspect
* There may be delays associated with updates to certificates
* Revoked certificates give the appearance of valid certificates until they are published to a trusted revocation service (OCSP or CRL)
* The revocation service (OCSP or CRL) may be down during our connection and a browser will need to make a decision will need to be made about trusting the connection""" ;
    ns1:kb-reference ns1:Reference-SecuringWebTransactions ;
    rdfs:subClassOf ns1:CertificateAnalysis .

ns1:AddressSpace a owl:Class ;
    rdfs:label "Address Space" ;
    ns1:definition "An address space defines a range of discrete addresses, each of which may correspond to a network host, peripheral device, disk sector, a memory cell or other logical or physical entity. For software programs to save and retrieve stored data, each unit of data must have an address where it can be located. The number of address spaces available depends on the underlying address structure, which is usually limited by the computer architecture being used." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Address_space" ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:AllocateMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Allocate Memory" ;
    ns1:creates ns1:MemoryBlock ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ApplicationConfigurationDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration Database Record" ;
    ns1:definition "A database record holding information used to configure the parameters and initial settings for an application." ;
    rdfs:subClassOf ns1:ApplicationConfiguration,
        ns1:ConfigurationDatabaseRecord .

ns1:ApplicationLayerFirewall a owl:Class ;
    rdfs:label "Application Layer Firewall" ;
    ns1:definition "An application firewall is a form of firewall that controls input, output, and/or access from, to, or by an application or service. It operates by monitoring and potentially blocking the input, output, or system service calls that do not meet the configured policy of the firewall. The application firewall is typically built to control all network traffic on any OSI layer up to the application layer. It is able to control applications or services specifically, unlike a stateful network firewall, which is - without additional software - unable to control network traffic regarding a specific application. There are two primary categories of application firewalls, network-based application firewalls and host-based application firewalls." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Application_firewall> ;
    rdfs:subClassOf ns1:Firewall ;
    ns2:altLabel "Application Firewall" .

ns1:ApplicationRule a owl:Class ;
    rdfs:label "Application Rule" ;
    ns1:definition "A configuration of an application which is used to apply logical or data processing functions to data processed by the application." ;
    rdfs:subClassOf ns1:ApplicationConfiguration .

ns1:AudioInputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Audio Input Device" ;
    ns1:definition "Audio input devices allow a user to send audio info to a computer for processing, recording, or carrying out commands. Devices such as microphones allow users to speak to the computer in order to record a voice message or navigate software. Aside from recording, audio input devices are also used with speech recognition software." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Input_device#Voice_input_devices> ;
    rdfs:subClassOf ns1:InputDevice .

ns1:BinaryLargeObject a owl:Class ;
    rdfs:label "Binary Large Object" ;
    ns1:definition "A binary large object (BLOB) is a collection of binary data stored as a single entity. Blobs are typically images, audio or other multimedia objects, though sometimes binary executable code is stored as a blob." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Binary_large_object> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "BLOB",
        "Blob" .

ns1:BiometricAuthentication a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Biometric Authentication" ;
    ns1:authenticates ns1:UserAccount ;
    ns1:d3fend-id "D3-BAN" ;
    ns1:definition "Using biological measures in order to authenticate a user." ;
    ns1:kb-reference ns1:BiometricAuthentication,
        ns1:Reference-TokenlessBiometricTransactionAuthorizationMethodAndSystem,
        ns1:Reference-www.biometric-solutions.com_keystroke-dynamics ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:BlockDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Block Device" ;
    ns1:contains ns1:BootSector,
        ns1:Partition,
        ns1:PartitionTable ;
    ns1:definition """A block device (or block special file) provides buffered access to hardware devices, and provides some abstraction from their specifics.

IEEE Std 1003.1-2017: A file that refers to a device. A block special file is normally distinguished from a character special file by providing access to the device in a manner such that the hardware characteristics of the device are not visible.""" ;
    ns1:may-contain ns1:Volume ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Device_file#BLOCKDEV> ;
    rdfs:seeAlso <https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_79> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Block Special File" .

ns1:Browser a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Browser" ;
    ns1:definition "A web browser (commonly referred to as a browser) is a software application for retrieving, presenting, and traversing information resources on the World Wide Web. An information resource is identified by a Uniform Resource Identifier (URI/URL) and may be a web page, image, video or other piece of content. Hyperlinks present in resources enable users easily to navigate their browsers to related resources. Although browsers are primarily intended to use the World Wide Web, they can also be used to access information provided by web servers in private networks or files in file systems." ;
    ns1:may-contain ns1:BrowserExtension ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_browser> ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/13376000-n> ;
    rdfs:subClassOf [ ],
        ns1:UserApplication .

ns1:CallStack a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Call Stack" ;
    ns1:contains ns1:StackFrame ;
    ns1:definition "In computer science, a call stack is a stack data structure that stores information about the active subroutines of a computer program. This kind of stack is also known as an execution stack, program stack, control stack, run-time stack, or machine stack, and is often shortened to just \"the stack\". Although maintenance of the call stack is important for the proper functioning of most software, the details are normally hidden and automatic in high-level programming languages. Many computer instruction sets provide special instructions for manipulating stacks." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Call_stack> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:CertificateTrustStore a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate Trust Store" ;
    ns1:contains ns1:Certificate ;
    ns1:definition "A certificate truststore is used to store public certificates used to authenticate clients by the server for an SSL connection." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public_key_certificate>,
        <https://www.educative.io/edpresso/keystore-vs-truststore> ;
    rdfs:subClassOf [ ],
        ns1:TrustStore .

ns1:ClientApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Client Application" ;
    ns1:definition "A client application is software that accesses a service made available by a server. The server is often (but not always) on another computer system, in which case the client accesses the service by way of a network. The term applies to the role that programs or devices play in the client-server model" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Client_(computing)> ;
    rdfs:seeAlso "http://attackguidev.mitre.org/techniques/T1554/ \"Compromise Client Software Binary\"" ;
    rdfs:subClassOf ns1:Application .

ns1:Clipboard a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clipboard" ;
    ns1:definition "The clipboard is a buffer that some operating systems provide for short-term storage and transfer within and between application programs. The clipboard is usually temporary and unnamed, and its contents reside in the computer's RAM. The clipboard is sometimes called the paste buffer. Windows, Linux and macOS support a single clipboard transaction. Each cut or copy overwrites the previous contents. Normally, paste operations copy the contents, leaving the contents available in the clipboard for further pasting." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Clipboard_(computing)> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:CloudInstanceMetadata a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Instance Metadata" ;
    ns1:definition "Cloud instance metadata is configuration information on the instance and users of the instance.  This includes such information as security groups, public ip addresses, and private addresses, public keys configured, and event rotating security keys. User data can contain initialization scripts, variables, passwords, and more." ;
    rdfs:seeAlso <https://isc.sans.edu/forums/diary/Cloud+Metadata+Urls/22046> ;
    rdfs:subClassOf ns1:CloudConfiguration .

ns1:CloudServiceAuthentication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Authentication" ;
    ns1:definition "A request-response comprising a user credential presentation to a system and a verification response where the verifying party is a cloud service." ;
    rdfs:subClassOf ns1:WebAuthentication .

ns1:CloudServiceAuthorization a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Authorization" ;
    ns1:definition "Cloud authorization is the function of specifying access rights to cloud resources." ;
    rdfs:subClassOf ns1:Authorization .

ns1:CloudStorage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Storage" ;
    ns1:definition "Cloud storage is storage held within a computing cloud." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Cloud_storage> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Cloud_computing> ;
    rdfs:subClassOf ns1:SecondaryStorage .

ns1:CodeRepository a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Code Repository" ;
    ns1:contains ns1:SourceCode ;
    ns1:definition "A code repository is a form of database where code, typically source code, is stored and managed.  In revision control systems, a repository is a data structure that stores metadata for a set of files or directory structure. Depending on whether the version control system in use is distributed like (Git or Mercurial) or centralized like (Subversion, CVS, or Perforce), the whole set of information in the repository may be duplicated on every user's system or may be maintained on a single server." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Repository_(version_control)> ;
    rdfs:subClassOf [ ],
        ns1:Database ;
    ns2:altLabel "Repository",
        "Version Control Repository" .

ns1:CommandHistoryLogFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command History Log File" ;
    ns1:contains ns1:CommandHistoryLog ;
    ns1:definition "A command history log file is a file containing a command history, which the history of commands run in an operating system shell." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Command_history> ;
    rdfs:subClassOf [ ],
        ns1:LogFile .

ns1:Compiler a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compiler" ;
    ns1:definition "In computing, a compiler is a computer program that translates computer code written in one programming language (the source language) into another language (the target language). The name \"compiler\" is primarily used for programs that translate source code from a high-level programming language to a lower level language (e.g., assembly language, object code, or machine code) to create an executable program." ;
    ns1:reads ns1:CompilerConfigurationFile ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Compiler> ;
    rdfs:subClassOf [ ],
        ns1:BuildTool .

ns1:ContainerOrchestrationSoftware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Container Orchestration Software" ;
    ns1:definition "A d3f:Software which manages and coordinates running one or more d3f:ContainerProcess." ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:CreateSocket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Socket" ;
    ns1:creates ns1:Pipe ;
    ns1:definition "A create socket system call creates an endpoint for communication and returns a file descriptor that refers to that endpoint." ;
    rdfs:seeAlso <https://www.man7.org/linux/man-pages/man2/socket.2.html> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:CreateThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Thread" ;
    ns1:creates ns1:Thread ;
    ns1:definition "Threads are an execution model that exists independently from a language, as well as a parallel execution model. They enable a program to control multiple different flows of work that overlap in time." ;
    rdfs:seeAlso <http://dbpedia.org/resource/POSIX_Threads>,
        <https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createthread> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:CredentialManagementSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Management System" ;
    ns1:definition "Credential Management, also referred to as a Credential Management System (CMS), is an established form of software that is used for issuing and managing credentials as part of public key infrastructure (PKI)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Credential_Management> ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:CustomArchiveFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Custom Archive File" ;
    ns1:definition "A custom archive file is an archive file conforming to a custom format; that is, an archive file that does not conform to a common standard." ;
    rdfs:subClassOf ns1:ArchiveFile .

ns1:DataDependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Dependency" ;
    ns1:synonym "Transactional Dependency" ;
    rdfs:subClassOf ns1:Dependency .

ns1:DefaultUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Default User Account" ;
    ns1:definition "Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices." ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts> ;
    rdfs:subClassOf ns1:UserAccount .

ns1:DisplayAdapter a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Display Adapter" ;
    ns1:definition "A graphics card (also called a display card, video card, display adapter, or graphics adapter) is an expansion card which generates a feed of output images to a display device (such as a computer monitor). Frequently, these are advertised as discrete or dedicated graphics cards, emphasizing the distinction between these and integrated graphics. At the core of both is the graphics processing unit (GPU), which is the main part that does the actual computations, but should not be confused with the video card as a whole, although \"GPU\" is often used to refer to video cards." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Video_card> ;
    rdfs:subClassOf ns1:OutputDevice ;
    ns2:altLabel "Display Card",
        "Graphics Adapter",
        "Video Card" .

ns1:DisplayServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Display Server" ;
    ns1:definition "A display server or window server is a program whose primary task is to coordinate the input and output of its clients to and from the rest of the operating system, the hardware, and each other. The display server communicates with its clients over the display server protocol, a communications protocol, which can be network-transparent or simply network-capable. The display server is a key component in any graphical user interface, specifically the windowing system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Display_server> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "Window Server" .

ns1:EndpointHealthBeacon a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Endpoint Health Beacon" ;
    ns1:d3fend-id "D3-EHB" ;
    ns1:definition "Monitoring the security status of an endpoint by sending periodic messages with health status, where absence of a response may indicate that the endpoint has been compromised." ;
    ns1:kb-article """## How it works
Endpoints are configured to periodically generate and transmit a secure heartbeat that is delivered on a configured schedule and provides endpoint status information. Status information can include software details (version, configuration, etc), endpoint identification (MAC, IP address, machine ID) or other hardware/software configuration information. Interruption of the heartbeat can signal that the endpoint has been compromised.

## Considerations
* Security of heartbeat messages to ensure message integrity
* Disappearance of the heartbeat could simply mean that the endpoint is powered off or intentionally disconnected from the network. Therefore other criteria may need to be used to accurately detect endpoint compromise.
* Attacker presence on the machine may leave the heartbeat intact.
* An attacker may determine the format of the heartbeat and continue to send it even after the machine is compromised.""" ;
    ns1:kb-reference ns1:Reference-IntrusionDetectionUsingAHeartbeat_SophosLtd ;
    ns1:synonym "Endpoint Health Telemetry" ;
    rdfs:subClassOf ns1:OperatingSystemMonitoring .

ns1:FileHash a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Hash" ;
    ns1:identifies ns1:File ;
    rdfs:subClassOf [ ],
        ns1:Identifier .

ns1:FileServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Server" ;
    ns1:definition "The term server highlights the role of the machine in the traditional client-server scheme, where the clients are the workstations using the storage. A file server does not normally perform computational tasks or run programs on behalf of its client workstations. File servers are commonly found in schools and offices, where users use a local area network to connect their client computers." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/File_server> ;
    rdfs:subClassOf ns1:Server .

ns1:FileSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System" ;
    ns1:contains ns1:Directory,
        ns1:File,
        ns1:FileSystemLink,
        ns1:FileSystemMetadata ;
    ns1:definition "In computing, a file system or filesystem is used to control how data is stored and retrieved. Without a file system, information placed in a storage medium would be one large body of data with no way to tell where one piece of information stops and the next begins. By separating the data into pieces and giving each piece a name, the information is easily isolated and identified. Taking its name from the way paper-based information systems are named, each group of data is called a \"file\". The structure and logic rules used to manage the groups of information and their names is called a \"file system\"." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/File_system> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:DigitalArtifact .

ns1:Firewall a owl:Class ;
    rdfs:label "Firewall" ;
    ns1:definition "In computing, a firewall is a network security system that monitors and controls incoming and outgoing network traffic based on predetermined security rules. A firewall typically establishes a barrier between a trusted internal network and untrusted external network, such as the Internet. Firewalls are often categorized as either network firewalls or host-based firewalls. Network firewalls filter traffic between two or more networks and run on network hardware. Host-based firewalls run on host computers and control network traffic in and out of those machines. This definition refers to network firewalls." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Firewall_(computing)> ;
    rdfs:subClassOf ns1:NetworkNode ;
    ns2:altLabel "Network Firewall" .

ns1:FreeMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Free Memory" ;
    ns1:deletes ns1:MemoryBlock ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:GetOpenSockets a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Open Sockets" ;
    ns1:enumerates ns1:Pipe ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:GetOpenWindows a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Open Windows" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:GetScreenCapture a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Screen Capture" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:GetSystemNetworkConfigValue a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get System Network Config Value" ;
    rdfs:subClassOf ns1:GetSystemConfigValue .

ns1:GlobalUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Global User Account" ;
    ns1:definition "A type of user account in Microsoft Windows (NT) that has a domain-wide scope.defines that user's access to a logical group of network objects (computers, users, devices) that share the same Active Directory databases; that is, a user's access to the domain." ;
    rdfs:seeAlso <https://networkencyclopedia.com/global-user-account> ;
    rdfs:subClassOf ns1:DomainUserAccount .

ns1:GraphicalUserInterface a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Graphical User Interface" ;
    ns1:definition "A graphical user interface (GUI)  is a type of user interface that allows users to interact with electronic devices through graphical icons and visual indicators such as secondary notation, instead of text-based user interfaces, typed command labels or text navigation. GUIs were introduced in reaction to the perceived steep learning curve of command-line interfaces (CLIs), which require commands to be typed on a computer keyboard." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Graphical_user_interface> ;
    rdfs:subClassOf ns1:UserInterface ;
    ns2:altLabel "GUI" .

ns1:Host-basedFirewall a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host-based Firewall" ;
    ns1:definition "A software firewall which controls network inbound and outbound network traffic to the host computer." ;
    rdfs:subClassOf ns1:SystemSoftware .

ns1:IPCNetworkTraffic a owl:Class ;
    rdfs:label "IPC Network Traffic" ;
    ns1:definition "IPC network traffic is network traffic related to inter-process communication (IPC) between network nodes..This includes only network traffic conforming to a standard IPC protocol; not custom protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:ImageDataSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Image Data Segment" ;
    ns1:definition "An image data segment (often denoted .data) is a portion of an object file that contains initialized static variables, that is, global variables and static local variables. The size of this segment is determined by the size of the values in the program's source code, and does not change at run time. This segmenting of the memory space into discrete blocks with specific tasks carried over into the programming languages of the day and the concept is still widely in use within modern programming languages." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Data_segment>,
        "Process Data Segment" ;
    rdfs:subClassOf ns1:ImageSegment .

ns1:ImpersonateUser a ns1:ImpersonateUser,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Impersonate User" ;
    ns1:forges ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:InputFunction a owl:Class ;
    rdfs:label "Input Function" ;
    ns1:definition "Generic function that receives input from an untrusted source." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:IntranetFileTransferTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet File Transfer Traffic" ;
    ns1:definition "Intranet file transfer traffic is file transfer traffic that does not cross a given network's boundaries and uses a standard file transfer protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_transfer>,
        <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:FileTransferNetworkTraffic,
        ns1:IntranetNetworkTraffic .

ns1:IntranetMulticastNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Multicast Network Traffic" ;
    ns1:definition "Intranet IPC network traffic is multicast network traffic that does not cross a given network's boundaries." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Multicast> ;
    rdfs:subClassOf ns1:IntranetNetworkTraffic .

ns1:IntranetWebNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Web Network Traffic" ;
    ns1:definition "Intranet web network traffic is network traffic that does not cross a given network's boundaries and uses a standard web protocol." ;
    ns1:may-contain ns1:File ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf [ ],
        ns1:IntranetNetworkTraffic,
        ns1:WebNetworkTraffic .

ns1:IntrusionDetectionSystem a owl:Class ;
    rdfs:label "Intrusion Detection System" ;
    ns1:definition "An intrusion detection system (IDS) is a device or software application that monitors a network or systems for malicious activity or policy violations. Any intrusion activity or violation is typically reported either to an administrator or collected centrally using a security information and event management (SIEM) system. A SIEM system combines outputs from multiple sources and uses alarm filtering techniques to distinguish malicious activity from false alarms." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Intrusion_detection_system> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "IDS" .

ns1:JavaScriptBlob a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "JavaScript Blob" ;
    ns1:definition "A JavaScript Blob is a Blob that was created by a JavaScript Blob() constructor call or equivalent function." ;
    rdfs:subClassOf ns1:BinaryLargeObject .

ns1:KerberosTicketGrantingTicket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kerberos Ticket Granting Ticket" ;
    ns1:definition "A ticket granting ticket issued by a Kerberos system; that is, a ticket that grants a user domain admin access." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Ticket_Granting_Ticket> ;
    rdfs:subClassOf ns1:KerberosTicket,
        ns1:TicketGrantingTicket .

ns1:KeyboardInputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keyboard Input Device" ;
    ns1:definition "A computer keyboard is a typewriter-style device which uses an arrangement of buttons or keys to act as mechanical levers or electronic switches. Following the decline of punch cards and paper tape, interaction via teleprinter-style keyboards became the main input method for computers. A keyboard is also used to give commands to the operating system of a computer, such as Windows' Control-Alt-Delete combination. Although on Pre-Windows 95 Microsoft operating systems this forced a re-boot, now it brings up a system security options screen." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_keyboard> ;
    rdfs:subClassOf ns1:InputDevice ;
    ns2:altLabel "Computer Keyboard",
        "Keyboard" .

ns1:LegacySystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Legacy System" ;
    ns1:definition "In computing, a legacy system is an old method, technology, computer system, or application program, \"of, relating to, or being a previous or outdated computer system,\" yet still in use. Often referencing a system as \"legacy\" means that it paved the way for the standards that would follow it. This can also imply that the system is out of date or in need of replacement." ;
    ns1:synonym "Legacy Digital System" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Legacy_system> ;
    rdfs:subClassOf ns1:DigitalSystem .

ns1:LocalAreaNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Area Network Traffic" ;
    ns1:definition "Intranet local area network (LAN) traffic is network traffic that does not cross a given network's boundaries; where that network is defined as a LAN." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:IntranetNetworkTraffic .

ns1:LocalResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Resource Access" ;
    ns1:accesses ns1:LocalResource ;
    ns1:definition "Ephemeral digital artifact comprising a request of a local resource and any response from that resource." ;
    rdfs:subClassOf [ ],
        ns1:ResourceAccess ;
    ns2:altLabel "Endpoint Resource Access" .

ns1:MacOSKeychain a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "MacOS Keychain" ;
    ns1:definition "Keychain is the password management system in macOS, developed by Apple. It was introduced with Mac OS 8.6, and has been included in all subsequent versions of the operating system, now known as macOS. A Keychain can contain various types of data: passwords (for websites, FTP servers, SSH accounts, network shares, wireless networks, groupware applications, encrypted disk images), private keys, certificates, and secure notes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Keychain_(software)> ;
    rdfs:subClassOf ns1:PasswordStore ;
    ns2:altLabel "Keychain" .

ns1:MailNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mail Network Traffic" ;
    ns1:contains ns1:Email ;
    ns1:definition "Mail traffic is network traffic that uses a standard mail transfer protocol." ;
    rdfs:subClassOf [ ],
        ns1:NetworkTraffic .

ns1:MailService a owl:Class ;
    rdfs:label "Mail Service" ;
    ns1:definition "A mail service provides the ability to send and receive mail across a computer network.  The mail service runs on message transfer agents (i.e., mail servers) and is accessed by users through an email client." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Email>,
        <http://dbpedia.org/resource/Message_transfer_agent> ;
    rdfs:subClassOf ns1:NetworkService ;
    ns2:altLabel "Email Service" .

ns1:MemoryAddressSpace a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Address Space" ;
    ns1:contains ns1:MemoryAddress ;
    ns1:definition "A memory address space is a space containing memory addresses." ;
    rdfs:subClassOf [ ],
        ns1:AddressSpace .

ns1:MemoryManagementUnit a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Management Unit" ;
    ns1:contains ns1:TranslationLookasideBuffer ;
    ns1:creates ns1:VirtualAddress ;
    ns1:definition "A computer’s memory management unit (MMU) is the physical hardware that handles its virtual memory and caching operations. The MMU is usually located within the computer’s central processing unit (CPU), but sometimes operates in a separate integrated chip (IC)." ;
    ns1:manages ns1:PageTable,
        ns1:Storage ;
    rdfs:isDefinedBy "https://www.techopedia.com/definition/4768/memory-management-unit-mmu" ;
    rdfs:seeAlso "https://dbpedia.org/page/Memory_management_unit" ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:ProcessorComponent .

ns1:MemoryManagementUnitComponent a owl:Class ;
    rdfs:label "Memory Management Unit Component" ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:MemoryProtectionUnit a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Protection Unit" ;
    rdfs:subClassOf ns1:ProcessorComponent .

ns1:Metadata a owl:Class ;
    rdfs:label "Metadata" ;
    ns1:definition "Metadata is \"data [information] that provides information about other data\". Three distinct types of metadata exist: structural metadata, descriptive metadata, and administrative metadata. Structural metadata is data about the containers of data. For instance a \"book\" contains data, and data about the book is metadata about that container of data. Descriptive metadata uses individual instances of application data or the data content." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Metadata> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:MoveFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Move File" ;
    ns1:definition "A system call to rename or move a file.  Linux's rename() is an example of this kind of system call." ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:seeAlso <https://man7.org/linux/man-pages/man2/rename.2.html> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall ;
    ns2:altLabel "Rename File" .

ns1:MultimediaDocumentFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multimedia Document File" ;
    ns1:definition "Digital video files which often contain audio." ;
    rdfs:seeAlso "https://dbpedia.org/page/Multimedia" ;
    rdfs:subClassOf ns1:DocumentFile .

ns1:NetworkFlow a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Flow" ;
    ns1:definition "A summarization of network transactions between a client and server. It often summarizes bytes sent, bytes received, and protocol flags." ;
    ns1:summarizes ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:NetworkInitScriptFileResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Init Script File Resource" ;
    ns1:definition "A computer file resource made available from one host to other hosts on a computer network that is also an initialization script." ;
    rdfs:subClassOf ns1:InitScript,
        ns1:NetworkFileResource .

ns1:NetworkPackets a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Packet" ;
    ns1:definition "A network packet is a formatted unit of data carried by a packet-switched network. Computer communications links that do not support packets, such as traditional point-to-point telecommunications links, simply transmit data as a bit stream. When data is formatted into packets, packet switching is possible and the bandwidth of the communication medium can be better shared among users than with circuit switching." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_packet> ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:OfficeApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Application" ;
    ns1:definition "An office application is one that is part of an application suite (e.g., Microsoft Office, Open Office)." ;
    rdfs:subClassOf ns1:UserApplication .

ns1:OpenFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Open File" ;
    ns1:accesses ns1:File ;
    ns1:definition "For most file systems, a program initializes access to a file in a file system using the open system call. This allocates resources associated to the file (the file descriptor), and returns a handle that the process will use to refer to that file. In some cases the open is performed by the first access. During the open, the filesystem may allocate memory for buffers, or it may wait until the first operation. Various other errors which may occur during the open include directory update failures, un-permitted multiple connections, media failures, communication link failures and device failures." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Open_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:OperatingSystemExecutableFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Executable File" ;
    ns1:definition "An operating system executable is a critical executable that is part of the operating system, and without which, the operating system may not operate correctly." ;
    rdfs:subClassOf ns1:OperatingSystemFile .

ns1:OperatingSystemLogFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Log File" ;
    ns1:definition "An operating system log file records events that occur in an operating system" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Log_file> ;
    rdfs:seeAlso "Log File" ;
    rdfs:subClassOf ns1:LogFile,
        ns1:OperatingSystemFile .

ns1:OperatingSystemSharedLibraryFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Shared Library File" ;
    ns1:definition "An operating system shared library file is a shared library file that is part of the operating system and that incorporates common operating system code for use by any application or to provide operating system services." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Library_(computing)#Shared_libraries> ;
    rdfs:subClassOf ns1:OperatingSystemFile,
        ns1:SharedLibraryFile .

ns1:OutboundInternetEncryptedRemoteTerminalTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Encrypted Remote Terminal Traffic" ;
    ns1:definition "Outbound internet encrypted remote terminal traffic is encrypted network traffic for a standard remote terminal protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:subClassOf ns1:OutboundInternetEncryptedTraffic ;
    ns2:altLabel "Outbound Internet Encrypted RDP Traffic",
        "Outbound Internet Encrypted SSH Traffic" .

ns1:OutboundInternetFileTransferTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet File Transfer Traffic" ;
    ns1:contains ns1:File ;
    ns1:definition "Outbound internet file transfer traffic is file transfer traffic that is: (a) on an outgoing connection initiated from a host within a network to a host outside the network, and (b) using a standard file transfer protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_transfer>,
        <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:FileTransferNetworkTraffic,
        ns1:OutboundInternetNetworkTraffic,
        ns1:OutboundNetworkTraffic .

ns1:OutboundInternetMailTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Mail Traffic" ;
    ns1:definition "Outbound internet DNS lookup traffic is network traffic using a standard email protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:OutboundInternetNetworkTraffic ;
    ns2:altLabel "Outbound Internet Email Traffic" .

ns1:OutputDevice a owl:Class ;
    rdfs:label "Output Device" ;
    ns1:definition "An output device is any piece of computer hardware equipment which converts information into human-readable form. It can be text, graphics, tactile, audio, and video. Some of the output devices are Visual Display Units (VDU) i.e. a Monitor, Printer, Graphic Output devices, Plotters, Speakers etc. A new type of Output device is been developed these days, known as Speech synthesizer, a mechanism attached to the computer which produces verbal output sounding almost like human speeches." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Output_device> ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:PageFrame a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Page Frame" ;
    ns1:contained-by ns1:PrimaryStorage ;
    ns1:definition "A page frame is the smallest fixed-length contiguous block of physical memory into which memory pages are mapped by the operating system." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Page_(computer_memory)" ;
    rdfs:subClassOf [ ],
        ns1:MemoryBlock .

ns1:PageTable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Page Table" ;
    ns1:contains ns1:PhysicalAddress,
        ns1:VirtualAddress ;
    ns1:definition "A page table  is the data structure used by the MMU in a virtual memory computer system  to store the mapping between virtual addresses (virtual pages) and physical addresses (page frames)." ;
    rdfs:isDefinedBy "Page table – Wikipedia" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalArtifact .

ns1:PassiveCertificateAnalysis a ns1:CertificateAnalysis,
        ns1:PassiveCertificateAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Passive Certificate Analysis" ;
    ns1:d3fend-id "D3-PCA" ;
    ns1:definition "Collecting host certificates from network traffic or other passive sources like a certificate transparency log and analyzing them for unauthorized activity.",
        "Passively collecting certificates and analyzing them." ;
    ns1:kb-article """## How it works
Certificates are analyzed outside of a TLS server connection using third-party secure update logs, domain name analysis and analytics.

### Secure update certificate logs
* Certificate Logs
The key enabling feature is a secure service that maintains record logs of certificate activities. The logs allow users to only append certificates and never to delete or modify the log entries. The logs use Merkle Tree Hashes to ensure they have not been tampered with. The logging service also allows for public auditing by any user.

The logging service, upon receipt of a certificate to log, will respond with a signed certificate timestamp (SCT). The SCT guarantees the certificate will be added to the log within the time specified. The SCT must be present with the certificate during a TLS handshake.

* Certificate Monitoring
Certificate monitoring, of the logs, is typically done by the CA and they watch for suspicious certificate logging and unusual certificates or extensions or permissions. Monitors are also responsible for verifying the logs are accurate and public.

* Certificate Auditors
Log integrity is verified by log auditors. Auditors make use of log proofs are used to validate the cryptographic hashes (Merkle Trees) that the log employs are consistent. In order to ensure consistency throughout multiple monitors and auditors, sharing a common logging service, gossip protocol is employed.

### Phishing domain name analysis
* A curated corpus of known benign domains and phishing domain names is used as training text for machine learning. Through the use of feature set extraction, vectors labels are created with scoring to indicated if they are considered benign or phishing domains.

* A stream of new or updated SSL certificates with fully qualified domain names (FQDN) is analyzed against the feature vectors and a predictive model determines a score for the domains. The scoring considers distance measures such as Levenshtein distance to help in determining the final label score. Supervised learning is also employed using the curated domains of benign and phishing domains.

* Subdomain phishing analysis, prepending a trusted domain to a phishing domain, and regular expression comparisons  are also used in the label scoring model. A tunable measure is used to determine the threshold for alerting. This measure helps to balance between precision and recall measures.

## Considerations
* Some entity will need to run the logging service and a trusted entity is preferred.
* Certificate Authorities will likely need to monitor the logging service for consistency.
* Certificate revocation is unchanged and remains outside of Certificate Transparency, but certificates needing to be revoked are visible.
* Technique dependent of reliable feed of new and updated certificates
* Some certificate authorities allow for certificates to be registered with wildcards in the FQDN and thus will fail some of the subdomain scoring
* Phishing HTTP domains will not be discovered""" ;
    ns1:kb-reference ns1:Reference-CertificateTransparency,
        ns1:Reference-StreamingPhish ;
    rdfs:subClassOf ns1:CertificateAnalysis .

ns1:PassivePhysicalLinkMapping a ns1:PhysicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Passive Physical Link Mapping" ;
    ns1:d3fend-id "D3-PPLM" ;
    ns1:definition "Passive physical link mapping only listens to network traffic as a means to map the physical layer." ;
    ns1:synonym "Passive Physical Layer Mapping" ;
    rdfs:subClassOf ns1:PhysicalLinkMapping .

ns1:PhysicalAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Address" ;
    ns1:definition "In a computer supporting virtual memory, the term physical address is used mostly to differentiate from a virtual address. In particular, in computers utilizing a memory management unit(MMU) to translate memory addresses, the virtual and physical addresses refer to an address before and after translation performed by the MMU, respectively." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Physical_address" ;
    rdfs:subClassOf ns1:MemoryAddress .

ns1:PhysicalLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Link" ;
    ns1:definition """A physical link is a dedicated connection for communication that uses some physical media (electrical, electromagnetic, optical, to include clear spaces or vacuums.)  A physical link represents only a single hop (link) in any larger communcations path, circuit, or network.

NOTE: not synonymous with data link as a data link can be over a telecommunications circuit, which may be a virtual circuit composed of multiple phyical links.""" ;
    ns1:synonym "Layer-1 Link" ;
    rdfs:seeAlso "https://dbpedia.org/resource/Physical_layer" ;
    rdfs:subClassOf ns1:Link .

ns1:PowerShellProfileScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "PowerShell Profile Script" ;
    ns1:definition "A PowerShell profile script is a script that runs when PowerShell starts and can be used as a logon script to customize user environments." ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.1> ;
    rdfs:subClassOf ns1:UserInitScript .

ns1:PrivateKey a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Private Key" ;
    ns1:definition "A private key can be used to decrypt messages encrypted using the corresponding public key, or used to sign a message that can be authenticated with the corresponding public key." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:AsymmetricKey .

ns1:ProcessEnvironmentVariable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Environment Variable" ;
    ns1:definition "An environment variable is a dynamic-named value that can affect the way running processes will behave on a computer. They are part of the environment in which a process runs." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Environment_variable> ;
    rdfs:subClassOf ns1:ApplicationConfiguration ;
    ns2:altLabel "Environment Variable" .

ns1:ProcessTree a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Tree" ;
    ns1:contains ns1:Process ;
    ns1:definition "A process tree is a tree structure representation of parent-child relationships established via process spawn operations." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Child_process>,
        <http://dbpedia.org/resource/Parent_process>,
        "Process Spawn" ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:ProcessorRegister a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Processor Register" ;
    ns1:contained-by ns1:CentralProcessingUnit ;
    ns1:definition "A processor register is a quickly accessible location available to a computer's processor. Registers usually consist of a small amount of fast storage, although some registers have specific hardware functions, and may be read-only or write-only." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Processor_register" ;
    rdfs:seeAlso "https://www.techtarget.com/whatis/definition/register" ;
    rdfs:subClassOf [ ],
        ns1:PrimaryStorage .

ns1:RFTransceiver a owl:Class ;
    rdfs:label "RF Transceiver" ;
    rdfs:subClassOf ns1:RFNode .

ns1:ReadFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Read File" ;
    ns1:definition "A program that needs to access data from a file stored in a file system uses the read system call. The file is identified by a file descriptor that is normally obtained from a previous call to open. This system call reads in data in bytes, the number of which is specified by the caller, from the file and stores then into a buffer supplied by the calling process." ;
    ns1:reads ns1:File ;
    rdfs:seeAlso <http://dbpedia.org/resource/Read_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:RemoteResource a owl:Class ;
    rdfs:label "Remote Resource" ;
    ns1:definition "In computing, a remote  resource is a computer resource made available from one host to other hosts on a computer network. It is a device or piece of information on a computer that can be remotely accessed from another computer, typically via a local area network or an enterprise intranet." ;
    rdfs:seeAlso ns1:NetworkResource ;
    rdfs:subClassOf ns1:Resource .

ns1:Router a owl:Class ;
    rdfs:label "Router" ;
    ns1:definition "A router is a networking device that forwards data packets between computer networks. Routers perform the traffic directing functions on the Internet. Data sent through the internet, such as a web page or email, is in the form of data packets. A packet is typically forwarded from one router to another router through the networks that constitute an internetwork (e.g. the Internet) until it reaches its destination node." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Router_(computing)> ;
    rdfs:subClassOf ns1:NetworkNode .

ns1:ScriptApplicationProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Script Application Process" ;
    ns1:definition "A script application process is an application process interpreting an executable script." ;
    ns1:interprets ns1:ExecutableScript ;
    rdfs:subClassOf [ ],
        ns1:ApplicationProcess ;
    ns2:altLabel "Script Process" .

ns1:SecurityToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Token" ;
    ns1:contains ns1:AccessToken ;
    ns1:definition "Security tokens are peripheral devices used to prove one's identity electronically (as in the case of a customer trying to access their bank account). The token is used in addition to or in place of a password to prove that the customer is who they claim to be. The token acts like an electronic key to access something." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Security_token> ;
    rdfs:subClassOf [ ],
        ns1:HardwareDevice .

ns1:ServiceDependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Dependency" ;
    ns1:definition "A service dependency indicates a service has an activity, agent, or another service which relies on it in order to be functional." ;
    rdfs:subClassOf ns1:Dependency .

ns1:Session a owl:Class ;
    rdfs:label "Session" ;
    ns1:definition "In computer science, in particular networking, a session is a semi-permanent interactive information interchange, also known as a dialogue, a conversation or a meeting, between two or more communicating devices, or between a computer and user (see Login session). A session is set up or established at a certain point in time, and then torn down at some later point. An established communication session may involve more than one message in each direction. A session is typically, but not always, stateful, meaning that at least one of the communicating parts needs to save information about the session history in order to be able to communicate, as opposed to stateless communication, where the communication consists of independent requests with responses." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Session_(computer_science)> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:ShimDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shim Database" ;
    ns1:definition "A application configuration database that contains or points to software shims (e.g., for backward compatibility, patches, etc.)" ;
    rdfs:subClassOf ns1:ApplicationConfigurationDatabase .

ns1:ShortcutFile a owl:Class ;
    rdfs:label "Shortcut File" ;
    ns1:definition """A shortcut file, or shortcut, is a handle that allows the user to find a file or resource located in a different directory or folder from the place where the shortcut is located.

Shortcuts, which are supported by the graphical file browsers of some operating systems, may resemble symbolic links but differ in a number of important ways. One difference is what type of software is able to follow them:

 - Symbolic links are automatically resolved by the file system. Any software program, upon accessing a symbolic link, will see the target instead, whether the program is aware of symbolic links or not.

 - Shortcuts are treated like ordinary files by the file system and by software programs that are not aware of them. Only software programs that understand shortcuts (such as the Windows shell and file browsers) treat them as references to other files.

Another difference are the capabilities of the mechanism:

 - Microsoft Windows shortcuts normally refer to a destination by an absolute path (starting from the root directory), whereas POSIX symbolic links can refer to destinations via either an absolute or a relative path. The latter is useful if both the location and destination of the symbolic link share a common path prefix[clarification needed], but that prefix is not yet known when the symbolic link is created (e.g., in an archive file that can be unpacked anywhere).

- Microsoft Windows application shortcuts contain additional metadata that can be associated with the destination, whereas POSIX symbolic links are just strings that will be interpreted as absolute or relative pathnames.

- Unlike symbolic links, Windows shortcuts maintain their references to their targets even when the target is moved or renamed. Windows domain clients may subscribe to a Windows service called Distributed Link Tracking to track the changes in files and folders to which they are interested. The service maintains the integrity of shortcuts, even when files and folders are moved across the network.[14] Additionally, in Windows 9x and later, Windows shell tries to find the target of a broken shortcut before proposing to delete it.""" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Shortcut_(computing)>,
        <http://dbpedia.org/resource/Symbolic_link#Shortcuts> ;
    rdfs:subClassOf ns1:File .

ns1:SoftwareDeploymentTool a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Deployment Tool" ;
    ns1:definition "Software that coordinates the deployment process of software to systems, typically remotely." ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:SoftwareLibraryFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Library File" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "A software library is a collection of software components that are used to build a software product." ;
    ns1:may-contain ns1:ExecutableBinary,
        ns1:ExecutableScript ;
    rdfs:seeAlso <https://dbpedia.org/page/Library_(computing)> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:File .

ns1:StackFrameCanary a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Frame Canary" ;
    ns1:definition "Stack canaries, named for their analogy to a canary in a coal mine, are used to detect a stack buffer overflow before execution of malicious code can occur. This method works by placing a small integer, the value of which is randomly chosen at program start, in memory just before the stack return pointer. Most buffer overflows overwrite memory from lower to higher memory addresses, so in order to overwrite the return pointer (and thus take control of the process) the canary value must also be overwritten. This value is checked to make sure it has not changed before a routine uses the return pointer on the stack. This technique can greatly increase the difficulty of exploiting a stack buffer overflow because it forces the attacker to gain control of the instruction pointer by some non-traditional means such as corrupting other important variables on the stack." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Stack_buffer_overflow#Stack_canaries> ;
    rdfs:subClassOf ns1:StackComponent ;
    ns2:altLabel "Stack Canary" .

ns1:StaticAnalysisTool a owl:Class ;
    rdfs:label "Static Analysis Tool" ;
    ns1:definition "A static [program] analysis tool performs an automated analysis of computer software without actually executing programs, in contrast with dynamic analysis, which is analysis performed on programs while they are executing. In most cases the analysis is performed on some version of the source code, and in the other cases, some form of the object code." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Static_program_analysis> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Category:Program_analysis>,
        <http://dbpedia.org/resource/Program_analysis> ;
    rdfs:subClassOf ns1:CodeAnalyzer ;
    ns2:altLabel "Static Program Analysis Tool" .

ns1:StoredProcedure a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stored Procedure" ;
    ns1:definition "A stored procedure (also termed proc, storp, sproc, StoPro, StoredProc, StoreProc, sp, or SP) is a subroutine available to applications that access a relational database management system (RDBMS). Such procedures are stored in the database data dictionary." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Stored_procedure> ;
    rdfs:subClassOf ns1:Subroutine .

ns1:SystemDependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Dependency" ;
    ns1:definition "A system dependency indicates a system has an activity, agent, or another system which relies on it in order to be functional." ;
    rdfs:seeAlso "https://dl.acm.org/doi/10.1145/960116.53994",
        "https://r-docs.synapse.org/articles/systemDependencies.html",
        "https://www.ibm.com/docs/en/taddm/7.3.0?topic=model-dependencies-between-resources" ;
    rdfs:subClassOf ns1:Dependency .

ns1:SystemInitScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Init Script" ;
    ns1:definition "A script used to initialize and configure elements of the system's environment, applications, services, or its operating system." ;
    rdfs:subClassOf ns1:ExecutableScript,
        ns1:SystemConfigurationInitResource,
        ns1:SystemInitConfiguration .

ns1:SystemStartupDirectory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Startup Directory" ;
    ns1:definition "A system startup directory is a directory containing executable files or links to executable files which are run when the system starts." ;
    rdfs:subClassOf ns1:Directory,
        ns1:SystemConfigurationInitResource,
        ns1:SystemInitConfiguration .

ns1:SystemTimeApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Time Application" ;
    ns1:definition "A system time utility is utility software that can get the system time, such as the Unix date command or Windows' Net utility." ;
    rdfs:subClassOf ns1:UtilitySoftware .

ns1:T1011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Other Network Medium" ;
    ns1:attack-id "T1011" ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1016 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Network Configuration Discovery" ;
    ns1:attack-id "T1016" ;
    ns1:may-execute ns1:ExecutableScript ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetSystemNetworkConfigValue ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1020 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Automated Exfiltration" ;
    ns1:attack-id "T1020" ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1052 a owl:Class ;
    rdfs:label "Exfiltration Over Physical Medium" ;
    ns1:attack-id "T1052" ;
    rdfs:subClassOf ns1:ExfiltrationTechnique .

ns1:T1087 a owl:Class ;
    rdfs:label "Account Discovery" ;
    ns1:attack-id "T1087" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1087.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Account" ;
    ns1:attack-id "T1087.002" ;
    ns1:creates ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1136 .

ns1:T1127 a owl:Class ;
    rdfs:label "Trusted Developer Utilities Proxy Execution" ;
    ns1:attack-id "T1127" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1205 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Traffic Signaling" ;
    ns1:attack-id "T1205" ;
    ns1:definition "used all over so its not just internet traffic" ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique,
        ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1216 a owl:Class ;
    rdfs:label "Signed Script Proxy Execution" ;
    ns1:attack-id "T1216" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1480 a owl:Class ;
    rdfs:label "Execution Guardrails" ;
    ns1:attack-id "T1480" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1518 a owl:Class ;
    rdfs:label "Software Discovery" ;
    ns1:attack-id "T1518" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1599 a owl:Class ;
    rdfs:label "Network Boundary Bridging" ;
    ns1:attack-id "T1599" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1614 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Location Discovery" ;
    ns1:accesses ns1:ConfigurationResource ;
    ns1:attack-id "T1614" ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:ThinClientComputer a owl:Class ;
    rdfs:label "Thin Client Computer" ;
    ns1:definition "A thin client is a lightweight computer that has been optimized for establishing a remote connection with a server-based computing environment. The server does most of the work, which can include launching software programs, performing calculations, and storing data. This contrasts with a fat client or a conventional personal computer; the former is also intended for working in a client-server model but has significant local processing power, while the latter aims to perform its function mostly locally. Thin clients are shared computers as the thin client's computing resources are provided by a remote server." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Thin_client> ;
    rdfs:subClassOf ns1:SharedComputer .

ns1:TicketGrantingTicket a owl:Class ;
    rdfs:label "Ticket Granting Ticket" ;
    ns1:definition "In some computer security systems, a Ticket Granting Ticket or Ticket to Get Tickets (TGT) is a small, encrypted identification file with a limited validity period. After authentication, this file is granted to a user for data traffic protection by the key distribution center (KDC) subsystem of authentication services such as Kerberos. The TGT file contains the session key, its expiration date, and the user's IP address, which protects the user from man-in-the-middle attacks. The TGT is used to obtain a service ticket from Ticket Granting Service (TGS). User is granted access to network services only after this service ticket is provided." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Ticket_Granting_Ticket> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Charlie_and_the_Chocolate_Factory> ;
    rdfs:subClassOf ns1:AccessToken ;
    ns2:altLabel "Golden Ticket" .

ns1:TranslationLookasideBuffer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Translation Lookaside Buffer" ;
    ns1:definition "A translation lookaside buffer (TLB) is a memory cache that is used to reduce the time taken to access a user memory location. It is a part of the chip's memory-management unit (MMU)." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Translation_lookaside_buffer" ;
    rdfs:subClassOf ns1:MemoryManagementUnitComponent .

ns1:TrustStore a owl:Class ;
    rdfs:label "Trust Store" ;
    ns1:definition "Stores public information necessary to determine if another party can be trusted." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public_key_certificate>,
        <https://www.educative.io/edpresso/keystore-vs-truststore> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:UtilitySoftware a owl:Class ;
    rdfs:label "Utility Software" ;
    ns1:definition "Utility applications are software applications designed to help to analyze, configure, optimize or maintain a computer. It is used to support the computer infrastructure - in contrast to application software, which is aimed at directly performing tasks that benefit ordinary users. However, utilities often form part of the application systems. For example, a batch job may run user-written code to update a database and may then include a step that runs a utility to back up the database, or a job may run a utility to compress a disk before copying files." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Utility_software> ;
    rdfs:subClassOf ns1:Software ;
    ns2:altLabel "Utility Application" .

ns1:VolumeBootRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Volume Boot Record" ;
    ns1:definition "A volume boot record (VBR) (also known as a volume boot sector, a partition boot record or a partition boot sector) is a type of boot sector introduced by the IBM Personal Computer. It may be found on a partitioned data storage device, such as a hard disk, or an unpartitioned device, such as a floppy disk, and contains machine code for bootstrapping programs (usually, but not necessarily, operating systems) stored in other parts of the device. On non-partitioned storage devices, it is the first sector of the device. On partitioned devices, it is the first sector of an individual partition on the device, with the first sector of the entire device being a Master Boot Record (MBR) containing the partition table." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Volume_boot_record> ;
    rdfs:subClassOf ns1:BootRecord .

ns1:WebAuthentication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Authentication" ;
    ns1:definition "A request-response comprising a user credential presentation to a system and a verification response where the verifying party is a web server." ;
    ns1:may-create ns1:SessionCookie ;
    rdfs:subClassOf [ ],
        ns1:Authentication .

ns1:WebResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Resource Access" ;
    ns1:definition "Ephemeral digital artifact comprising a request of a network resource and any response from that network resource using a standard web protocol." ;
    rdfs:subClassOf ns1:NetworkResourceAccess .

ns1:WebScriptFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Script File" ;
    ns1:definition "A file containing a script in a web-scripting programming language. Web scripts may be present and run on the client or on the server side." ;
    rdfs:subClassOf ns1:ExecutableScript ;
    ns2:altLabel "Web Script" .

ns1:WebServerApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Server Application" ;
    ns1:definition "A web server application (or web app) is an application software that runs on a web server, unlike computer-based software programs that are stored locally on the Operating System (OS) of the device. Web applications are accessed by the user through a web browser with an active internet connection. These applications are programmed using a client-server modeled structure-the user (\"client\") is provided services through an off-site server that is hosted by a third-party. Examples of commonly-used, web applications, include: web-mail, online retail sales, online banking, and online auctions." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_application> ;
    rdfs:subClassOf ns1:ServiceApplication ;
    ns2:altLabel "Web App",
        "Web Application" .

ns1:WindowsRegistry a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Registry" ;
    ns1:definition "The Windows Registry is a hierarchical database that stores low-level settings for the Microsoft Windows operating system and for applications that opt to use the registry. The kernel, device drivers, services, Security Accounts Manager, and user interface can all use the registry. The registry also allows access to counters for profiling system performance." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Windows_Registry> ;
    rdfs:subClassOf ns1:SystemConfigurationDatabase .

ns1:WindowsRegistryKey a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Registry Key" ;
    ns1:definition "Windows registry keys are container objects similar to folders. Registry values are non-container objects similar to files. Keys may contain values and subkeys. Keys are referenced with a syntax similar to Windows' path names, using backslashes to indicate levels of hierarchy. Keys must have a case insensitive name without backslashes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Windows_Registry#Keys_and_values> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:SystemConfigurationDatabaseRecord .

ns1:WindowsShortcutFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Shortcut File" ;
    ns1:definition "A Microsoft Windows shortcut file." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Shortcut_(computing)#Microsoft_Windows>,
        <http://dbpedia.org/resource/Symbolic_link#Shortcuts> ;
    rdfs:subClassOf ns1:ShortcutFile ;
    ns2:altLabel "Shell Link" .

ns1:WirelessAccessPoint a owl:Class ;
    rdfs:label "Wireless Access Point" ;
    ns1:definition "In computer networking, a wireless access point (WAP), or more generally just access point (AP), is a networking hardware device that allows other Wi-Fi devices to connect to a wired network. The AP usually connects to a router (via a wired network) as a standalone device, but it can also be an integral component of the router itself. An AP is differentiated from a hotspot which is a physical location where Wi-Fi access is available." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Wireless_access_point> ;
    rdfs:subClassOf ns1:NetworkNode,
        ns1:RFTransceiver ;
    ns2:altLabel "WAP" .

ns1:ArtifactServer a owl:Class ;
    rdfs:label "Artifact Server" ;
    ns1:definition "A digital artifact server provides access services to digital artifacts in a repository.  It provides an associated set of data management, search and access methods allowing application-independent access to the content." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Content_management>,
        <http://dbpedia.org/resource/Content_repository> ;
    rdfs:subClassOf ns1:WebServer .

ns1:AsymmetricKey a owl:Class ;
    rdfs:label "Asymmetric Key" ;
    ns1:definition "Asymmetric keys are public and private keys, paired such that asymmetric (public-key) cryptography algorithms can be implemented using them. Public-key cryptography, or asymmetric cryptography, is any cryptographic system that uses pairs of keys: public keys that may be disseminated widely paired with private keys which are known only to the owner. There are two functions that can be achieved: using a public key to authenticate that a message originated with a holder of the paired private key; or encrypting a message with a public key to ensure that only the holder of the paired private key can decrypt it." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:CryptographicKey .

ns1:AuthorizationService a owl:Class ;
    rdfs:label "Authorization Service" ;
    ns1:definition "An authorization service ensures that the user is authorized to have access to a particular resource. Authorization can be done through role-based access control (RBAC) or list-based access control (LBAC)." ;
    rdfs:isDefinedBy <https://www.sciencedirect.com/referencework/9780122272400/encyclopedia-of-information-systems> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authorization> ;
    rdfs:subClassOf ns1:NetworkService,
        ns1:ServiceApplicationProcess .

ns1:BinarySegment a owl:Class ;
    rdfs:label "Binary Segment" ;
    ns1:definition "A binary segment is a partition of binary information within a larger binary object, which arranges a set of binary objects for its purpose.   For example, code, data, heap, and stack segments are segments of the binary information used by a process.  Code and data segments are also found in object files." ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:BootRecord a owl:Class ;
    rdfs:label "Boot Record" ;
    ns1:definition "A d3f:Record which is an essential component of the early boot (system initialization) process." ;
    rdfs:subClassOf ns1:Record .

ns1:BrowserExtension a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Browser Extension" ;
    ns1:definition "A browser extension is a plug-in that extends the functionality of a web browser in some way. Some extensions are authored using web technologies such as HTML, JavaScript, and CSS. Browser extensions can change the user interface of the web browser without directly affecting viewable content of a web page; for example, by adding a \"toolbar.\"" ;
    ns1:extends ns1:Browser ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Browser_extension> ;
    rdfs:subClassOf [ ],
        ns1:UserApplication .

ns1:BuildTool a owl:Class ;
    rdfs:label "Build Tool" ;
    ns1:definition "A tool that automates the process of creating a software build and the associated processes including: compiling computer source code into binary code, packaging binary code, and running automated tests." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Build_automation> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    ns2:altLabel "Build Automation Tool" .

ns1:CacheMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Processor Cache Memory" ;
    ns1:accessed-by ns1:CentralProcessingUnit ;
    ns1:definition "Cache memory is temporary storage that is more readily available to the processor than the computer's main memory source, located between the main memory and the processor.  It is typically either integrated directly into the CPU chip (level 1 cache) or placed on a separate chip with a bus interconnect with the CPU (level 2 cache)." ;
    ns1:may-contain ns1:ProcessSegment ;
    ns1:modifies ns1:CacheMemory ;
    rdfs:isDefinedBy "https://whatis.techtarget.com/definition/memory" ;
    rdfs:seeAlso "https://dbpedia.org/page/CPU_cache" ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:PrimaryStorage .

ns1:CentralProcessingUnit a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Central Processing Unit" ;
    ns1:contains ns1:ProcessorRegister ;
    ns1:definition "A central processing unit (CPU), also called a central processor, main processor or just processor, is the electronic circuitry that executes instructions comprising a computer program. The CPU performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program. This contrasts with external components such as main memory and I/O circuitry, and specialized processors such as graphics" ;
    ns1:may-contain ns1:CacheMemory,
        ns1:MemoryManagementUnit,
        ns1:MemoryProtectionUnit ;
    ns1:synonym "CPU",
        "Central Processor",
        "Main Processor" ;
    rdfs:isDefinedBy "https://en.wikipedia.org/wiki/Central_processing_unit" ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:Processor .

ns1:Certificate a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate" ;
    ns1:contains ns1:Identifier,
        ns1:PublicKey ;
    ns1:definition "In cryptography, a public key certificate, also known as a digital certificate or identity certificate, is an electronic document used to prove the ownership of a public key. The certificate includes information about the key, information about the identity of its owner (called the subject), and the digital signature of an entity that has verified the certificate's contents (called the issuer). If the signature is valid, and the software examining the certificate trusts the issuer, then it can use that key to communicate securely with the certificate's subject. In email encryption, code signing, and e-signature systems, a certificate's subject is typically a person or organization. However, in Transport Layer Security (TLS) a certificate's subject is typically a computer or other device, t" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Public_key_certificate> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Public Key Certificate" .

ns1:CloudUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud User Account" ;
    ns1:definition "A user account on a given host is a local user account for a given cloud and specified resources within that cloud." ;
    rdfs:subClassOf ns1:UserAccount .

ns1:CodeAnalyzer a owl:Class ;
    rdfs:label "Code Analyzer" ;
    ns1:definition "Code analyzers automatically analyze the composition or behavior of computer programs regarding a property such as correctness, robustness, security, and safety. Program analysis can be performed without executing the program (static program analysis), during runtime (dynamic program analysis) or in a combination of both." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Program_analysis> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    ns2:altLabel "Program Analysis Tool" .

ns1:CommandHistoryLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command History Log" ;
    ns1:definition "A log of commands run in an operating system shell." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Command_history>,
        "d3f:CommandLineInterface" ;
    rdfs:subClassOf ns1:EventLog .

ns1:CompilerConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compiler Configuration File" ;
    ns1:definition "A file containing Information used to configure the parameters and initial settings for a compiler." ;
    rdfs:subClassOf ns1:ApplicationConfigurationFile .

ns1:ConfigurationDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Database" ;
    ns1:contains ns1:ConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:ConfigurationResource .

ns1:ContainerImage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Container Image" ;
    ns1:definition """A container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.

Container images become containers at runtime and in the case of Docker containers - images become containers when they run on Docker Engine. Available for both Linux and Windows-based applications, containerized software will always run the same, regardless of the infrastructure. Containers isolate software from its environment and ensure that it works uniformly despite differences for instance between development and staging.""" ;
    rdfs:isDefinedBy <https://www.docker.com/resources/what-container> ;
    rdfs:subClassOf ns1:File .

ns1:CopyToken a ns1:CopyToken,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Copy Token" ;
    ns1:copies ns1:AccessToken ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:CryptographicKey a owl:Class ;
    rdfs:label "Cryptographic Key" ;
    ns1:definition "In cryptography, a key is a piece of information (a parameter) that determines the functional output of a cryptographic algorithm. For encryption algorithms, a key specifies the transformation of plaintext into ciphertext, and vice versa for decryption algorithms. Keys also specify transformations in other cryptographic algorithms, such as digital signature schemes and message authentication codes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:DNSNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Network Traffic" ;
    ns1:definition "RPC network traffic is network traffic related to remote procedure calls between network nodes..This includes only network traffic conforming to a standard RPC protocol; not custom protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:DatabaseFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database File" ;
    rdfs:subClassOf ns1:File .

ns1:DecoyArtifact a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Artifact" ;
    ns1:definition "A decoy is an imitation digital artifact in any sense of a digital artifact, object, or phenomenon that is intended to deceive a cyber attacker's surveillance devices or mislead their evaluation.  Examples include fake files, accounts, hosts (honeypots), and network segments (honeynets)." ;
    ns1:may-contain ns1:DigitalArtifact ;
    rdfs:seeAlso <http://dbpedia.org/resource/Deception_technology>,
        <https://doi.org/10.1007/978-3-319-25133-2>,
        <https://shield.mitre.org/> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Decoy",
        "Decoy Object",
        "Lure",
        "Trap" .

ns1:DigitalSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Digital System" ;
    ns1:definition "A digital system is a group of interacting or interrelated digital artifacts that act according to a set of rules to form a unified whole. A digital system, surrounded and influenced by its environment, is described by its boundaries, structure and purpose and expressed in its functioning. Systems are the subjects of study of systems theory." ;
    rdfs:seeAlso <http://dbpedia.org/resource/System> ;
    rdfs:subClassOf ns1:DigitalArtifact,
        ns1:System .

ns1:DirectoryService a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Directory Service" ;
    ns1:definition "In computing, directory service or name service maps the names of network resources to their respective network addresses. It is a shared information infrastructure for locating, managing, administering and organizing everyday items and network resources, which can include volumes, folders, files, printers, users, groups, devices, telephone numbers and other objects. A directory service is a critical component of a network operating system. A directory server or name server is a server which provides such a service. Each resource on the network is considered an object by the directory server. Information about a particular resource is stored as a collection of attributes associated with that resource or object." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Directory_service> ;
    rdfs:subClassOf ns1:NetworkService .

ns1:EmailRule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Rule" ;
    ns1:definition "A configuration of an email application which is used to apply logical or data processing functions to data processed by the email  application." ;
    rdfs:subClassOf ns1:ApplicationRule .

ns1:FileEviction a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Eviction" ;
    ns1:d3fend-id "D3-FEV" ;
    ns1:definition "File eviction techniques evict files from system storage." ;
    ns1:enables ns1:Evict ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:FileRemoval a ns1:FileEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Removal" ;
    ns1:d3fend-id "D3-FR" ;
    ns1:definition "The file removal technique deletes malicious artifacts or programs from a computer system." ;
    ns1:deletes ns1:File ;
    ns1:kb-article """## How it works

Adversaries may place files or programs into a computer's file system to perform malicious actions. As part of the eviction process, these files and programs should be removed to prevent further compromise or reinfection. Examples of malicious types of files are malware which is directly harmful and content files with the intent to deceive users (e.g., phishing.)

On Windows systems, antivirus (AV) software should be used to safely and permanently remove malicious files. AV software may first quarantine a suspected malicious file, which is the process of moving a file from its original location to a new location and makes changes so that it cannot be executed. Users can then verify that the file is not benign and then permanently delete it.

## Considerations

When it is determined that a file should be removed for security purposes, the organization--or systems implementing an organization's policies--may determine that the file should not simply be deleted from the enterprise's mission systems, but be quarantined to a secure system by an approved mechanism, so as to allow follow-up investigation by security staff.

On Windows systems, deleting a file in File Explorer does not permanently delete a file – it sends it to the Recycle Bin instead. The Recycle Bin must be emptied, or alternative steps must be performed to remove files completely. Even then, in some cases the data may persist in disk, so data shredder tools may be needed to completely wipe a file. Thus, AV tools are recommended.""" ;
    ns1:kb-reference ns1:Reference-HowDoesAntivirusQuarantineWork-SafetyDetectives ;
    ns1:may-access ns1:FileServer ;
    ns1:synonym "File Deletion" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:FileEviction .

ns1:GetSystemTime a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get System Time" ;
    ns1:definition "A system call that gets the system time.  For POSIX.1 systems, time() invokes a call to get the system time." ;
    rdfs:seeAlso <https://man7.org/linux/man-pages/man2/time.2.html> ;
    rdfs:subClassOf ns1:SystemCall .

ns1:HardLink a owl:Class ;
    rdfs:label "Hard Link" ;
    ns1:definition "In computing, a hard link is a directory entry that associates a name with a file on a file system. All directory-based file systems must have at least one hard link giving the original name for each file. The term \"hard link\" is usually only used in file systems that allow more than one hard link for the same file. Multiple hard links -- that is, multiple directory entries to the same file -- are supported by POSIX-compliant and partially POSIX-compliant operating systems, such as Linux, Android, macOS, and also Windows NT4 and later Windows NT operating systems." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:FileSystemLink .

ns1:IPAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IP Address" ;
    ns1:definition "An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.An IP address serves two main functions: host or network interface identification and location addressing. Internet Protocol version 4 (IPv4) defines an IP address as a 32-bit number. However, because of the growth of the Internet and the depletion of available IPv4 addresses, a new version of IP (IPv6), using 128 bits for the IP address, was standardized in 1998. IPv6 deployment has been ongoing since the mid-2000s." ;
    ns1:identifies ns1:NetworkNode ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/IP_address> ;
    rdfs:subClassOf [ ],
        ns1:Identifier .

ns1:ImageCodeSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Image Code Segment" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "An image code segment, also known as a text segment or simply as text, is a portion of an object file that contains executable instructions. The term \"segment\" comes from the memory segment, which is a historical approach to memory management that has been succeeded by paging. When a program is stored in an object file, the code segment is a part of this file; when the loader places a program into memory so that it may be executed, various memory regions are allocated (in particular, as pages), corresponding to both the segments in the object files and to segments only needed at run time. For example, the code segment of an object file is loaded into a corresponding code segment in memory." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Code_segment>,
        "Process Code Segment" ;
    rdfs:subClassOf [ ],
        ns1:ImageSegment .

ns1:ImageScannerInputDevice a owl:Class ;
    rdfs:label "Image Scanner Input Device" ;
    ns1:definition "An image scanner -- often abbreviated to just scanner, is a device that optically scans images, printed text, handwriting or an object and converts it to a digital image. Commonly used in offices are variations of the desktop flatbed scanner where the document is placed on a glass window for scanning. Hand-held scanners, where the device is moved by hand, have evolved from text scanning \"wands\" to 3D scanners used for industrial design, reverse engineering, test and measurement, orthotics, gaming and other applications. Mechanically driven scanners that move the document are typically used for large-format documents, where a flatbed design would be impractical." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Image_scanner> ;
    rdfs:subClassOf ns1:VideoInputDevice ;
    ns2:altLabel "Scanner" .

ns1:ImageSegment a owl:Class ;
    rdfs:label "Image Segment" ;
    ns1:definition "Image segments are distinct partitions of an object file.  Both data and code segments are examples of image segments." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Object_file>,
        "Object File" ;
    rdfs:subClassOf ns1:BinarySegment,
        ns1:FileSection .

ns1:In-memoryPasswordStore a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "In-memory Password Store" ;
    ns1:definition "A password store held in memory." ;
    rdfs:subClassOf ns1:PasswordStore .

ns1:InboundInternetDNSResponseTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Internet DNS Response Traffic" ;
    ns1:definition "Inbound internet DNS response traffic is DNS response traffic from a host outside a given network initiated on an incoming connection to a host inside that network." ;
    rdfs:subClassOf ns1:InboundInternetNetworkTraffic .

ns1:InboundInternetMailTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Internet Mail Traffic" ;
    ns1:definition "Inbound internet mail traffic is network traffic that is: (a) coming from a host outside a given network via an incoming connection to a host inside that same network, and (b) using a standard protocol for email." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:InboundInternetNetworkTraffic,
        ns1:InboundNetworkTraffic,
        ns1:MailNetworkTraffic .

ns1:InitScript a owl:Class ;
    rdfs:label "Init Script" ;
    ns1:definition "An init script (or initialization script) is an executable script that initializes the an application, a process, or a service's state.  Examples include scripts run at boot by Unix or Windows, or those run to initialize a shell." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Init>,
        <https://blog.opstree.com/2020/02/11/shell-initialization-files/> ;
    rdfs:subClassOf ns1:ExecutableScript ;
    ns2:altLabel "Initialization Script" .

ns1:InterprocessCommunication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Interprocess Communication" ;
    ns1:definition "In computer science, inter-process communication or inter-process communication (IPC) refers specifically to the mechanisms an operating system provides to allow processes it manages to share data. Typically, applications can use IPC categorized as clients and servers, where the client requests data and the server responds to client requests. Many applications are both clients and servers, as commonly seen in distributed computing. Methods for achieving IPC are divided into categories which vary based on software requirements, such as performance and modularity requirements, and system circumstances, such as network bandwidth and latency." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Inter-process_communication> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:IntranetIPCNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet IPC Network Traffic" ;
    ns1:definition "Intranet IPC network traffic is network traffic that does not cross a given network's boundaries and uses a standard inter-process communication (IPC) networking protocol." ;
    ns1:may-contain ns1:File ;
    rdfs:seeAlso <http://dbpedia.org/resource/Inter-process_communication>,
        <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf [ ],
        ns1:IPCNetworkTraffic,
        ns1:IntranetNetworkTraffic .

ns1:Kernel a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel" ;
    ns1:contains ns1:KernelProcessTable ;
    ns1:definition "The kernel is a computer program that constitutes the central core of a computer's operating system. It has complete control over everything that occurs in the system. As such, it is the first program loaded on startup, and then manages the remainder of the startup, as well as input/output requests from software, translating them into data processing instructions for the central processing unit. It is also responsible for managing memory, and for managing and communicating with computing peripherals, like printers, speakers, etc. The kernel is a fundamental part of a modern computer's operating system." ;
    ns1:loads ns1:Application ;
    ns1:manages ns1:OperatingSystemProcess,
        ns1:UserProcess ;
    ns1:may-contain ns1:HardwareDriver,
        ns1:KernelModule ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Kernel_(operating_system)> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:SystemSoftware .

ns1:KernelProcessTable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel Process Table" ;
    ns1:definition "A data structure in the kernel which is a table containing all of the information that must be saved when the CPU switches from running one process to another in a multitasking system. It allows the operating system to track all the process's execution status, and contains the For every process managed by the kernel, there is a process control block (PCB) in the process table." ;
    rdfs:isDefinedBy <https://encyclopedia2.thefreedictionary.com/process+table> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Process_(computing)>,
        <https://www.geeksforgeeks.org/process-table-and-process-control-block-pcb/> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:Link a owl:Class ;
    rdfs:label "Link" ;
    rdfs:seeAlso "https://dbpedia.org/resource/Link" ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:LocalAreaNetwork a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Area Network" ;
    ns1:definition "A local area network (LAN) is a computer network that interconnects computers within a limited area such as a residence, school, laboratory, university campus or office building and has its network equipment and interconnects locally managed. Ethernet and Wi-Fi are the two most common transmission technologies in use for local area networks. Historical technologies include ARCNET, Token ring, and AppleTalk." ;
    ns1:may-contain ns1:Host ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Local_area_network> ;
    rdfs:subClassOf [ ],
        ns1:Network ;
    ns2:altLabel "LAN" .

ns1:LogFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Log File" ;
    ns1:contains ns1:Log ;
    ns1:definition """A log file is a file that records either events that occur in an operating system or other software runs, or messages between different users of a communication software. Logging is the act of keeping a log. In the simplest case, messages are written to a single log file.

A transaction log is a file (i.e., log) of the communications between a system and the users of that system, or a data collection method that automatically captures the type, content, or time of transactions made by a person from a terminal with that system. For Web searching, a transaction log is an electronic record of interactions that have occurred during a searching episode between a Web search engine and users searching for information on that Web search engine.

Many operating systems, software frameworks and programs include a logging system. A widely used logging standard is syslog, defined in Internet Engineering Task Force (IETF) RFC 5424). The syslog standard enables a dedicated, standardized subsystem to generate, filter, record, and analyze log messages. This relieves software developers of having to design and code their own ad hoc logging systems.""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Log_file> ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/06515875-n> ;
    rdfs:subClassOf [ ],
        ns1:File .

ns1:MemoryWord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Word" ;
    ns1:definition "A memory word is the natural unit of data used by a particular computer processor design; a fixed-size piece of data handled as a unit by the instruction set or the hardware of the processor." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Word_(computer_architecture)" ;
    rdfs:subClassOf ns1:MemoryExtent .

ns1:MessageTransferAgent a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Transfer Agent" ;
    ns1:definition "A message transfer agent or mail transfer agent (MTA) or mail relay is software that transfers electronic mail messages from one computer to another using a client-server application architecture. An MTA implements both the client (sending) and server (receiving) portions of the Simple Mail Transfer Protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Message_transfer_agent> ;
    rdfs:subClassOf ns1:MailService ;
    ns2:altLabel "MTA",
        "Mail Transfer Agent" .

ns1:NetworkFileResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network File Resource" ;
    ns1:contains ns1:File ;
    ns1:definition "A computer file resource made available from one host to other hosts on a computer network." ;
    rdfs:subClassOf [ ],
        ns1:NetworkFileShareResource .

ns1:NetworkSensor a owl:Class ;
    rdfs:label "Network Sensor" ;
    rdfs:subClassOf ns1:Sensor .

ns1:OfficeApplicationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Application File" ;
    ns1:definition "A document file in a format associated with an d3f:OfficeApplication." ;
    rdfs:seeAlso "d3f:OfficeApplication" ;
    rdfs:subClassOf ns1:DocumentFile .

ns1:OperatingSystemConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Configuration" ;
    ns1:definition "Information used to configure the services, parameters, and initial settings for an operating system." ;
    rdfs:subClassOf ns1:ConfigurationResource .

ns1:OrchestrationServer a owl:Class ;
    rdfs:label "Orchestration Server" ;
    ns1:definition "A d3f:Server which is involved with the orchestration of workloads or the execution of orchestrated workloads." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Orchestration_(computing)> ;
    rdfs:subClassOf ns1:Server .

ns1:PhysicalLocation a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Location" ;
    ns1:definition "The terms location  [here, a physical location] and place in geography are used to identify a point or an area on the Earth's surface or elsewhere. The term location generally implies a higher degree of certainty than place, which often indicates an entity with an ambiguous boundary, relying more on human or social attributes of place identity and sense of place than on geometry. The distinction between space and place is considered a central concern of geography, and has been addressed by scholars such as Yi-Fu Tuan and John Agnew." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Location_(geography)> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:ProcessImage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Image" ;
    ns1:contains ns1:ProcessSegment ;
    ns1:definition "A process image is a copy of a given process's state at a given point in time. It is often used to create persistence within an otherwise volatile system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/System_image#Process_images> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:ProcessSpawnAnalysis a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Spawn Analysis" ;
    ns1:analyzes ns1:CreateProcess,
        ns1:Process ;
    ns1:d3fend-id "D3-PSA" ;
    ns1:definition "Analyzing spawn arguments or attributes of a process to detect processes that are unauthorized." ;
    ns1:kb-article """## How it works
Process attributes are established when an operating system spawns a new process. These attributes are analyzed to look for the presence or absence of specific values or patterns.

Some attributes of interest are:
 - user
 - process name
 - image path
 - security content

## Considerations

 - Attackers can spoof the parent process identifier (PPID), which could bypass this defense to allow execution of a malicious process from an arbitrary parent process.
 - Attackers could have legitimately compromised any of the process properties, such as the user, to make the execution appear legitimate.
 - Location: If the full image path is not checked, there could be a conflict with an executable that appears earlier due to resolution involving the system environment path/classpath variable.
 - Parsing issues: If the raw command from a shell is analyzed, rather than the actual function call, it is important to identify the actual command  being run from its arguments.  In Windows, services with unquoted file paths containing spaces will try to use the first token as the executable and the rest as arguments -- and shift tokens to the executable until a valid one is found.
 - Some [operating systems](/dao/artifact/d3f:OperatingSystem) can spawn processes without forking.""" ;
    ns1:kb-reference ns1:Reference-ActiveDirectoryDumpingViaNTDSUtil_MITRE,
        ns1:Reference-CAR-2020-04-001%3AShadowCopyDeletion_MITRE,
        ns1:Reference-CAR-2020-05-003%3ARareLolBASCommandLines_MITRE,
        ns1:Reference-CAR-2020-08-001%3ANTFSAlternateDataStreamExecution-SystemUtilities_MITRE,
        ns1:Reference-CAR-2020-09-003%3AIndicatorBlocking-DriverUnloaded_MITRE,
        ns1:Reference-CAR-2020-09-004%3ACredentialsInFiles%26Registry_MITRE,
        ns1:Reference-CAR-2020-11-001%3ABootOrLogonInitializationScripts_MITRE,
        ns1:Reference-CAR-2020-11-003%3ADLLInjectionWithMavinject_MITRE,
        ns1:Reference-CAR-2020-11-005%3AClearPowershellConsoleCommandHistory_MITRE,
        ns1:Reference-CAR-2020-11-006%3ALocalPermissionGroupDiscovery_MITRE,
        ns1:Reference-CAR-2020-11-007%3ANetworkShareConnectionRemoval_MITRE,
        ns1:Reference-CAR-2020-11-008%3AMSBuildAndMsxsl_MITRE,
        ns1:Reference-CAR-2020-11-009%3ACompiledHTMLAccess_MITRE,
        ns1:Reference-CAR-2021-01-002%3AUnusuallyLongCommandLineStrings_MITRE,
        ns1:Reference-CAR-2021-01-003%3AClearingWindowsLogsWithWevtutil_MITRE,
        ns1:Reference-CAR-2021-01-004%3AUnusualChildProcessForSpoolsv.ExeOrConnhost.Exe_MITRE,
        ns1:Reference-CAR-2021-01-006%3AUnusualChildProcessSpawnedUsingDDEExploit_MITRE,
        ns1:Reference-CAR-2021-01-007%3ADetectingTamperingOfWindowsDefenderCommandPrompt_MITRE,
        ns1:Reference-CAR-2021-01-008%3ADisableUAC_MITRE,
        ns1:Reference-CAR-2021-01-009%3ADetectingShadowCopyDeletionViaVssadmin.exe_MITRE,
        ns1:Reference-CAR-2021-02-001%3AWebshell-IndicativeProcessTree_MITRE,
        ns1:Reference-CAR-2021-04-001%3ACommonWindowsProcessMasquerading_MITRE,
        ns1:Reference-CAR-2021-05-001%3AAttemptToAddCertificateToUntrustedStore_MITRE,
        ns1:Reference-CAR-2021-05-002%3ABatchFileWriteToSystem32_MITRE,
        ns1:Reference-CAR-2021-05-003%3ABCDEditFailureRecoveryModification_MITRE,
        ns1:Reference-CAR-2021-05-004%3ABITSJobPersistence_MITRE,
        ns1:Reference-CAR-2021-05-005%3ABITSAdminDownloadFile_MITRE,
        ns1:Reference-CAR-2021-05-006%3ACertUtilDownloadWithURLCacheAndSplitArguments_MITRE,
        ns1:Reference-CAR-2021-05-007%3ACertUtilDownloadWithVerifyCtlAndSplitArguments_MITRE,
        ns1:Reference-CAR-2021-05-008%3ACertutilExeCertificateExtraction_MITRE,
        ns1:Reference-CAR-2021-05-009%3ACertUtilWithDecodeArgument_MITRE,
        ns1:Reference-CAR-2021-05-010%3ACreateLocalAdminAccountsUsingNetExe_MITRE,
        ns1:Reference-CommandLineUsageOfArchivingSoftware_MITRE,
        ns1:Reference-CreateRemoteProcessViaWMIC_MITRE_Other,
        ns1:Reference-CredentialDumpingViaMimikatz_MITRE,
        ns1:Reference-HostDiscoveryCommands_MITRE,
        ns1:Reference-LsassProcessDumpViaProcdump_MITRE,
        ns1:Reference-PowershellExecution_MITRE,
        ns1:Reference-RunDLL32.exeMonitoring_MITRE,
        ns1:Reference-Squiblydoo_MITRE,
        ns1:Reference-SuspiciousArguments_MITRE,
        ns1:Reference-SuspiciousRunLocations_MITRE ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ProcessAnalysis .

ns1:Processor a owl:Class ;
    rdfs:label "Processor" ;
    ns1:synonym "Computer Processor" ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:ProcessorComponent a owl:Class ;
    rdfs:label "Processor Component" ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:ProxyServer a owl:Class ;
    rdfs:label "Proxy Server" ;
    ns1:definition "In computer networking, a proxy server is a server application or appliance that acts as an intermediary for requests from clients seeking resources from servers that provide those resources. A proxy server thus functions on behalf of the client when requesting service, potentially masking the true origin of the request to the resource server." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Proxy_server> ;
    rdfs:subClassOf ns1:NetworkNode,
        ns1:Server .

ns1:PublicKey a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Public Key" ;
    ns1:definition "A public key can be disseminated widely as part of an asymmetric cryptography framework and be used to encrypt messages to send to the public key's owner or to authenticate signed messages from that sender." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:AsymmetricKey .

ns1:RDPSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RDP Session" ;
    ns1:definition "A Remote Desktop Protocol (RDP) session is a session established using the RDP protocol to access Remove Desktop Services (RDS)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Remote_Desktop_Protocol>,
        <http://dbpedia.org/resource/Remote_Desktop_Services> ;
    rdfs:subClassOf ns1:RemoteSession ;
    ns2:altLabel "Remote Desktop Session",
        "Terminal Services" .

ns1:RemoteCommand a owl:Class ;
    rdfs:label "Remote Command" ;
    ns1:definition "A remote command is a command sent from one computer to another to be executed on the remote computer.  One example of this, is through a command-line interface (CLI) like using Invoke-Command from PowerShell or a command sent through an ssh session. This class generalizes to all means of sending a command through an established protocol to control capabilities on a remote computer." ;
    rdfs:subClassOf ns1:Command,
        ns1:NetworkSession .

ns1:ResourceFork a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Fork" ;
    ns1:definition "The resource fork is a fork or section of a file on Apple's classic Mac OS operating system, which was also carried over to the modern macOS for compatibility, used to store structured data along with the unstructured data stored within the data fork." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Resource_fork> ;
    rdfs:subClassOf ns1:FileSection .

ns1:SSHSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SSH Session" ;
    ns1:definition "A Secure Shell Protocol (SSH) session is a session over a secure channel established using SSH to connect a client to a server and establish the remote session." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Secure_Shell_Protocol> ;
    rdfs:subClassOf ns1:RemoteSession .

ns1:Shim a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shim" ;
    ns1:definition "In computer programming, a shim is a small library that transparently intercepts API calls and changes the arguments passed, handles the operation itself, or redirects the operation elsewhere. Shims can be used to support an old API in a newer environment, or a new API in an older environment. Shims can also be used for running programs on different software platforms than those for which they were developed." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Shim_(computing)> ;
    rdfs:subClassOf ns1:Software .

ns1:SlowSymbolicLink a owl:Class ;
    rdfs:label "Slow Symbolic Link" ;
    ns1:definition "A slow symbolic link is any symbolic link on a Unix filesystem that is not a fast symbolic link; slow symlink is thus retroactively termed from fast symlink.  Slow symbolic links stored the symbolic link information as data in regular files." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Symbolic_link#Storage_of_symbolic_links> ;
    rdfs:subClassOf ns1:SymbolicLink,
        ns1:UnixLink ;
    ns2:altLabel "Slow Symlink" .

ns1:SoftwarePackage a owl:Class ;
    rdfs:label "Software Package" ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:SoftwarePackagingTool a owl:Class ;
    rdfs:label "Software Packaging Tool" ;
    ns1:definition "A tool that automates the process of packaging either or both binary code  and source code for use on one or more target platforms." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Build_automation>,
        <http://dbpedia.org/resource/Package_manager> ;
    rdfs:subClassOf ns1:BuildTool .

ns1:SystemCallAnalysis a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Call Analysis" ;
    ns1:analyzes ns1:SystemCall ;
    ns1:d3fend-id "D3-SCA" ;
    ns1:definition "Analyzing system calls to determine whether a process is exhibiting unauthorized behavior." ;
    ns1:kb-article """## How it works

System calls are APIs between a user application and the operating system [1].

By analyzing a process's use of these APIs, it is, in some cases, possible to ascertain whether a program is exhibiting unauthorized behavior, including trying to escalate its privileges.

### Gathering System Calls
A common method to capture system calls is to use kernel APIs to hook [2] a process's system call invocations.

The Linux system call `ptrace` tracks other system calls in a process and allows their alteration; this is made use of by GDB.  `strace` utilizes `ptrace` and will print to stdout each system call invoked. Other applications record this data in local or remote databases.

The log entry for each system call, which may reference additional information such as the date and time, and the process tree for the process which made the system call, is relayed, in real time or post-facto, to an analysis module which consults a catalog or model to determine whether the distribution matches a known-good or known-bad pattern.


### Analysis

System calls are analyzed with a variety of methods. Some analytics look for specific sequences of instructions, others may apply statistical methods to identify abnormal behavior. Sequences of instructions can be abstracted into conceptually higher order user activities, for example:

* An attacker executes many system calls in a short period of time, with several sequences which could be used to escalate privileges.
* Getting the contents from a URL, writing to a new file, and then executing the same file.
* A ransomware program which either uses a loop or creates many threads to: read a specified file, encrypt its contents, create an output file with a similar name to the original file, and delete the unencrypted original.

## Considerations

* Duplicative or extraneous system calls may be added to malware to defeat analytics.
* Malware could replace API hooking instructions to allow system calls to be made without being monitored.
* A model built from a training set of system calls and related data may not be updated fast enough to detect new threats.


[1] [Syscalls](http://man7.org/linux/man-pages/man2/syscalls.2.html)

[2] [Hooking](http://dbpedia.org/resource/Hooking)""" ;
    ns1:kb-reference ns1:Reference-CAR-2020-05-001%3AMiniDumpOfLSASS_MITRE,
        ns1:Reference-CAR-2021-05-011%3ACreateRemoteThreadIntoLSASS_MITRE,
        ns1:Reference-CredentialDumpingViaWindowsTaskManager_MITRE,
        ns1:Reference-DLLInjectionViaLoadLibrary_MITRE,
        ns1:Reference-DeterministicMethodForDetectingAndBlockingOfExploitsOnInterpretedCode_K2CyberSecurityInc,
        ns1:Reference-Hardware-assistedSystemAndMethodForDetectingAndAnalyzingSystemCallsMadeToAnOpertingSystemKernel_EndgameInc,
        ns1:Reference-MalwareDetectionInEventLoops_CrowdstrikeInc,
        ns1:Reference-PostSandboxMethodsAndSystemsForDetectingAndBlockingZero-dayExploitsViaApiCallValidation_K2CyberSecurityInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:SystemConfigSystemCall a owl:Class ;
    rdfs:label "System Config System Call" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:SystemFileAnalysis a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System File Analysis" ;
    ns1:analyzes ns1:OperatingSystemFile ;
    ns1:d3fend-id "D3-SFA" ;
    ns1:definition "Monitoring system files such as authentication databases, configuration files, system logs, and system executables for modification or tampering." ;
    ns1:kb-article """## How it works
This technique ensures the integrity of system owned file resources. System files can impact the behavior below the user level.


## Considerations
* Need to manage the size of log file analysis.
* False positives are a concern with this technique and filtering will need to be given additional thought.
* A baseline or snapshot of file checksums should be established for future comparison.""" ;
    ns1:kb-reference ns1:Reference-AccessPermissionModification_MITRE,
        ns1:Reference-AutorunDifferences_MITRE,
        ns1:Reference-UserActivityFromClearingEventLogs_MITRE ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:SystemFirewallConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firewall Configuration" ;
    ns1:configures ns1:Host-basedFirewall ;
    ns1:definition "The configuration for a individual host operating system's firewall." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Firewall_(computing)> ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemConfigurationComponent .

ns1:SystemFirmware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firmware" ;
    ns1:definition "Firmware that is installed on a computer's main board which manages the initial boot process. It can also continue to run or function after the operating system boots." ;
    rdfs:subClassOf ns1:Firmware ;
    ns2:altLabel "BIOS Firmware",
        "UEFI Firmware" .

ns1:SystemPasswordDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Password Database" ;
    ns1:definition "A password database used by a system service or process to authenticate users (e.g., Security Account Manager)" ;
    rdfs:subClassOf ns1:PasswordDatabase .

ns1:SystemSoftware a owl:Class ;
    rdfs:label "System Software" ;
    ns1:definition "Computer software which enables operating system or platform functionality." ;
    rdfs:subClassOf ns1:Software .

ns1:T1074 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Staged" ;
    ns1:attack-id "T1074" ;
    ns1:reads ns1:Resource ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1132 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Encoding" ;
    ns1:attack-id "T1132" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1222 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File and Directory Permissions Modification" ;
    ns1:attack-id "T1222" ;
    ns1:modifies ns1:AccessControlConfiguration ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1484 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Group Policy Modification" ;
    ns1:attack-id "T1484" ;
    ns1:modifies ns1:GroupPolicy ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1491 a owl:Class ;
    rdfs:label "Defacement" ;
    ns1:attack-id "T1491" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1561 a owl:Class ;
    rdfs:label "Disk Wipe" ;
    ns1:attack-id "T1561" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1563 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Service Session Hijacking" ;
    ns1:accesses ns1:RemoteSession ;
    ns1:attack-id "T1563" ;
    ns1:produces ns1:AdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:LateralMovementTechnique .

ns1:T1567 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Web Service" ;
    ns1:attack-id "T1567" ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1569 a owl:Class ;
    rdfs:label "System Services" ;
    ns1:attack-id "T1569" ;
    ns1:definition "This technique has been deprecated." ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1573 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Encrypted Channel" ;
    ns1:attack-id "T1573" ;
    ns1:produces ns1:OutboundInternetEncryptedTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique ;
    ns2:altLabel "Custom Command and Control Protocol",
        "Custom Cryptographic Protocol",
        "Multilayer Encryption" .

ns1:T1585 a owl:Class ;
    rdfs:label "Establish Accounts" ;
    ns1:attack-id "T1585" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1586 a owl:Class ;
    rdfs:label "Compromise Accounts" ;
    ns1:attack-id "T1586" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1593 a owl:Class ;
    rdfs:label "Search Open Websites/Domains" ;
    ns1:attack-id "T1593" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1597 a owl:Class ;
    rdfs:label "Search Closed Sources" ;
    ns1:attack-id "T1597" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1600 a owl:Class ;
    rdfs:label "Weaken Encryption" ;
    ns1:attack-id "T1600" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1601 a owl:Class ;
    rdfs:label "Modify System Image" ;
    ns1:attack-id "T1601" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1602 a owl:Class ;
    rdfs:label "Data from Configuration Repository" ;
    ns1:attack-id "T1602" ;
    rdfs:subClassOf ns1:CollectionTechnique .

ns1:T1606 a owl:Class ;
    rdfs:label "Forge Web Credentials" ;
    ns1:attack-id "T1606" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:TestExecutionTool a owl:Class ;
    rdfs:label "Test Execution Tool" ;
    ns1:definition "A test execution tool is a type of software used to test software, hardware or complete systems.  Synonyms of test execution tool include test execution engine, test executive, test manager, test sequencer.  Two common forms in which a test execution engine may appear are as a: (a) module of a test software suite (test bench) or an integrated development environment, or (b) stand-alone application software." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Test_execution_engine> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    ns2:altLabel "Test Execution Engine",
        "Test Executive",
        "Test Manager" .

ns1:User a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User" ;
    ns1:definition "A user is a person [or agent] who uses a computer or network service. Users generally use a system or a software product without the technical expertise required to fully understand it. Power users use advanced features of programs, though they are not necessarily capable of computer programming and system administration. A user often has a user account and is identified to the system by a username (or user name). Other terms for username include login name, screenname (or screen name), nickname (or nick) and handle, which is derived from the identical Citizen's Band radio term. Some software products provide services to other systems and have no direct end users." ;
    ns1:has-account ns1:UserAccount ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_(computing)> ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/10761247-n>,
        "UserAccount" ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:UserInterface a owl:Class ;
    rdfs:label "User Interface" ;
    ns1:definition "The user interface (UI), in the industrial design field of human-machine interaction, is the space where interactions between humans and machines occur. The goal of this interaction is to allow effective operation and control of the machine from the human end, whilst the machine simultaneously feeds back information that aids the operators' decision-making process. Examples of this broad concept of user interfaces include the interactive aspects of computer operating systems, hand tools, heavy machinery operator controls, and process controls. The design considerations applicable when creating user interfaces are related to or involve such disciplines as ergonomics and psychology." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_interface> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "UI" .

ns1:UserProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Process" ;
    ns1:definition "A user process is a process running to perform functions in the name of on particular user and user account, such as run an application or application service serving any number users.  This is in contrast to a system process, which executes software to fulfill operating system functions." ;
    rdfs:subClassOf ns1:Process .

ns1:UserToUserMessage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User to User Message" ;
    ns1:definition "Personal message, private message (PM), direct message (DM), or personal chat (PC) is a private form of messaging between different members on a given platform. It is only seen and accessible by the users participating in the message." ;
    ns1:has-recipient ns1:UserAccount ;
    ns1:has-sender ns1:UserAccount ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Personal_message> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Personal Message",
        "Private Message" .

ns1:VideoInputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Video Input Device" ;
    ns1:definition "Video input devices are used to digitize images or video from the outside world into the computer. The information can be stored in a multitude of formats depending on the user's requirement." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Input_device#Video_input_devices> ;
    rdfs:subClassOf ns1:InputDevice .

ns1:VirtualAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Virtual Address" ;
    ns1:definition "A virtual address in memory is a pointer or marker for a memory space that an operating system allows a process to use. The virtual address points to a location in primary storage that a process can use independently of other processes." ;
    ns1:synonym "Logical Address" ;
    rdfs:isDefinedBy "https://www.techopedia.com/definition/9934/virtual-address-va" ;
    rdfs:seeAlso "https://dbpedia.org/page/Virtual_address_space",
        "https://en.wikipedia.org/wiki/Memory_address#Logical_addresses" ;
    rdfs:subClassOf ns1:MemoryAddress .

ns1:VirtualizationSoftware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Virtualization Software" ;
    ns1:definition "Virtualization software allows a single host computer to create and run one or more virtual environments. Virtualization software is most often used to emulate a complete computer system in order to allow a guest operating system to be run, for example allowing Linux to run as a guest on top of a PC that is natively running a Microsoft Windows operating system (or the inverse, running Windows as a guest on Linux)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Category:Virtualization_software> ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:WebFileResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web File Resource" ;
    ns1:addressed-by ns1:URL ;
    ns1:definition "A web resource is a resource identified by a Uniform Resource Identifier (URI) and made available from one host to another host via a web protocol and across a network or networks." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Web_resource> ;
    rdfs:subClassOf [ ],
        ns1:NetworkFileResource ;
    ns2:altLabel "Web Resource" .

ns1:ApplicationConfigurationDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration Database" ;
    ns1:contains ns1:ApplicationConfigurationDatabaseRecord ;
    ns1:definition "A database used to hold application configuration data." ;
    rdfs:subClassOf [ ],
        ns1:ConfigurationDatabase .

ns1:ApplicationConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration File" ;
    ns1:contains ns1:ApplicationConfiguration ;
    ns1:definition "A file containing Information used to configure the parameters and initial settings for an application.. A plist file is an example of this type of file for macOS.  Usually text-based." ;
    rdfs:subClassOf [ ],
        ns1:ConfigurationFile .

ns1:ApplicationProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Process" ;
    ns1:definition "An application process is an instance of an application computer program that is being executed." ;
    ns1:runs ns1:Application ;
    rdfs:seeAlso <http://dbpedia.org/resource/Application_software> ;
    rdfs:subClassOf [ ],
        ns1:UserProcess .

ns1:ClientComputer a owl:Class ;
    rdfs:label "Client Computer" ;
    ns1:definition "A client computer is a host that accesses a service made available by a server. The server is often (but not always) on another computer system, in which case the client accesses the service by way of a network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Client_(computing)> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Host_(network)> ;
    rdfs:subClassOf ns1:Host .

ns1:CloudConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Configuration" ;
    ns1:definition "Information used to configure the services, parameters, and initial settings for a virtual server instance running in a cloud service.." ;
    rdfs:subClassOf ns1:ConfigurationResource ;
    ns2:altLabel "Cloud Configuration Information" .

ns1:CollaborativeSoftware a owl:Class ;
    rdfs:label "Collaborative Software" ;
    ns1:definition "Collaborative software or groupware is application software designed to help people working on a common task to attain their goals. One of the earliest definitions of groupware is \"intentional group processes plus software to support them\". Collaborative software is a broad concept that overlaps considerably with computer-supported cooperative work (CSCW). According to Carstensen and Schmidt (1999) groupware is part of CSCW. The authors claim that CSCW, and thereby groupware, addresses \"how collaborative activities and their coordination can be supported by means of computer systems.\"" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Collaborative_software> ;
    rdfs:subClassOf ns1:UserApplication .

ns1:CollectorAgent a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Agent" ;
    ns1:definition "A network agent is software installed on a network node or device that transmits information back to a collector agent or management system.  Kinds of network agents include SNMP Agent, IPMI agents, WBEM agents, and many proprietary agents capturing network monitoring and management information." ;
    ns1:synonym "Exporter" ;
    rdfs:subClassOf ns1:Software .

ns1:ConfigurationDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Database Record" ;
    ns1:synonym "Configuration Record" ;
    rdfs:subClassOf ns1:ConfigurationResource,
        ns1:Record .

ns1:CreateFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create File" ;
    ns1:creates ns1:File ;
    ns1:definition "System call to create a new file on a file system. Some operating systems implement this functionality as part of their d3f:OpenFile system call." ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2>,
        <https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea>,
        <https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilew>,
        <https://linux.die.net/man/2/creat> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:DatabaseQuery a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database Query" ;
    ns1:definition "A specific query expressed in SQL, SPARQL, or similar language against a database." ;
    rdfs:subClassOf ns1:Command .

ns1:FileSection a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Section" ;
    ns1:definition "A file section is one of the portions of a file in which the file is regarded as divided and where together the file sections constitute the whole file." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/05876035-n> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "File Part" .

ns1:GetRunningProcesses a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Running Processes" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:GetSystemConfigValue a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get System Config Value" ;
    ns1:reads ns1:SystemConfigurationDatabaseRecord ;
    rdfs:seeAlso "https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopenkeyexa" ;
    rdfs:subClassOf [ ],
        ns1:SystemConfigSystemCall .

ns1:GroupPolicy a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Group Policy" ;
    ns1:definition "Group Policy is a feature of the Microsoft Windows NT family of operating systems that controls the working environment of user accounts and computer accounts. Group Policy provides the centralized management and configuration of operating systems, applications, and users' settings in an Active Directory environment. A version of Group Policy called Local Group Policy (\"LGPO\" or \"LocalGPO\") also allows Group Policy Object management on standalone and non-domain computers." ;
    rdfs:subClassOf ns1:AccessControlConfiguration .

ns1:HardwareDriver a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Driver" ;
    ns1:definition "In computing, a device driver (commonly referred to simply as a driver) is a computer program that operates or controls a particular type of device that is attached to a computer. A driver provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details of the hardware being used. A driver communicates with the device through the computer bus or communications subsystem to which the hardware connects. When a calling program invokes a routine in the driver, the driver issues commands to the device. Once the device sends data back to the driver, the driver may invoke routines in the original calling program. Drivers are hardware dependent and operating-system-specific. They usually provide the interrupt handling required for any necessary asynchronous time-dependent hardware interface." ;
    ns1:drives ns1:HardwareDevice ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Device_driver> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Device Driver" .

ns1:InboundNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Network Traffic" ;
    ns1:definition "Inbound traffic is network traffic originating from another host (client), to the host of interest (server)." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:IntranetNetwork a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Network" ;
    ns1:definition "An intranet is a private network accessible only to an organization's staff or delegates. Generally a wide range of information and services from the organization's internal IT systems are available that would not be available to the public from the Internet. A company-wide intranet can constitute an important focal point of internal communication and collaboration, and provide a single starting point to access internal and external resources. In its simplest form an intranet is established with the technologies for local area networks (LANs) and wide area networks (WANs)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:Network .

ns1:KernelModule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel Module" ;
    ns1:definition """A loadable kernel module (LKM) is an object file that contains code to extend the running kernel, or so-called base kernel, of an operating system. LKMs are typically used to add support for new hardware (as device drivers) and/or filesystems, or for adding system calls. When the functionality provided by a LKM is no longer required, it can be unloaded in order to free memory and other resources.

Most current Unix-like systems and Microsoft Windows support loadable kernel modules, although they might use a different name for them, such as kernel loadable module (kld) in FreeBSD, kernel extension (kext) in macOS,[1] kernel extension module in AIX, kernel-mode driver in Windows NT[2] and downloadable kernel module (DKM) in VxWorks. They are also known as kernel loadable modules (or KLM), and simply as kernel modules (KMOD).""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Loadable_kernel_module> ;
    rdfs:subClassOf ns1:ObjectFile ;
    ns2:altLabel "LKM",
        "Loadable Kernel Module" .

ns1:LocalUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local User Account" ;
    ns1:definition "A user account on a given host is a local user account for that specific host." ;
    rdfs:subClassOf ns1:UserAccount .

ns1:LoginSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Login Session" ;
    ns1:definition "In computing, a login session is the period of activity between a user logging in and logging out of a (multi-user) system. On Unix and Unix-like operating systems, a login session takes one of two main forms: (a) When a textual user interface is used, a login session is represented as a kernel session -- a collection of process groups with the logout action managed by a session leader, and (b) Where an X display manager is employed, a login session is considered to be the lifetime of a designated user process that the display manager invokes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Login_session> ;
    rdfs:subClassOf ns1:Session .

ns1:MailServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mail Server" ;
    ns1:definition "Within the Internet email system, a message transfer agent or mail transfer agent (MTA) or mail relay is software that transfers electronic mail messages from one computer to another using SMTP. The terms mail server, mail exchanger, and MX host are also used in some contexts. Messages exchanged across networks are passed between mail servers, including any attached data files (such as images, multimedia or documents). These servers also often keep mailboxes for email. Access to this email by end users is typically either via webmail or an email client." ;
    ns1:runs ns1:MessageTransferAgent ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Message_transfer_agent> ;
    rdfs:subClassOf [ ],
        ns1:Server ;
    ns2:altLabel "Email Server Resource",
        "MTA",
        "MX Host",
        "Mail Exchanger",
        "Mail transfer agent",
        "Message transfer agent" .

ns1:MemoryAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Address" ;
    ns1:addresses ns1:MemoryWord ;
    ns1:definition "In computing, a memory address is a reference to a specific memory location used at various levels by software and hardware." ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Memory_address" ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:MemoryExtent a owl:Class ;
    rdfs:label "Memory Extent" ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:Modem a owl:Class ;
    rdfs:label "Modem" ;
    ns1:definition "A modem -- a portmanteau of \"modulator-demodulator\" -- is a hardware device that converts data into a format suitable for a transmission medium so that it can be transmitted from one computer to another (historically along telephone wires). A modem modulates one or more carrier wave signals to encode digital information for transmission and demodulates signals to decode the transmitted information. The goal is to produce a signal that can be transmitted easily and decoded reliably to reproduce the original digital data. Modems can be used with almost any means of transmitting analog signals from light-emitting diodes to radio. A common type of modem is one that turns the digital data of a computer into modulated electrical signal for transmission over telephone lines and demodulated by another modem at the receiver side to recover the digital data." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem> ;
    rdfs:subClassOf ns1:NetworkNode .

ns1:NTFSLink a owl:Class ;
    rdfs:label "NTFS Link" ;
    ns1:definition "The NTFS filesystem defines various ways to link files, i.e. to make a file point to another file or its contents. The object being pointed to is called the target. There are three classes of NTFS links: (a) Hard links, which have files share the same MFT entry (inode), in the same filesystem; (b) Symbolic links, which record the path of another file that the links contents should show and can accept relative paths; and (c) Junction points, which are similar to symlinks but defined only for directories and only accepts local absolute paths" ;
    rdfs:subClassOf ns1:File,
        ns1:FileSystemLink .

ns1:NetworkResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Resource Access" ;
    ns1:accesses ns1:NetworkResource,
        ns1:Resource ;
    ns1:definition "Ephemeral digital artifact comprising a request of a network resource and any response from that network resource." ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ResourceAccess .

ns1:ObjectFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Object File" ;
    ns1:definition "An object file is a file that contains relocatable machine code." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Object_file> ;
    rdfs:subClassOf ns1:File .

ns1:OutboundInternetEncryptedWebTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Encrypted Web Traffic" ;
    ns1:definition "Outbound internet encrypted web traffic is network traffic using a standard web protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:OutboundInternetEncryptedTraffic,
        ns1:OutboundInternetWebTraffic .

ns1:Partition a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Partition" ;
    ns1:definition "A partition is a region on secondary storage device created so that the region can be managed by itself; separate from any other regions (partitions) on that secondary storage device. Creating partitions is typically the first step of preparing a newly installed storage device, before any file system is created. The device stores the information about the partitions' locations and sizes in an area known as the partition table that the operating system reads before any other part of the disk. Each partition then appears to the operating system as a distinct \"logical\" storage device that uses part of the actual device. System administrators use a program called a partition editor to create, resize, delete, and manipulate the partitions. Partitioning allows the use of different filesystems to be installed for different kinds of files. Separating user data from system data can prevent the system partition from becoming full and rendering the system unusable. Partitioning can also make backing up easier. [Definition adapted as generalization from definition of disk partitioning and distinct from in-memory partitions.]" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Disk_partitioning> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Memory_management_(operating_systems)>,
        <http://dbpedia.org/resource/Partition_table> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "Disk Partition",
        "Disk Slice" .

ns1:PartitionTable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Partition Table" ;
    ns1:addresses ns1:Partition ;
    ns1:definition "A partition is a fixed-size subset of a storage device which is treated as a unit by the operating system. A partition table is a table maintained on the storage device by the operating system describing the partitions on that device. The terms partition table and partition map are most commonly associated with the MBR partition table of a Master Boot Record (MBR) in IBM PC compatibles, but it may be used generically to refer to other \"formats\" that divide a disk drive into partitions, such as: GUID Partition Table (GPT), Apple partition map (APM), or BSD disklabel." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Partition_table> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:PasswordDatabase a owl:Class ;
    rdfs:label "Password Database" ;
    ns1:definition "A password database is a database that holds passwords for user accounts and is usually encrypted (i.e.., the passwords are hashed). Password databases are found supporting system services (such as SAM) or part of user applications such as password managers." ;
    rdfs:subClassOf ns1:Database .

ns1:PasswordFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password File" ;
    ns1:definition "Simple form of password database held in a single file (e.g., /etc/password)" ;
    rdfs:subClassOf ns1:File,
        ns1:PasswordDatabase .

ns1:PasswordStore a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Store" ;
    ns1:definition "A user repository of account passwords, often accessed via a password manager." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Password_manager> ;
    rdfs:subClassOf ns1:PasswordDatabase .

ns1:Pipe a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pipe" ;
    ns1:definition "In Unix-like computer operating systems, a pipeline is a mechanism for inter-process communication using message passing.  In the strictest sense, a pipe is a single segment of a pipeline, allowing one process to pass information forward to another.  Network pipes allow processes on different hosts to interact." ;
    rdfs:isDefinedBy <http://www.linfo.org/pipe.html> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Pipeline_(Unix)> ;
    rdfs:subClassOf ns1:InterprocessCommunication ;
    ns2:altLabel "Pipeline" .

ns1:RFNode a owl:Class ;
    rdfs:label "RF Node" ;
    rdfs:subClassOf ns1:NetworkNode .

ns1:RemoteSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Session" ;
    ns1:definition "A remote login session is a login session where a client has logged in from their local host machine to a server via a network." ;
    rdfs:subClassOf ns1:LoginSession .

ns1:ResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Access" ;
    ns1:definition "Ephemeral digital artifact comprising a request of a resource and any response from that resource." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Computer_access_control> ;
    rdfs:subClassOf ns1:DigitalEvent,
        ns1:UserAction .

ns1:SecondaryStorage a owl:Class ;
    rdfs:label "Secondary Storage" ;
    ns1:definition "Secondary memory (storage, hard disk) is the computer component holding information that does not need to be accessed quickly and that needs to be retained long-term." ;
    rdfs:isDefinedBy "https://whatis.techtarget.com/definition/memory" ;
    rdfs:seeAlso "https://en.wikipedia.org/wiki/Computer_data_storage#Secondary_storage" ;
    rdfs:subClassOf ns1:HardwareDevice,
        ns1:Storage .

ns1:Sensor a owl:Class ;
    rdfs:label "Sensor" ;
    rdfs:subClassOf ns1:D3FENDThing,
        ns1:DigitalArtifact .

ns1:SessionCookie a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Session Cookie" ;
    ns1:definition "A session cookie, also known as an in-memory cookie, transient cookie or non-persistent cookie, exists only in temporary memory while the user navigates the website. Web browsers normally delete session cookies when the user closes the browser. Unlike other cookies, session cookies do not have an expiration date assigned to them, which is how the browser knows to treat them as session cookies." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/HTTP_cookie#Session_cookie> ;
    rdfs:seeAlso <http://dbpedia.org/resource/HTTP_cookie> ;
    rdfs:subClassOf ns1:Credential ;
    ns2:altLabel "In-memory Cookie",
        "Non-persistent Cookie",
        "Transient Cookie",
        "Web Session Cookie" .

ns1:StackComponent a owl:Class ;
    rdfs:label "Stack Component" ;
    ns1:definition "A stack component is any component of a call stack used for stack-based memory allocation in a running process.  Examples include saved instruction pointers, stack frames, and stack frame canaries." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Call_stack> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:SystemConfigurationInitDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Init Database Record" ;
    ns1:definition "A database record holding information used to configure the services, parameters, and initial settings for an operating system at startup." ;
    rdfs:subClassOf ns1:SystemConfigurationDatabaseRecord,
        ns1:SystemConfigurationInitResource,
        ns1:SystemInitConfiguration ;
    ns2:altLabel "System Configuration Startup Database Record" .

ns1:SystemConfigurationInitResource a owl:Class ;
    rdfs:label "System Configuration Init Resource" ;
    ns1:definition "A system configuration initialization resource has information for initializing (booting) a system." ;
    rdfs:subClassOf ns1:LocalResource ;
    ns2:altLabel "System Init Resource" .

ns1:T1001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Obfuscation" ;
    ns1:attack-id "T1001" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1048 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Alternative Protocol" ;
    ns1:attack-id "T1048" ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1069 a owl:Class ;
    rdfs:label "Permission Groups Discovery" ;
    ns1:attack-id "T1069" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1102 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Service" ;
    ns1:attack-id "T1102" ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1114 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Collection" ;
    ns1:accesses ns1:Resource ;
    ns1:attack-id "T1114" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1195 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Supply Chain Compromise" ;
    ns1:attack-id "T1195" ;
    ns1:modifies ns1:DigitalArtifact ;
    rdfs:subClassOf [ ],
        ns1:InitialAccessTechnique .

ns1:T1204 a owl:Class ;
    rdfs:label "User Execution" ;
    ns1:attack-id "T1204" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1213 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Information Repositories" ;
    ns1:accesses ns1:Resource ;
    ns1:attack-id "T1213" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique,
        ns1:DiscoveryTechnique .

ns1:T1497 a owl:Class ;
    rdfs:label "Virtualization/Sandbox Evasion" ;
    ns1:attack-id "T1497" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1498 a owl:Class ;
    rdfs:label "Network Denial of Service" ;
    ns1:attack-id "T1498" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1499 a owl:Class ;
    rdfs:label "Endpoint Denial of Service" ;
    ns1:attack-id "T1499" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1557 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Man-in-the-Middle" ;
    ns1:attack-id "T1557" ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique,
        ns1:CredentialAccessTechnique .

ns1:T1559 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inter-Process Communication Execution" ;
    ns1:attack-id "T1559" ;
    ns1:injects ns1:InterprocessCommunication ;
    rdfs:subClassOf [ ],
        ns1:ExecutionTechnique .

ns1:T1560 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive Collected Data" ;
    ns1:attack-id "T1560" ;
    ns1:creates ns1:ArchiveFile ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1565 a owl:Class ;
    rdfs:label "Data Manipulation" ;
    ns1:attack-id "T1565" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1566 a owl:Class ;
    rdfs:label "Phishing" ;
    ns1:attack-id "T1566" ;
    rdfs:subClassOf ns1:InitialAccessTechnique .

ns1:T1568 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dynamic Resolution" ;
    ns1:attack-id "T1568" ;
    ns1:produces ns1:OutboundInternetDNSLookupTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1589 a owl:Class ;
    rdfs:label "Gather Victim Identity Information" ;
    ns1:attack-id "T1589" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1595 a owl:Class ;
    rdfs:label "Active Scanning" ;
    ns1:attack-id "T1595" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1598 a owl:Class ;
    rdfs:label "Phishing for Information" ;
    ns1:attack-id "T1598" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:TaskSchedule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Task Schedule" ;
    ns1:definition "A task schedule is a specification of tasks to be executed at particular times or time intervals.  The schedule is a plan that enacted by a task scheduling process." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Cron>,
        <http://dbpedia.org/resource/Windows_Task_Scheduler> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:Thread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread" ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:UserInitConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Init Configuration File" ;
    ns1:definition "A user initialization configuration file is a file containing the information necessary to configure that part of a user's environment which is common to all applications and actions. User configurations may be overridden by more specific configuration information (such as that found in a application configuration file.)" ;
    rdfs:subClassOf ns1:ConfigurationFile,
        ns1:UserLogonInitResource ;
    ns2:altLabel "User Configuration File" .

ns1:UserStartupScriptFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Startup Script File" ;
    ns1:definition "A user startup script file is a shortcut file that is executed when a user logs in and starts a session on the host.  These indicate applications the user wants started at login.  For Windows, these are typically found in the user's startup directory." ;
    rdfs:subClassOf ns1:ExecutableScript,
        ns1:UserLogonInitResource .

ns1:Volume a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Volume" ;
    ns1:definition "In the context of computer operating systems, a volume or logical drive is a single accessible storage area with a single file system, typically (though not necessarily) resident on a single partition of a hard disk. Although a volume might be different from a physical disk drive, it can still be accessed with an operating system's logical interface. However, a volume differs from a partition." ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "Drive Volume",
        "Logical Drive" .

ns1:WebServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Server" ;
    ns1:definition "A web server is server software, or hardware dedicated to running this software, that can satisfy client requests on the World Wide Web. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols. While the major function is to serve content, a full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_server> ;
    rdfs:subClassOf ns1:Server .

ns1:AdministrativeNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Administrative Network Traffic" ;
    ns1:definition "Administrative network traffic is network traffic related to the remote administration or control of hosts or devices through a standard remote administrative protocol.  Remote shells, terminals, RDP, and VNC are examples of these protocols, which are typically only used by administrators." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Remote_administration> ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:AuthenticationLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Log" ;
    ns1:definition "A log of authentication events." ;
    ns1:records ns1:Authentication ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authorization>,
        <http://wordnet-rdf.princeton.edu/id/00155053-n> ;
    rdfs:subClassOf [ ],
        ns1:Log .

ns1:BootLoader a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Boot Loader" ;
    ns1:definition "A bootloader is software that is responsible for booting a computer. When a computer is turned off, its software‍—‌including operating systems, application code, and data‍—‌remains stored on non-volatile memory. When the computer is powered on, it typically does not have an operating system or its loader in random-access memory (RAM). The computer first executes a relatively small program stored in read-only memory (ROM, and later EEPROM, NOR flash) along with some needed data, to initialize RAM (especially on x86 systems) to access the nonvolatile device (usually block device, eg NAND flash) or devices from which the operating system programs and data can be loaded into RAM." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Bootloader> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "Bootloader" .

ns1:Command a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command" ;
    ns1:definition "In computing, a command is a directive to a computer program acting as an interpreter of some kind, in order to perform a specific task. Most commonly a command is either a directive to some kind of command-line interface, such as a shell, or an event in a graphical user interface triggered by the user selecting an option in a menu." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Command_(computing)> ;
    rdfs:subClassOf ns1:DigitalArtifact,
        ns1:DigitalEvent .

ns1:ConfigurationFile a owl:Class ;
    rdfs:label "Configuration File" ;
    ns1:definition "A file containing Information used to configure the parameters and initial settings for some computer programs. They are used for user applications, server processes and operating system settings." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Configuration_file> ;
    rdfs:subClassOf ns1:File ;
    ns2:altLabel "Settings File" .

ns1:DomainName a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Name" ;
    ns1:definition "A domain name is an identification string that defines a realm of administrative autonomy, authority or control within the Internet. Domain names are formed by the rules and procedures of the Domain Name System (DNS). Any name registered in the DNS is a domain name.Domain names are used in various networking contexts and application-specific naming and addressing purposes. In general, a domain name represents an Internet Protocol (IP) resource, such as a personal computer used to access the Internet, a server computer hosting a web site, or the web site itself or any other service communicated via the Internet. In 2015, 294 million domain names had been registered." ;
    ns1:identifies ns1:IPAddress ;
    rdfs:subClassOf [ ],
        ns1:Identifier .

ns1:FileTransferNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Transfer Network Traffic" ;
    ns1:definition "File transfer network traffic is network traffic related to file transfers between network nodes..This includes only network traffic conforming to standard file transfer protocols, not custom transfer protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:FirmwareVerification a ns1:PlatformMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Verification" ;
    ns1:d3fend-id "D3-FV" ;
    ns1:definition "Cryptographically verifying firmware integrity." ;
    ns1:kb-article """## How it works
Cryptographic hash values are computed for system and peripheral firmware. The hash values are compared against precomputed hash values for the identified firmware. A hash value mismatch may indicate that the firmware may have been tampered with or updated with a non-current release indicating a misconfiguration for the system.

## Considerations
* Requires cryptographically computed hash values of firmware
* Requires storage of precomputed firmware hash values""" ;
    ns1:kb-reference ns1:Reference-FirmwareVerificationEclypsium,
        ns1:Reference-FirmwareVerificationTrapezoid,
        ns1:Reference-PlatformFirmwareResiliencyGuidelines_NIST ;
    ns1:verifies ns1:Firmware ;
    rdfs:subClassOf [ ],
        ns1:PlatformMonitoring .

ns1:ForwardResolutionDomainDenylisting a ns1:DNSDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Forward Resolution Domain Denylisting" ;
    ns1:blocks ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-FRDDL" ;
    ns1:definition "Blocking a lookup based on the query's domain name value." ;
    ns1:kb-article """## How it works

Policies are created that filter DNS queries using fully qualified domain name (FQDN) of record in the query. A DNS policy can be created for blocking DNS queries from FQDNs that have been identified as unauthorized.

## Considerations

Continuous maintenance of unauthorized domain lists is needed to keep up to date as updates occur.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Forward Resolution Domain Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:DNSDenylisting .

ns1:Host a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host" ;
    ns1:contains ns1:Application,
        ns1:OperatingSystem ;
    ns1:definition "A host is a computer or other device, typically connected to a computer network. A network host may offer information resources, services, and applications to users or other nodes on the network. A network host is a network node that is assigned a network layer host address. Network hosts that participate in applications that use the client-server model of computing, are classified as server or client systems. Network hosts may also function as nodes in peer-to-peer applications, in which all nodes share and consume resources in an equipotent manner." ;
    ns1:runs ns1:OperatingSystem ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Host_(network)> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:NetworkNode ;
    ns2:altLabel "Network Host" .

ns1:KerberosTicket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kerberos Ticket" ;
    ns1:definition "An access ticket/token issued by a Kerberos system." ;
    rdfs:subClassOf ns1:AccessToken .

ns1:Kernel-basedProcessIsolation a ns1:ExecutionIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel-based Process Isolation" ;
    ns1:d3fend-id "D3-KBPI" ;
    ns1:definition "Using kernel-level capabilities to isolate processes." ;
    ns1:kb-reference ns1:Reference-OverviewOfTheSeccompSandbox ;
    rdfs:subClassOf ns1:ExecutionIsolation .

ns1:LogicalLinkMapping a ns1:NetworkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logical Link Mapping" ;
    ns1:d3fend-id "D3-LLM" ;
    ns1:definition "Logical link mapping creates a model of existing or previous node-to-node connections using network-layer data or metadata." ;
    ns1:kb-reference ns1:Reference-LibreNMSDocsNetworkMapExtension ;
    ns1:maps ns1:LogicalLink,
        ns1:Network,
        ns1:NetworkNode ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:NetworkMapping .

ns1:MessageAnalysis a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Analysis" ;
    ns1:d3fend-id "D3-MA" ;
    ns1:definition "Analyzing email or instant message content to detect unauthorized activity." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview

Email and messaging are frequently used to deliver malicious content to targets. These enterprise capabilities are used to deliver software exploits or social engineering tricks. If the recipient of a message trusts the sender, attackers can avoid escalating suspicion.

Emails and messages are also complex data structures. They contain files and links, and complex data encodings which vary region to region. Thus the defensive techniques used to analyze emails and messages are highly varied ranging from deep content analysis and execution to social network graph-style analytics to analyze trust or risk.""" ;
    ns1:synonym "Electronic Message Analysis",
        "Email Or Messaging Analysis" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:NetworkFileShareResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network File Share Resource" ;
    ns1:definition "A shared file resource, or network file share, is a computer file made available from one host to other hosts on a computer network. Network sharing is made possible by inter-process communication over the network. It includes both files and directories." ;
    rdfs:subClassOf ns1:NetworkResource .

ns1:NetworkSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Session" ;
    ns1:contains ns1:NetworkPackets ;
    ns1:definition "A network session is a temporary and interactive information interchange between two or more devices communicating over a network. A session is established at a certain point in time, and then 'torn down' - brought to an end - at some later point. An established communication session may involve more than one message in each direction. A session is typically stateful, meaning that at least one of the communicating parties needs to hold current state information and save information about the session history in order to be able to communicate, as opposed to stateless communication, where the communication consists of independent requests with responses. Network sessions may be established and implemented as part of protocols and services at the application, session, or transport layers of the OSI model." ;
    rdfs:seeAlso <http://dbpedia.org/resource/OSI_model>,
        <http://dbpedia.org/resource/Session_(computer_science)> ;
    rdfs:subClassOf [ ],
        ns1:NetworkTraffic .

ns1:NetworkTrafficFiltering a ns1:NetworkIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Filtering" ;
    ns1:d3fend-id "D3-NTF" ;
    ns1:definition "Restricting network traffic originating from any location." ;
    ns1:filters ns1:NetworkTraffic ;
    ns1:kb-reference ns1:Reference-ActiveFirewallSystemAndMethodology_McAfeeLLC,
        ns1:Reference-AutomaticallyGeneratingRulesForConnectionSecurity_Microsoft,
        ns1:Reference-FWTK-FirewallToolkit_,
        ns1:Reference-FirewallForInterentAccess_SecureComputingLLC,
        ns1:Reference-FirewallForProcessingAConnectionlessNetworkPacket_NationalSecurityAgency,
        ns1:Reference-FirewallForProcessingConnection-orientedAndConnectionlessDatagramsOverAConnection-orientedNetwork_NationalSecurityAgency,
        ns1:Reference-FirewallsThatFilterBasedUponProtocolCommands_IntelCorp,
        ns1:Reference-MethodForControllingComputerNetworkSecurity_CheckpointSoftwareTechnologiesLtd,
        ns1:Reference-NetworkFirewallWithProxy_SecureComputingLLC ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:OperatingSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System" ;
    ns1:contains ns1:Kernel,
        ns1:SystemServiceSoftware ;
    ns1:definition "An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs. All computer programs, excluding firmware, require an operating system to function. Time-sharing operating systems schedule tasks for efficient use of the system and may also include accounting software for cost allocation of processor time, mass storage, printing, and other resources." ;
    ns1:may-contain ns1:OperatingSystemConfigurationComponent ;
    rdfs:seeAlso <http://dbpedia.org/resource/Operating_system> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalArtifact .

ns1:PhysicalLinkMapping a ns1:NetworkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Link Mapping" ;
    ns1:d3fend-id "D3-PLM" ;
    ns1:definition "Physical link mapping identifies and models the link connectivity of the network devices within a physical network." ;
    ns1:kb-reference ns1:Reference-LibreNMSDocsNetworkMapExtension ;
    ns1:maps ns1:NetworkNode,
        ns1:PhysicalLink ;
    ns1:synonym "Layer 1 Mapping" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkMapping .

ns1:ProcessEviction a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Eviction" ;
    ns1:d3fend-id "D3-PE" ;
    ns1:definition "Process eviction techniques terminate or remove running process." ;
    ns1:enables ns1:Evict ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:RPCNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RPC Network Traffic" ;
    ns1:definition "RPC network traffic is network traffic related to remote procedure calls between network nodes..This includes only network traffic conforming to a standard RPC protocol; not custom protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:ServiceApplicationProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Application Process" ;
    rdfs:subClassOf ns1:ApplicationProcess .

ns1:SharedComputer a owl:Class ;
    rdfs:label "Shared Computer" ;
    ns1:definition "A computer whose resources are intended to be shared widely." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Time-sharing> ;
    rdfs:subClassOf ns1:ClientComputer .

ns1:SystemInitConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Init Configuration" ;
    ns1:definition "System initialization configuration information is configuration information used to configure the services, parameters, and initial settings for an operating system at startup." ;
    rdfs:subClassOf ns1:OperatingSystemConfigurationComponent ;
    ns2:altLabel "Autoruns" .

ns1:T1056 a owl:Class ;
    rdfs:label "Input Capture" ;
    ns1:attack-id "T1056" ;
    rdfs:subClassOf ns1:CollectionTechnique,
        ns1:CredentialAccessTechnique .

ns1:T1071 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Layer Protocol" ;
    ns1:attack-id "T1071" ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:pref-label "Application Layer Protocol C2" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CommandAndControlTechnique .

ns1:T1078 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Valid Accounts" ;
    ns1:attack-id "T1078" ;
    ns1:produces ns1:Authentication,
        ns1:Authorization ;
    ns1:uses ns1:UserAccount ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique,
        ns1:InitialAccessTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1090 a owl:Class ;
    rdfs:label "Proxy" ;
    ns1:attack-id "T1090" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1110 a owl:Class ;
    rdfs:label "Brute Force" ;
    ns1:attack-id "T1110" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1543 a owl:Class ;
    rdfs:label "Create or Modify System Process" ;
    ns1:attack-id "T1543" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1548 a owl:Class ;
    rdfs:label "Abuse Elevation Control Mechanism" ;
    ns1:attack-id "T1548" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1550 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Use Alternate Authentication Material" ;
    ns1:accesses ns1:AuthenticationService ;
    ns1:attack-id "T1550" ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique,
        ns1:LateralMovementTechnique .

ns1:T1558 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Steal or Forge Kerberos Tickets" ;
    ns1:attack-id "T1558" ;
    ns1:may-access ns1:KerberosTicket ;
    ns1:may-create ns1:KerberosTicket ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1578 a owl:Class ;
    rdfs:label "Modify Cloud Compute Infrastructure" ;
    ns1:attack-id "T1578" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1587 a owl:Class ;
    rdfs:label "Develop Capabilities" ;
    ns1:attack-id "T1587" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1591 a owl:Class ;
    rdfs:label "Gather Victim Org Information" ;
    ns1:attack-id "T1591" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1592 a owl:Class ;
    rdfs:label "Gather Victim Host Information" ;
    ns1:attack-id "T1592" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:UnixLink a owl:Class ;
    rdfs:label "Unix Link" ;
    ns1:definition "A Unix link is a file link in a Unix file system." ;
    rdfs:subClassOf ns1:FileSystemLink .

ns1:UserAction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Action" ;
    ns1:definition "An action performed by a user. Executing commands, granting permissions, and accessing resources are examples of user actions." ;
    rdfs:subClassOf ns1:DigitalArtifact,
        ns1:DigitalEvent .

ns1:UserInitScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Init Script" ;
    ns1:definition "A script used to initialize and configure elements of the user's applications and user environment." ;
    rdfs:subClassOf ns1:ExecutableScript,
        ns1:InitScript,
        ns1:UserLogonInitResource .

ns1:WebNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Network Traffic" ;
    ns1:definition "Web network traffic is network traffic that uses a standard web protocol." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:ArchiveFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive File" ;
    ns1:definition "An archive file is a file that is composed of one or more computer files along with metadata. Archive files are used to collect multiple data files together into a single file for easier portability and storage, or simply to compress files to use less storage space. Archive files often store directory structures, error detection and correction information, arbitrary comments, and sometimes use built-in encryption." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Archive_file> ;
    rdfs:subClassOf ns1:File .

ns1:BootSector a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Boot Sector" ;
    ns1:definition "A boot record [boot sector] is the sector of a persistent data storage device (e.g., hard disk, floppy disk, optical disc, etc.) which contains machine code to be loaded into random-access memory (RAM) and then executed by a computer system's built-in firmware (e.g., the BIOS, Das U-Boot, etc.)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Boot_sector> ;
    rdfs:subClassOf ns1:BootRecord .

ns1:CertificateAnalysis a ns1:CertificateAnalysis,
        ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate Analysis" ;
    ns1:analyzes ns1:CertificateFile ;
    ns1:d3fend-id "D3-CA" ;
    ns1:definition "Analyzing Public Key Infrastructure certificates to detect if they have been misconfigured or spoofed using both network traffic, certificate fields and third-party logs." ;
    ns1:kb-article """## How it works
Certificate Analysis ensures that the data elements of the certificate are current and anchored in a known trust model. Certificate authorities, revocation lists, and third-party secure logs are used in the analysis. Analysis includes detection of server impersonation, phishing domains, and forged certificates.

TLS certificates are designed to expire to ensure that the cryptographic keys are forced to be changed on a regular basis. The certificates in the trust path also expire and can cause a break in the trust chain. This means that even if a server certificate is updated correctly, intermediate certificates can expire and the trust chain is not maintained. This can cause services to become unavailable.""" ;
    ns1:kb-reference ns1:Reference-SecuringWebTransactions ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:DNSLookup a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Lookup" ;
    ns1:definition "A Domain Name System (DNS) lookup is a record returned from a DNS resolver after querying a DNS name server.  Typically considered an A or AAAA record, where a domain name is resolved to an IPv4 or IPv6 address, respectively." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Domain_Name_System>,
        <http://dbpedia.org/resource/List_of_DNS_record_types> ;
    rdfs:subClassOf ns1:DigitalArtifact,
        ns1:DigitalEvent .

ns1:Database a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database" ;
    ns1:definition "A database is an organized collection of data, generally stored and accessed electronically from a computer system. Where databases are more complex they are often developed using formal design and modeling techniques." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Database> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Database> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:DeveloperApplication a owl:Class ;
    rdfs:label "Developer Application" ;
    ns1:definition "An application used to develop computer software including applications used for software construction, analysis, testing, packaging, or management." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Application_development>,
        <http://dbpedia.org/resource/Application_software> ;
    rdfs:subClassOf ns1:UserApplication .

ns1:DomainUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain User Account" ;
    ns1:definition "A domain user account in Microsoft Windows (2000) defines that user's access to a logical group of network objects (computers, users, devices) that share the same Active Directory databases; that is, a user's access to a domain." ;
    rdfs:seeAlso <https://networkencyclopedia.com/global-user-account> ;
    rdfs:subClassOf ns1:UserAccount .

ns1:EncryptedCredential a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Encrypted Credential" ;
    ns1:definition "A credential that is encrypted." ;
    rdfs:subClassOf ns1:Credential .

ns1:FileSystemLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System Link" ;
    ns1:definition "A file system link associates a name with a file on a file system.  Most generally, this may be a direct reference (a hard link) or an indirect one (a soft link)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:LogicalLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logical Link" ;
    rdfs:subClassOf ns1:Link .

ns1:NetworkService a owl:Class ;
    rdfs:label "Network Service" ;
    ns1:definition "In computer networking, a network service is an application running at the network application layer and above, that provides data storage, manipulation, presentation, communication or other capability which is often implemented using a client-server or peer-to-peer architecture based on application layer network protocols. Clients and servers will often have a user interface, and sometimes other hardware associated with it." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_service> ;
    rdfs:subClassOf ns1:ServiceApplicationProcess .

ns1:OperatingSystemConfigurationComponent a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Configuration Component" ;
    ns1:definition "An component of the overall information necessary for the configuration of an operating system." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/03085025-n> ;
    rdfs:subClassOf ns1:OperatingSystemConfiguration ;
    ns2:altLabel "Operating System Configuration Information",
        "System Configuration" .

ns1:OperatingSystemProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Process" ;
    ns1:definition "An operating system process, or system process, is a process running to perform operating system functions." ;
    rdfs:seeAlso <http://people.scs.carleton.ca/~maheshwa/courses/300/l4/node7.html> ;
    rdfs:subClassOf ns1:Process ;
    ns2:altLabel "System Process" .

ns1:OutboundNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Network Traffic" ;
    ns1:definition "Outbound traffic is network traffic originating from a host of interest (client), to another host (server)." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:PersonalComputer a owl:Class ;
    rdfs:label "Personal Computer" ;
    ns1:definition "A personal computer (PC) is a multi-purpose computer whose size, capabilities, and price make it feasible for individual use. Personal computers are intended to be operated directly by an end user, rather than by a computer expert or technician. Unlike large, costly minicomputers and mainframes, time-sharing by many people at the same time is not used with personal computers. PCs have in practice become powerful enough that they may be shared by multiple users at any given time, though this is not common practice nor the primary purpose of a PC." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Personal_computer> ;
    rdfs:subClassOf ns1:ClientComputer .

ns1:Pointer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pointer" ;
    ns1:definition "In computer science, a pointer is a programming language object, whose value refers to (or \"points to\") another value stored elsewhere in the computer memory using its memory address. A pointer references a location in memory, and obtaining the value stored at that location is known as dereferencing the pointer. As an analogy, a page number in a book's index could be considered a pointer to the corresponding page; dereferencing such a pointer would be done by flipping to the page with the given page number." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Pointer_(computer_programming)> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:PrimaryStorage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Primary Storage" ;
    ns1:contains ns1:PageFrame,
        ns1:ProcessSegment ;
    ns1:definition "Primary memory of a computer is memory that is wired directly to the processor, consisting of RAM and possibly ROM.  These terms are used in contrast to mass storage devices and cache memory (although we may note that when a program accesses main memory, it is often actually interacting with a cache)." ;
    rdfs:isDefinedBy "https://www.memorymanagement.org/glossary/m.html#term-main-memory" ;
    rdfs:seeAlso "https://en.wikipedia.org/wiki/Computer_data_storage#Primary_storage" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:HardwareDevice,
        ns1:Storage .

ns1:Record a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Record" ;
    ns1:definition "In computer science, a record (also called struct or compound data) is a basic data structure. A record is a collection of fields, possibly of different data types, typically in fixed number and sequence . The fields of a record may also be called members, particularly in object-oriented programming. Fields may also be called elements, though these risk confusion with the elements of a collection. A tuple may or may not be considered a record, and vice versa, depending on conventions and the specific programming language." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Record_(computer_science)> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:RemovableMediaDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Removable Media Device" ;
    ns1:definition "A removable media device is a hardware device used for computer storage and that is designed to be inserted and removed from the system.  It is distinct from other removable media in that all the hardware required to read the data are built into the device.  So USB flash drives and external hard drives are removable media devices, whereas tapes and disks are not, as they require additional hardware to perform read/write operations." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Removable_media> ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:Storage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Storage" ;
    ns1:definition "Computer data storage, often called storage or memory, is a technology consisting of computer components and recording media used to retain digital data. It is a core function and fundamental component of computers. In the Von Neumann architecture, the CPU consists of two main parts: The control unit and the arithmetic / logic unit (ALU). The former controls the flow of data between the CPU and memory, while the latter performs arithmetic and logical operations on data." ;
    ns1:may-contain ns1:FileSystem ;
    ns1:synonym "Computer data storage",
        "Storage" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_data_storage> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:SystemServiceSoftware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Service Software" ;
    ns1:contains ns1:OperatingSystemFile ;
    ns1:definition "Software services provided as part of the operating system, typically accessed through system calls." ;
    rdfs:seeAlso <https://www.os-book.com/OS9/slide-dir/PPT-dir/ch2.ppt> ;
    rdfs:subClassOf [ ],
        ns1:Software .

ns1:T1037 a owl:Class ;
    rdfs:label "Boot or Logon Initialization Scripts" ;
    ns1:attack-id "T1037" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1098 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Account Manipulation" ;
    ns1:attack-id "T1098" ;
    ns1:modifies ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1134 a owl:Class ;
    rdfs:label "Access Token Manipulation" ;
    ns1:attack-id "T1134" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1505 a owl:Class ;
    rdfs:label "Server Software Component" ;
    ns1:attack-id "T1505" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1542 a owl:Class ;
    rdfs:label "Pre-OS Boot" ;
    ns1:attack-id "T1542" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1555 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials from Password Stores" ;
    ns1:accesses ns1:PasswordStore ;
    ns1:attack-id "T1555" ;
    ns1:may-access ns1:DatabaseFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1556 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Modify Authentication Process" ;
    ns1:attack-id "T1556" ;
    ns1:modifies ns1:AuthenticationService ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique,
        ns1:DefenseEvasionTechnique .

ns1:T1596 a owl:Class ;
    rdfs:label "Search Open Technical Databases" ;
    ns1:attack-id "T1596" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1608 a owl:Class ;
    rdfs:label "Stage Capabilities" ;
    ns1:attack-id "T1608" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:UserLogonInitResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Logon Init Resource" ;
    ns1:definition "A user logon initialization resource contains information used to configure a user's environment when a user logs into a system." ;
    rdfs:subClassOf ns1:LocalResource .

ns1:CredentialEviction a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Eviction" ;
    ns1:d3fend-id "D3-CE" ;
    ns1:definition "Credential Eviction techniques disable or remove compromised credentials from a computer network." ;
    ns1:enables ns1:Evict ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:DecoyEnvironment a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Environment" ;
    ns1:d3fend-id "D3-DE" ;
    ns1:definition "A Decoy Environment comprises hosts and networks for the purposes of deceiving an attacker." ;
    ns1:enables ns1:Deceive ;
    ns1:kb-article """## Technique Overview

Systems in a decoy environment are typically configured so that some detectable means of communication does not have any legitimate business purpose.  Any communication via these means should be logged and analyzed to find potential indicators of compromise for a possible past or future attack against other systems.""" ;
    ns1:manages ns1:DecoyArtifact ;
    ns1:synonym "Honeypot" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefensiveTechnique .

ns1:Dependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dependency" ;
    ns1:definition "A dependency is the relationship of relying on or being controlled by someone or something else.  This class reifies dependencies that correspond to the object property depends-on." ;
    ns1:dependent ns1:D3FENDThing ;
    ns1:provider ns1:D3FENDThing ;
    rdfs:seeAlso "http://wordnet-rdf.princeton.edu/id/14024833-n",
        "https://www.cisa.gov/what-are-dependencies" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalArtifact .

ns1:EndpointSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Endpoint Sensor" ;
    ns1:definition "A sensor application installed on a endpoint (platform) to collect information on platform components." ;
    rdfs:seeAlso "d3f:Platform" ;
    rdfs:subClassOf ns1:Sensor .

ns1:InputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Input Device" ;
    ns1:definition "In computing, an input device is a piece of equipment used to provide data and control signals to an information processing system such as a computer or information appliance. Examples of input devices include keyboards, mouse, scanners, digital cameras, joysticks, and microphones. Input devices can be categorized based on:" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Input_device> ;
    rdfs:subClassOf ns1:HardwareDevice,
        ns1:LocalResource .

ns1:LocalResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Resource" ;
    ns1:definition "In computing, a system resource, or simply resource, is any physical or virtual component of limited availability within a computer system. Every device connected to a computer system is a resource. Every internal system component is a resource. Virtual system resources include files (concretely file handles), network connections (concretely network sockets), and memory areas. Managing resources is referred to as resource management, and includes both preventing resource leaks (releasing a resource when a process has finished using it) and dealing with resource contention (when multiple processes wish to access a limited resource)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/System_resource> ;
    rdfs:subClassOf ns1:Resource ;
    ns2:altLabel "System Resource" .

ns1:Log a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Log" ;
    ns1:definition "A record of events in the order of their occurrence." ;
    rdfs:isDefinedBy <http://wordnet-rdf.princeton.edu/id/06515215-n> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Chronology> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "Chronology" .

ns1:MessageHardening a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Hardening" ;
    ns1:d3fend-id "D3-MH" ;
    ns1:definition "Email or Messaging Hardening includes measures taken to ensure the confidentiality and integrity of user to user computer messages." ;
    ns1:enables ns1:Harden ;
    ns1:synonym "Email Or Messaging Hardening" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Network a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network" ;
    ns1:definition "A network is a group of computers that use a set of common communication protocols over digital interconnections for the purpose of sharing resources located on or provided by the network nodes. The interconnections between nodes are formed from a broad spectrum of telecommunication network technologies, based on physically wired, optical, and wireless radio-frequency methods that may be arranged in a variety of network topologies." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/03826490-n> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "Computer Network" .

ns1:OperatingSystemConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Configuration File" ;
    ns1:definition "An operating system configuration file is a file used to configure the operating system." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Configuration_file>,
        "Configuration File",
        "Operating System" ;
    rdfs:subClassOf ns1:ConfigurationFile,
        ns1:OperatingSystemFile ;
    ns2:altLabel "System Configuration File" .

ns1:OutboundInternetDNSLookupTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet DNS Lookup Traffic" ;
    ns1:definition "Outbound internet DNS lookup traffic is network traffic using the DNS protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    ns1:may-contain ns1:DNSLookup ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:DNSNetworkTraffic,
        ns1:OutboundInternetNetworkTraffic,
        ns1:OutboundNetworkTraffic .

ns1:OutboundInternetWebTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Web Traffic" ;
    ns1:definition "Outbound internet web traffic is network traffic that is: (a) on an outgoing connection initiated from a host within a network to a host outside the network, and (b) using a standard web protocol." ;
    ns1:may-contain ns1:URL ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:OutboundInternetNetworkTraffic,
        ns1:WebNetworkTraffic .

ns1:Password a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password" ;
    ns1:definition "A password, sometimes called a passcode, is a memorized secret, typically a string of characters, usually used to confirm the identity of a user. Using the terminology of the NIST Digital Identity Guidelines, the secret is memorized by a party called the claimant while the party verifying the identity of the claimant is called the verifier. When the claimant successfully demonstrates knowledge of the password to the verifier through an established authentication protocol, the verifier is able to infer the claimant's identity." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Password> ;
    rdfs:subClassOf ns1:Credential ;
    ns2:altLabel "Passcode" .

ns1:PeripheralFirmware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Peripheral Firmware" ;
    ns1:definition "Firmware that is installed on computer peripheral devices." ;
    rdfs:seeAlso ns1:Firmware,
        <http://dbpedia.org/resource/Peripheral> ;
    rdfs:subClassOf ns1:Firmware .

ns1:PropertyListFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Property List File" ;
    ns1:definition "In the OS X, iOS, NeXTSTEP, and GNUstep programming frameworks, property list files are files that store serialized objects. Property list files use the filename extension .plist, and thus are often referred to as p-list files. Property list files are often used to store a user's settings. They are also used to store information about bundles and applications, a task served by the resource fork in the old Mac OS." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Property_list> ;
    rdfs:subClassOf ns1:ConfigurationFile ;
    ns2:altLabel "Plist File" .

ns1:SymbolicLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Symbolic Link" ;
    ns1:addresses ns1:File ;
    ns1:definition "A symbolic link (also symlink or soft link) is a term for any file that contains a reference to another file or directory in the form of an absolute or relative path and that affects pathname resolution." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Symbolic_link> ;
    rdfs:subClassOf [ ],
        ns1:File,
        ns1:FileSystemLink ;
    ns2:altLabel "Soft Link",
        "Softlink",
        "Symlink" .

ns1:T1021 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Services" ;
    ns1:attack-id "T1021" ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1027 a owl:Class ;
    rdfs:label "Obfuscated Files or Information" ;
    ns1:attack-id "T1027" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1070 a owl:Class ;
    rdfs:label "Indicator Removal on Host" ;
    ns1:attack-id "T1070" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1136 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Account" ;
    ns1:attack-id "T1136" ;
    ns1:creates ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1137 a owl:Class ;
    rdfs:label "Office Application Startup" ;
    ns1:attack-id "T1137" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1553 a owl:Class ;
    rdfs:label "Subvert Trust Controls" ;
    ns1:attack-id "T1553" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1583 a owl:Class ;
    rdfs:label "Acquire Infrastructure" ;
    ns1:attack-id "T1583" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1584 a owl:Class ;
    rdfs:label "Compromise Infrastructure" ;
    ns1:attack-id "T1584" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1588 a owl:Class ;
    rdfs:label "Obtain Capabilities" ;
    ns1:attack-id "T1588" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1590 a owl:Class ;
    rdfs:label "Gather Victim Network Information" ;
    ns1:attack-id "T1590" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:UserApplication a owl:Class ;
    rdfs:label "User Application" ;
    ns1:definition "A user application is executed for that an individual user on a user's personal computer or remotely by means of virtualization.  This is in contrast to service applications or enterprise software." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Enterprise_software> ;
    rdfs:subClassOf ns1:Application .

ns1:AccessControlConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Control Configuration" ;
    ns1:definition "Information about what access permissions are granted to particular users for particular objects" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Access-control_list> ;
    rdfs:subClassOf ns1:ConfigurationResource .

ns1:AuthenticationService a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Service" ;
    ns1:definition "An authentication service is a mechanism, analogous to the use of passwords on time-sharing systems, for the secure authentication of the identity of network clients by servers and vice versa, without presuming the operating system integrity of either (e.g., Kerberos)." ;
    rdfs:isDefinedBy <https://www.gartner.com/en/information-technology/glossary/authentication-service> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authentication> ;
    rdfs:subClassOf ns1:ServiceApplicationProcess .

ns1:Authorization a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authorization" ;
    ns1:authorizes ns1:NetworkResourceAccess ;
    ns1:definition "Authorization is the function of specifying access rights to resources related to information security and computer security in general and to access control in particular. More formally, \"to authorize\" is to define an access policy. For example, human resources staff is normally authorized to access employee records and this policy is usually formalized as access control rules in a computer system. During operation, the system uses the access control rules to decide whether access requests from (authenticated) consumers shall be approved (granted) or disapproved (rejected). Resources include individual files or an item's data, computer programs, computer devices and functionality provided by computer applications. Examples of consumers are computer users, computer program" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Authorization> ;
    rdfs:subClassOf [ ],
        ns1:UserAction .

ns1:CertificateFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate File" ;
    ns1:contains ns1:Certificate ;
    ns1:definition "A file containing a digital certificate. In cryptography, a public key certificate (also known as a digital certificate or identity certificate) is an electronic document used to prove the ownership of a public key. The certificate includes information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Public_key_certificate> ;
    rdfs:subClassOf [ ],
        ns1:File .

ns1:Directory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Directory" ;
    ns1:definition "In computing, a directory is a file system cataloging structure which contains references to other computer files, and possibly other directories. On many computers, directories are known as folders, or drawers to provide some relevancy to a workbench or the traditional office file cabinet." ;
    ns1:may-contain ns1:File ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Directory_(computing)> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:Identifier a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier" ;
    ns1:definition "An identifier is a name that identifies (that is, labels the identity of) either a unique object or a unique class of objects, where the \"object\" or class may be an idea, physical [countable] object (or class thereof), or physical [noncountable] substance (or class thereof). The abbreviation ID often refers to identity, identification (the process of identifying), or an identifier (that is, an instance of identification). An identifier may be a word, number, letter, symbol, or any combination of those." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Identifier> ;
    rdfs:subClassOf ns1:DigitalArtifact ;
    ns2:altLabel "ID" .

ns1:InboundInternetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Internet Network Traffic" ;
    ns1:definition "Inbound internet traffic is network traffic from a host outside a given network initiated on an incoming connection to a host inside that network." ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:InboundNetworkTraffic,
        ns1:InternetNetworkTraffic .

ns1:OutboundInternetEncryptedTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Encrypted Traffic" ;
    ns1:definition "Outbound internet encrypted traffic is encrypted network traffic on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:OutboundInternetNetworkTraffic .

ns1:ResourceDevelopmentTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Development Technique" ;
    ns1:enables ns1:Reconnaissance ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:T1036 a owl:Class ;
    rdfs:label "Masquerading" ;
    ns1:attack-id "T1036" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1053 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Task/Job Execution" ;
    ns1:attack-id "T1053" ;
    ns1:definition "The sub-techniques of this are specific software implementations of scheduling capabilities" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:modifies ns1:TaskSchedule ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1552 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Unsecured Credentials" ;
    ns1:accesses ns1:Credential ;
    ns1:attack-id "T1552" ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:Application a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application" ;
    ns1:definition "A program that gives a computer instructions that provide the user with tools to accomplish a task; \"he has tried several different word processing applications\".  Distinct from system software that is intrinsically part of the operating system.  An application can be made up of executable files, configuration files, shared libraries, etc." ;
    ns1:may-contain ns1:ApplicationConfiguration ;
    rdfs:seeAlso <http://dbpedia.org/resource/Application_software>,
        <http://wordnet-rdf.princeton.edu/id/06582286-n> ;
    rdfs:subClassOf [ ],
        ns1:Software .

ns1:DNSDenylisting a ns1:NetworkIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Denylisting" ;
    ns1:blocks ns1:DNSNetworkTraffic ;
    ns1:d3fend-id "D3-DNSDL" ;
    ns1:definition "Blocking DNS Network Traffic based on criteria such as IP address, domain name, or DNS query type." ;
    ns1:kb-article """## How it works
Rules are implemented that filter DNS queries using criteria such as:
- Client subnet
- Type of network protocol used in query
- Fully qualified domain name (FQDN) of record in the query
- DNS Server IP address that received the DNS request
- Type of DNS record being queried
- Time of day the query is received
- Size of the response

For example, a DNS policy can be created for blocking DNS queries for FQDNs that have been identified as unauthorized.

## Considerations
- Implementation considerations for DNS filtering policies to avoid over-blocking or under-blocking domains.
- Continuous maintenance of unauthorized domain lists is needed to keep up to date with possible site content changes.
- File sharing or content delivery networks may require other filtering techniques that are more fine-grained (URL blocking).
- Access to malicious websites or other network resources directly by IP instead of by DNS record, or after alteration of local DNS hosts file, may not result in DNS network traffic.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "DNS Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:DocumentFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Document File" ;
    ns1:definition "A document is a written, drawn, presented or recorded representation of thoughts. An electronic document file is usually used to describe a primarily textual file, along with its structure and design, such as fonts, colors and additional images." ;
    ns1:may-contain ns1:ExecutableScript ;
    rdfs:seeAlso <http://dbpedia.org/resource/Document> ;
    rdfs:subClassOf [ ],
        ns1:File .

ns1:ExecutableBinary a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Binary" ;
    ns1:contains ns1:ImageCodeSegment,
        ns1:ImageDataSegment ;
    ns1:definition "An executable binary contains machine code instructions for a physical CPU. D3FEND also considers byte code for a virtual machine to be binary code.  This is in contrast to executable scripts written in a scripting language." ;
    ns1:may-interpret ns1:ExecutableScript ;
    rdfs:seeAlso <http://dbpedia.org/resource/Executable> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:ExecutableFile .

ns1:FileAnalysis a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Analysis" ;
    ns1:analyzes ns1:File ;
    ns1:d3fend-id "D3-FA" ;
    ns1:definition "File Analysis is an analytic process to determine a file's status. For example: virus, trojan, benign, malicious, trusted, unauthorized, sensitive, etc." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview
Some techniques use file signatures or file metadata to compare against historical collections of malware. Files may also be compared against a source of ground truth such as cryptographic signatures. Examining files for potential malware using pattern matching against file contents/file behavior. Binary code may be dissembled and analyzed for predictive malware behavior, such as API call signatures. Analysis might occur within a protected environment such as a sandbox or live system.""" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefensiveTechnique .

ns1:IdentifierAnalysis a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier Analysis" ;
    ns1:analyzes ns1:Identifier ;
    ns1:d3fend-id "D3-ID" ;
    ns1:definition "Analyzing identifier artifacts such as IP address, domain names, or URL(I)s." ;
    ns1:enables ns1:Detect ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefensiveTechnique .

ns1:IdentifierReputationAnalysis a ns1:IdentifierAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier Reputation Analysis" ;
    ns1:d3fend-id "D3-IRA" ;
    ns1:definition "Analyzing the reputation of an identifier." ;
    ns1:kb-reference ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf ns1:IdentifierAnalysis .

ns1:NetworkMapping a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Mapping" ;
    ns1:d3fend-id "D3-NM" ;
    ns1:definition "Network mapping encompasses the techniques to identify and model the physical layer, network layer, and data exchange layers of the organization's network and their physical location, and determine allowed pathways through that network." ;
    ns1:display-order 3 ;
    ns1:enables ns1:Model ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:NetworkResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Resource" ;
    ns1:definition "In computing, a shared resource, or network share, is a computer resource made available from one host to other hosts on a computer network. It is a device or piece of information on a computer that can be remotely accessed from another computer, typically via a local area network or an enterprise intranet, transparently as if it were a resource in the local machine.Network sharing is made possible by inter-process communication over the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Shared_resource> ;
    rdfs:subClassOf ns1:RemoteResource ;
    ns2:altLabel "Shared Resource" .

ns1:OperationalActivityMapping a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operational Activity Mapping" ;
    ns1:d3fend-id "D3-OAM" ;
    ns1:definition "Identifying staff and organizational structure is part of operational activity mapping.  One inventories assets; people are *not* assets, but are resources.  Grasping operations and activities (missions) and mapping them to people is (notionally) last phase of modeling architecture.",
        "Operational activity mapping identifies activities of the organization and the organization's suborganizations, groups, roles, and individuals that carry out the activities and then establishes the dependencies of the activities on the systems and people that perform those activities." ;
    ns1:enables ns1:Model ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin ;
    ns1:synonym "Mission Mapping" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:PlatformMonitoring a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Platform Monitoring" ;
    ns1:d3fend-id "D3-PM" ;
    ns1:definition "Monitoring platform components such as operating systems software, hardware devices, or firmware." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """Platform monitoring consists of the analysis and monitoring of system level devices and low-level components, including hardware devices, to detect unauthorized modifications or suspicious activity.

Monitored platform components includes system files and embedded devices such as:

 * Kernel software modules
 * Boot process code and load logic
 * Operating system components and device files
 * System libraries and dynamically loaded files
 * Hardware device drivers
 * Embedded firmware devices""" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:SystemMapping a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Mapping" ;
    ns1:d3fend-id "D3-SYSM" ;
    ns1:definition "System mapping encompasses the techniques to identify the organization's systems, how they are configured and decomposed into subsystems and components, how they are dependent on one another, and where they are physically located." ;
    ns1:display-order 2 ;
    ns1:enables ns1:Model ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:T1003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS Credential Dumping" ;
    ns1:accesses ns1:Credential ;
    ns1:attack-id "T1003" ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1059 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command and Scripting Interpreter Execution" ;
    ns1:attack-id "T1059" ;
    ns1:executes ns1:ExecutableScript ;
    rdfs:subClassOf [ ],
        ns1:ExecutionTechnique .

ns1:ConfigurationResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Resource" ;
    ns1:definition "A resource used to configure a system including software and hardware." ;
    rdfs:subClassOf ns1:Resource .

ns1:EventLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Event Log" ;
    ns1:definition "Event logs record events taking place in the execution of a system in order to provide an audit trail that can be used to understand the activity of the system and to diagnose problems. They are essential to understand the activities of complex systems, particularly in the case of applications with little user interaction (such as server applications)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Log_file#Event_logs> ;
    rdfs:subClassOf ns1:Log .

ns1:ExecutionIsolation a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Execution Isolation" ;
    ns1:d3fend-id "D3-EI" ;
    ns1:definition "Execution Isolation techniques prevent application processes from accessing non-essential system resources, such as memory, devices, or files." ;
    ns1:enables ns1:Isolate ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:FileSystemMetadata a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System Metadata" ;
    ns1:definition "Metadata about the files and directories in a file system.  For example file name, file length, time modified, group and user ids, and other file attributes." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_system#Metadata> ;
    rdfs:subClassOf ns1:Metadata .

ns1:InternetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internet Network Traffic" ;
    ns1:definition "Internet network traffic is network traffic that crosses a boundary between networks. [This is the general sense of inter-networking; It may or may not cross to or from the Internet]" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:IntranetAdministrativeNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Administrative Network Traffic" ;
    ns1:definition "Intranet administrative network traffic is administrative network traffic that does not cross a given network's boundaries and uses a standard administrative protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:AdministrativeNetworkTraffic,
        ns1:IntranetNetworkTraffic .

ns1:MemoryBlock a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Block" ;
    ns1:contains ns1:MemoryWord ;
    ns1:definition "In computing (specifically data transmission and data storage), a block, sometimes called a physical record, is a sequence of bytes or bits, usually containing some whole number of records, having a maximum length; a block size. Data thus structured are said to be blocked. The process of putting data into blocks is called blocking, while deblocking is the process of extracting data from blocks. Blocked data is normally stored in a data buffer and read or written a whole block at a time." ;
    ns1:may-contain ns1:Record ;
    rdfs:isDefinedBy "https://dbpedia.org/page/Block_(data_storage)" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:MemoryExtent .

ns1:OperatingSystemFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System File" ;
    ns1:definition "An operating system file is a file that is part of, or used to store information about, the operating system itself." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Operating_system>,
        <http://dbpedia.org/resource/System_file> ;
    rdfs:subClassOf ns1:File .

ns1:ProcessCodeSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Code Segment" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "A process code segment, also known as a text segment or simply as text, is a portion of the program's virtual address space that contains executable instructions and corresponds to the loaded image code segment. Includes additional sections such as an import table." ;
    ns1:may-contain ns1:ProcessSegment ;
    rdfs:seeAlso ns1:ImageCodeSegment,
        <http://dbpedia.org/resource/Code_segment> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ProcessSegment ;
    ns2:altLabel "Process Text Segment" .

ns1:StackFrame a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Frame" ;
    ns1:definition "A machine-dependent and application-binary-dependent (ABI-dependent) data structure containing subroutine state information including the arguments passed into the routine, the return address back to the routine's caller, and space for local variables of the routine." ;
    ns1:may-contain ns1:Pointer,
        ns1:StackFrameCanary ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Call_stack#Structure> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Call_stack> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:StackComponent ;
    ns2:altLabel "Activation Frame",
        "Activation Record" .

ns1:T1562 a owl:Class ;
    rdfs:label "Impair Defenses" ;
    ns1:attack-id "T1562" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:NetworkIsolation a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Isolation" ;
    ns1:d3fend-id "D3-NI" ;
    ns1:definition "Network Isolation techniques prevent network hosts from accessing non-essential system network resources." ;
    ns1:enables ns1:Isolate ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:ReconnaissanceTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reconnaissance Technique" ;
    ns1:enables ns1:Reconnaissance ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:ServiceApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Application" ;
    ns1:definition "An application that provides a set of software functionalities so that multiple clients who can reuse the functionality, provided they are authorized for use of the service." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Server_(computing)>,
        <http://dbpedia.org/resource/Service_(systems_architecture)> ;
    rdfs:subClassOf ns1:Application .

ns1:T1564 a owl:Class ;
    rdfs:label "Hide Artifacts" ;
    ns1:attack-id "T1564" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:AccessToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Token" ;
    ns1:definition "In computer systems, an access token contains the security credentials for a login session and identifies the user, the user's groups, the user's privileges, and, in some cases, a particular application. Typically one may be asked to enter the access token (e.g. 40 random characters) rather than the usual password (it therefore should be kept secret just like a password)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Access_token> ;
    rdfs:subClassOf ns1:Credential ;
    ns2:altLabel "Ticket",
        "Token" .

ns1:ApplicationConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration" ;
    ns1:definition "Information used to configure the parameters and initial settings for an application." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/05739724-n> ;
    rdfs:subClassOf ns1:ConfigurationResource .

ns1:Email a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email" ;
    ns1:definition "An email, or email message, is a document that is sent between computer users across computer networks." ;
    ns1:may-contain ns1:File,
        ns1:URL ;
    rdfs:seeAlso <http://dbpedia.org/resource/Email> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DocumentFile .

ns1:ExfiltrationTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Technique" ;
    ns1:enables ns1:Exfiltration ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:URL a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "URL" ;
    ns1:addresses ns1:Resource ;
    ns1:definition "A Uniform Resource Locator (URL), commonly informally termed a web address (a term which is not defined identically) is a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it.A URL is a specific type of Uniform Resource Identifier (URI), although many people use the two terms interchangeably. A URL implies the means to access an indicated resource, which is not true of every URI. URLs occur most commonly to reference web pages (http), but are also used for file transfer (ftp), email (mailto), database access (JDBC), and many other applications." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Uniform_Resource_Locator> ;
    rdfs:subClassOf [ ],
        ns1:Identifier ;
    ns2:altLabel "Uniform Resource Locator" .

ns1:AssetInventory a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asset Inventory" ;
    ns1:d3fend-id "D3-AI" ;
    ns1:definition "Asset inventorying identifies and records the organization's assets and enriches each inventory item with knowledge about their vulnerabilities." ;
    ns1:display-order 1 ;
    ns1:enables ns1:Model ;
    ns1:synonym "Asset Discovery",
        "Asset Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:DecoyObject a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Object" ;
    ns1:d3fend-id "D3-DO" ;
    ns1:definition "A Decoy Object is created and deployed for the purposes of deceiving attackers." ;
    ns1:enables ns1:Deceive ;
    ns1:kb-article """## Technique Overview
Decoy objects are typically configured with detectable means of communication but do not have any legitimate business purpose. Any communication via or to these objects should be logged and analyzed to find potential indicators of compromise for a possible past or future attack against other systems.""" ;
    ns1:synonym "Lure" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Firmware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware" ;
    ns1:definition "In electronic systems and computing, firmware is a type of software that provides control, monitoring and data manipulation of engineered products and systems. Typical examples of devices containing firmware are embedded systems (such as traffic lights, consumer appliances, remote controls and digital watches), computers, computer peripherals, mobile phones, and digital cameras. The firmware contained in these devices provides the low-level control program for the device." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Firmware> ;
    rdfs:subClassOf ns1:Software .

ns1:InitialAccessTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Initial Access Technique" ;
    ns1:enables ns1:InitialAccess ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:NetworkNode a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Node" ;
    ns1:definition "In telecommunications networks, a node (Latin nodus, 'knot') is either a redistribution point or a communication endpoint. The definition of a node depends on the network and protocol layer referred to. A physical network node is an electronic device that is attached to a network, and is capable of creating, receiving, or transmitting information over a communications channel. A passive distribution point such as a distribution frame or patch panel is consequently not a node." ;
    ns1:runs ns1:OperatingSystem ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Node_(networking)> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:Resource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource" ;
    ns1:definition "In computing, a system resource, or simply resource, is any physical or virtual component of limited availability within a computer system. Every device connected to a computer system is a resource. Every internal system component is a resource. Virtual system resources include files (concretely file handles), network connections (concretely network sockets), and memory areas. Managing resources is referred to as resource management, and includes both preventing resource leaks (releasing a resource when a process has finished using it) and dealing with resource contention (when multiple processes wish to access a limited resource)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/System_resource> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:Server a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Server" ;
    ns1:definition "In computing, a server is a piece of computer hardware or software (computer program) that provides functionality for other programs or devices, called \"clients\". This architecture is called the client-server model. Servers can provide various functionalities, often called \"services\", such as sharing data or resources among multiple clients, or performing computation for a client. A single server can serve multiple clients, and a single client can use multiple servers. A client process may run on the same device or may connect over a network to a server on a different device. Typical servers are database servers, file servers, mail servers, print servers, web servers, game servers, and application servers." ;
    ns1:manages ns1:ServiceApplicationProcess ;
    ns1:runs ns1:ServiceApplication ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Server_(computing)> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Host,
        ns1:NetworkResource .

ns1:T1055 a owl:Class ;
    rdfs:label "Process Injection" ;
    ns1:attack-id "T1055" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1574 a owl:Class ;
    rdfs:label "Hijack Execution Flow" ;
    ns1:attack-id "T1574" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:Credential a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential" ;
    ns1:authenticates ns1:UserAccount ;
    ns1:definition "A credential is a physical/tangible object, a piece of knowledge, or a facet of a person's physical being that enables an individual access to a given physical facility or computer-based information system. Typically, credentials can be something a person knows (such as a number or PIN), something they have (such as an access badge), something they are (such as a biometric feature), something they do (measurable behavioral patterns) or some combination of these items. This is known as multi-factor authentication. The typical credential is an access card or key-fob, and newer software can also turn users' smartphones into access devices." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Access_control#Credential> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Access_control> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact .

ns1:IntranetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Network Traffic" ;
    ns1:definition "Intranet network traffic is network traffic traversing that does not traverse a given network's boundaries." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:T1218 a owl:Class ;
    rdfs:label "Signed Binary Proxy Execution" ;
    ns1:attack-id "T1218" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:ApplicationHardening a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Hardening" ;
    ns1:d3fend-id "D3-AH" ;
    ns1:definition "Application Hardening makes an executable application more resilient to a class of exploits which either introduce new code or execute unwanted existing code. These techniques may be applied at compile-time or on an application binary." ;
    ns1:enables ns1:Harden ;
    ns1:kb-article """## Technique Overview

Exploits may, for example, rely on knowledge of addresses in a process's memory, they may alter memory contents, and they may cause a program to use instructions in a way that they were not intended.  By, for example, including code that dynamically changes the memory address of data or code on each run, introducing logic to validating the memory contents before certain potentially dangerous flows are executed, or monitoring a program for unusual sequence of instructions, this makes it harder for an attacker to craft a working exploit.""" ;
    ns1:synonym "Process Hardening" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Authentication a ns1:Authentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication" ;
    ns1:authenticates ns1:User ;
    ns1:definition "A request-response comprising a user credential presentation to a system and a verification response." ;
    ns1:may-create ns1:IntranetNetworkTraffic ;
    ns1:originates-from ns1:PhysicalLocation ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authentication>,
        <http://wordnet-rdf.princeton.edu/id/00155053-n> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:UserAction .

ns1:OffensiveTechnique a owl:Class ;
    rdfs:label "Offensive Technique" ;
    ns1:display-baseurl "/offensive-technique/attack/" ;
    rdfs:isDefinedBy <https://attack.mitre.org/docs/ATTACK_Design_and_Philosophy_March_2020.pdf> ;
    rdfs:subClassOf [ ],
        ns1:ATTACKThing,
        ns1:Technique .

ns1:SystemConfigurationDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Database" ;
    ns1:contains ns1:SystemConfigurationDatabaseRecord ;
    ns1:definition "A database used to hold system configuration data." ;
    rdfs:subClassOf [ ],
        ns1:Database .

ns1:HardwareDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Device" ;
    ns1:definition "Hardware devices are the physical artifacts that constitute a network or computer system. Hardware devices are the physical parts or components of a computer, such as the monitor, keyboard, computer data storage, hard disk drive (HDD), graphic cards, sound cards, memory (RAM), motherboard, and so on, all of which are tangible physical objects. By contrast, software is instructions that can be stored and run by hardware. Hardware is directed by the software to execute any command or instruction. A combination of hardware and software forms a usable computing system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_hardware> ;
    rdfs:subClassOf ns1:DigitalArtifact,
        ns1:PhysicalArtifact .

ns1:T1546 a owl:Class ;
    rdfs:label "Event Triggered Execution" ;
    ns1:attack-id "T1546" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1547 a owl:Class ;
    rdfs:label "Boot or Logon Autostart Execution" ;
    ns1:attack-id "T1547" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:OperatingSystemMonitoring a ns1:PlatformMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Monitoring" ;
    ns1:d3fend-id "D3-OSM" ;
    ns1:definition "The operating system software, for D3FEND's purposes, includes the kernel and its process management functions, hardware drivers, initialization or boot logic. It also includes and other key system daemons and their configuration. The monitoring or analysis of these components for unauthorized activity constitute **Operating System Monitoring**." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview

"An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs." [1]

Operating System Monitoring Techniques have varied implementations including built-in kernel modules, third-party privileged system daemons, or even standard systems administration tools included with an operating system.

1. http://dbpedia.org/resource/Operating_system""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-UserActivityFromClearingEventLogs_MITRE ;
    rdfs:subClassOf ns1:PlatformMonitoring .

ns1:ProcessSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Segment" ;
    ns1:definition "Process segments are distinct partitions of the memory space of a running process.  Heap, data, code, and stack segments are examples of process segments." ;
    ns1:synonym "Process Memory" ;
    rdfs:subClassOf ns1:BinarySegment .

ns1:CollectionTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Collection Technique" ;
    ns1:enables ns1:Collection ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:ExecutableScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Script" ;
    ns1:definition "An executable script is written in a scripting language and interpreted at run time. This is in contrast with an executable binary, which contains machine code instructions for a physical CPU or byte code for a virtual machine." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Executable> ;
    rdfs:subClassOf ns1:ExecutableFile .

ns1:SharedLibraryFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shared Library File" ;
    ns1:definition "A shared library file is a file that is intended to be shared by executable files and further shared library (object) files. Modules used by a program are loaded from individual shared objects into memory at load time or runtime, rather than being copied by a linker when it creates a single monolithic executable file for the program" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Library_(computing)#Shared_libraries> ;
    rdfs:subClassOf ns1:ObjectFile ;
    ns2:altLabel "Shared Library",
        "Shared Object" .

ns1:CredentialHardening a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Hardening" ;
    ns1:d3fend-id "D3-CH" ;
    ns1:definition "Credential Hardening techniques modify system or network properties in order to protect system or network/domain credentials." ;
    ns1:enables ns1:Harden ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:ExecutableFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable File" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "In computing, executable code or an executable file or executable program, sometimes simply an executable, causes a computer \"to perform indicated tasks according to encoded instructions,\" as opposed to a data file that must be parsed by a program to be meaningful. These instructions are traditionally machine code instructions for a physical CPU. However, in a more general sense, a file containing instructions (such as bytecode) for a software interpreter may also be considered executable; even a scripting language source file may therefore be considered executable in this sense. The exact interpretation depends upon the use; while the term often refers only to machine code files, in the context of protection against computer viruses all files which cause potentially hazardous instruction" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Executable> ;
    rdfs:subClassOf [ ],
        ns1:File ;
    ns2:altLabel "Executable" .

ns1:ImpactTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Impact Technique" ;
    ns1:enables ns1:Impact ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:LateralMovementTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Lateral Movement Technique" ;
    ns1:enables ns1:LateralMovement ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:ProcessAnalysis a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Analysis" ;
    ns1:d3fend-id "D3-PA" ;
    ns1:definition "Process Analysis consists of observing a running application process and analyzing it to watch for certain behaviors or conditions which may indicate adversary activity. Analysis can occur inside of the process or through a third-party monitoring application. Examples include monitoring system and privileged calls, monitoring process initiation chains, and memory boundary allocations." ;
    ns1:enables ns1:Detect ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:PlatformHardening a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Platform Hardening" ;
    ns1:d3fend-id "D3-PH" ;
    ns1:definition """Hardening components of a Platform with the intention of making them more difficult to exploit.

Platforms includes components such as:
* BIOS UEFI Subsystems
* Hardware security devices such as Trusted Platform Modules
* Boot process logic or code
* Kernel software components""" ;
    ns1:enables ns1:Harden ;
    ns1:synonym "Endpoint Hardening",
        "System Hardening" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Software a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software" ;
    ns1:contains ns1:ExecutableFile ;
    ns1:definition "Computer software, or simply software, is that part of a computer system that consists of encoded information or computer instructions, in contrast to the physical hardware from which the system is built." ;
    ns1:instructs ns1:Process ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Software> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalArtifact .

ns1:OutboundInternetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Network Traffic" ;
    ns1:definition "Outbound internet network traffic is network traffic on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:InternetNetworkTraffic,
        ns1:OutboundNetworkTraffic .

ns1:Process a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process" ;
    ns1:contains ns1:ProcessImage ;
    ns1:definition "A process is an instance of a computer program that is being executed. It contains the program code and its current activity. Depending on the operating system (OS), a process may be made up of multiple threads of execution that execute instructions concurrently. A computer program is a passive collection of instructions, while a process is the actual execution of those instructions. Several processes may be associated with the same program; for example, opening up several instances of the same program often means more than one process is being executed." ;
    ns1:instructed-by ns1:Software ;
    ns1:may-execute ns1:Thread ;
    ns1:process-image-path ns1:ExecutableBinary ;
    ns1:process-user ns1:UserAccount ;
    ns1:uses ns1:Resource ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Process_(computing)> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:DigitalArtifact .

ns1:UserBehaviorAnalysis a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Behavior Analysis" ;
    ns1:d3fend-id "D3-UBA" ;
    ns1:definition "Analysis of user behavior and patterns for the purpose of detecting unauthorized user activity.",
        "User behavior analytics (\"UBA\") as defined by Gartner, is a cybersecurity process about detection of insider threats, targeted attacks, and financial fraud. UBA solutions look at patterns of human behavior, and then apply algorithms and statistical analysis to detect meaningful anomalies from those patterns-anomalies that indicate potential threats.' Instead of tracking devices or security events, UBA tracks a system's users. Big data platforms are increasing UBA functionality by allowing them to analyze petabytes worth of data to detect insider threats and advanced persistent threats." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview

Some techniques monitor patterns of human behavior and then apply algorithms and to identify patterns such as repeated login attempts from a single IP address or large file downloads, or abnormal accesses.

Other techniques may have explicit or rigid definitions of "bad behavior" which are then matched against instances in a computer network environment.""" ;
    ns1:synonym "Credential Monitoring",
        "UBA" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_behavior_analytics> ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:CommandAndControlTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command and Control Technique" ;
    ns1:enables ns1:CommandAndControl ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:SystemConfigurationDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Database Record" ;
    ns1:definition "A database record holding information used to configure the services, parameters, and initial settings for an operating system." ;
    rdfs:subClassOf ns1:ConfigurationDatabaseRecord,
        ns1:OperatingSystemConfigurationComponent .

ns1:UserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Account" ;
    ns1:definition "A user account allows a user to authenticate to a system and potentially to receive authorization to access resources provided by or connected to that system; however, authentication does not imply authorization. To log into an account, a user is typically required to authenticate oneself with a password or other credentials for the purposes of accounting, security, logging, and resource management." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_(computing)#User_account> ;
    rdfs:seeAlso <http://dbpedia.org/resource/User_account> ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:Subroutine a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Subroutine" ;
    ns1:definition "In different programming languages, a subroutine may be called a procedure, a function, a routine, a method, or a subprogram. The generic term callable unit is sometimes used." ;
    ns1:synonym "Method",
        "Software Function" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Subroutine> ;
    rdfs:subClassOf ns1:Software .

ns1:CredentialAccessTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Access Technique" ;
    ns1:accesses ns1:Credential ;
    ns1:enables ns1:CredentialAccess ;
    ns1:may-access ns1:PasswordFile ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:OffensiveTechnique .

ns1:CreateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Process" ;
    ns1:creates ns1:Process ;
    ns1:definition "A process spawn refers to a function that loads and executes a new child process.The current process may wait for the child to terminate or may continue to execute asynchronously. Creating a new subprocess requires enough memory in which both the child process and the current program can execute. There is a family of spawn functions in DOS, inherited by Microsoft Windows. There is also a different family of spawn functions in an optional extension of the POSIX standards.  Fork-exec is another technique combining two Unix system calls, which can effect a process spawn." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Fork%E2%80%93exec>,
        <http://dbpedia.org/resource/Spawn_(computing)>,
        <https://docs.microsoft.com/en-us/windows/win32/procthread/creating-processes> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall ;
    ns2:altLabel "Process Spawn" .

ns1:NetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic" ;
    ns1:definition "Network traffic or data traffic is the data, or alternatively the amount of data, moving across a network at a given point of time.  Network data in computer networks is mostly encapsulated in network packets, which provide the load in the network." ;
    ns1:may-contain ns1:DomainName ;
    ns1:originates-from ns1:PhysicalLocation ;
    rdfs:seeAlso <http://dbpedia.org/resource/Network_traffic> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalArtifact ;
    ns2:altLabel "Data Traffic" .

ns1:NetworkTrafficAnalysis a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Analysis" ;
    ns1:d3fend-id "D3-NTA" ;
    ns1:definition "Analyzing intercepted or summarized computer network traffic to detect unauthorized activity." ;
    ns1:enables ns1:Detect ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:DiscoveryTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Discovery Technique" ;
    ns1:enables ns1:Discovery ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:ExecutionTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Execution Technique" ;
    ns1:enables ns1:Execution ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:SystemCall a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Call" ;
    ns1:definition "A system call is the programmatic way in which a computer program requests a service from the kernel of the operating system it is executed on. This may include hardware-related services (for example, accessing a hard disk drive), creation and execution of new processes, and communication with integral kernel services such as process scheduling. System calls provide an essential interface between a process and the operating system." ;
    ns1:executes ns1:Subroutine ;
    ns1:synonym "API Monitoring" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/System_call> ;
    rdfs:subClassOf [ ],
        ns1:DigitalArtifact,
        ns1:DigitalEvent .

ns1:PrivilegeEscalationTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Privilege Escalation Technique" ;
    ns1:enables ns1:PrivilegeEscalation ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:DefensiveTechnique a ns1:Technique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Defensive Technique" ;
    ns1:definition "A method which makes a computer system more difficult to attack." ;
    ns1:display-baseurl "/technique/" ;
    ns1:synonym "Countermeasure Technique",
        "Defensive Capability Feature",
        "Technical Security Control" ;
    rdfs:seeAlso <https://csrc.nist.gov/glossary/term/security_control> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:CapabilityFeature,
        ns1:D3FENDThing,
        ns1:Technique .

ns1:File a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File" ;
    ns1:contains ns1:FileSection ;
    ns1:definition "A file maintained in computer-readable form." ;
    ns1:may-contain ns1:File,
        ns1:URL ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/06521201-n> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:Resource .

ns1:PersistenceTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Persistence Technique" ;
    ns1:enables ns1:Persistence ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .

ns1:DigitalArtifact a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Digital Artifact" ;
    ns1:definition "An information-bearing artifact (object) that is, or is encoded to be used with, a digital computer system. This concept is broad to include the literal instances of an artifact, or an implicit summarization of changes to or properties of other artifacts." ;
    ns1:display-baseurl "/dao/artifact/" ;
    ns1:synonym "Digital Asset" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Digital_artifactual_value>,
        <http://dbpedia.org/resource/Virtual_artifact>,
        "https://www.iso.org/obp/ui/#iso:std:iso-iec:19770:-1:ed-3:v1:en" ;
    rdfs:subClassOf ns1:Artifact,
        ns1:DigitalObject .

ns1:DefenseEvasionTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Defense Evasion Technique" ;
    ns1:enables ns1:DefenseEvasion ;
    rdfs:subClassOf [ ],
        ns1:OffensiveTechnique .
