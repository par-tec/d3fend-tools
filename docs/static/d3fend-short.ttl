@prefix ns1: <http://d3fend.mitre.org/ontologies/d3fend.owl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ns1:AccessMediator a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Mediator" ;
    ns1:implements ns1:AccessControlConfiguration ;
    ns1:mediates-access-to ns1:Resource ;
    ns1:used-by ns1:Agent ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:D3FENDCore,
        ns1:DigitalInformationBearer .

ns1:ActivityDependency a owl:Class ;
    rdfs:label "Activity Dependency" ;
    ns1:definition "An activity dependency is a dependency that indicates an activity has an activity or agent which relies on it in order to be functional." ;
    rdfs:subClassOf ns1:Dependency .

ns1:Alias a owl:Class ;
    rdfs:label "Alias" ;
    ns1:definition "In macOS, an alias is a small file that represents another object in a local, remote, or removable[1] file system and provides a dynamic link to it; the target object may be moved or renamed, and the alias will still link to it (unless the original file is recreated; such an alias is ambiguous and how it is resolved depends on the version of macOS)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Alias_(Mac_OS)> ;
    rdfs:subClassOf ns1:SlowSymbolicLink .

ns1:AnonymousPipe a owl:Class ;
    rdfs:label "Anonymous Pipe" ;
    ns1:definition "In computer science, an anonymous pipe is a simplex FIFO communication channel that may be used for one-way interprocess communication (IPC). An implementation is often integrated into the operating system's file IO subsystem. Typically a parent program opens anonymous pipes, and creates a new process that inherits the other ends of the pipes, or creates several new processes and arranges them in a pipeline." ;
    rdfs:isDefinedBy <https://en.wikipedia.org/wiki/Anonymous_pipe> ;
    rdfs:subClassOf ns1:Pipe .

ns1:ApplicationInstaller a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Installer" ;
    rdfs:subClassOf ns1:UserApplication .

ns1:ApplicationInventorySensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Inventory Sensor" ;
    ns1:definition "Collects information on applications on an endpoint." ;
    ns1:monitors ns1:Application ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:ApplicationLayerLink a owl:Class ;
    rdfs:label "Application Layer Link" ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:ApplicationProcessConfiguration a owl:Class ;
    rdfs:label "Application Process Configuration" ;
    ns1:definition "The current configuration of an application process, stored in memory. It may have been sourced from other types of application configurations, e.g. Application Configuration Files or Application Configuration Database Records." ;
    rdfs:subClassOf ns1:ApplicationConfiguration .

ns1:ApplicationShim a owl:Class ;
    rdfs:label "Application Shim" ;
    ns1:definition "An application shim adapts an application program to run on a version of a platform for which they were not originally created. Most commonly \"Application Shimming\" refers to use of The Windows Application Compatibility Toolkit (ACT) provides backward compatibility by simulating the behavior of older version of Windows." ;
    rdfs:seeAlso ns1:Shim,
        <http://dbpedia.org/resource/Shim_(computing)#Examples> ;
    rdfs:subClassOf ns1:Shim .

ns1:AssetInventoryAgent a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asset Inventory Agent" ;
    ns1:definition "An asset inventory agent is a software tool which captures and transmits information about the devices on a network, including their hostnames, MAC addresses, software they may be running, etc." ;
    rdfs:seeAlso <https://www.ninjaone.com/blog/how-to-do-an-it-asset-inventory> ;
    rdfs:subClassOf ns1:CollectorAgent .

ns1:AuthenticateUser a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authenticate User" ;
    ns1:authenticates ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:AuthenticationFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Function" ;
    ns1:authenticates ns1:UserAccount ;
    ns1:definition "Authenticates a user account by verifying a presented credential." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:AuthenticationServer a owl:Class ;
    rdfs:label "Authentication Server" ;
    ns1:definition "An authentication server provides a network service that applications use to authenticate the credentials, usually account names and passwords, of their users. When a client submits a valid set of credentials, it receives a cryptographic ticket that it can subsequently use to access various services. Major authentication algorithms include passwords, Kerberos, and public key encryption." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Authentication_server> ;
    rdfs:subClassOf ns1:Server .

ns1:AuthorizationLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authorization Log" ;
    ns1:definition "A log of authorization events." ;
    ns1:records ns1:NetworkResourceAccess ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authorization>,
        <http://wordnet-rdf.princeton.edu/id/00155053-n> ;
    rdfs:subClassOf [ ],
        ns1:EventLog .

ns1:BarcodeScannerInputDevice a owl:Class ;
    rdfs:label "Barcode Scanner Input Device" ;
    ns1:definition "A barcode reader (or barcode scanner) is an optical scanner that can read printed barcodes, decode the data contained in the barcode and send the data to a computer. Like a flatbed scanner, it consists of a light source, a lens and a light sensor translating for optical impulses into electrical signals. Additionally, nearly all barcode readers contain decoder circuitry that can analyze the barcode's image data provided by the sensor and sending the barcode's content to the scanner's output port." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Barcode_reader> ;
    rdfs:subClassOf ns1:ImageScannerInputDevice ;
    skos:altLabel "Barcode Reader" .

ns1:BusinessCommunicationPlatformClient a owl:Class ;
    rdfs:label "Business Communication Platform Client" ;
    ns1:definition "Client software to enable the process of sharing information between employees within and outside a company.  Business communication encompasses topics such as marketing, brand management, customer relations, consumer behavior, advertising, public relations, corporate communication, community engagement, reputation management, interpersonal communication, employee engagement, and event management. It is closely related to the fields of professional communication and technical communication." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Business_communication> ;
    rdfs:subClassOf ns1:CollaborativeSoftware .

ns1:CACertificateFile a owl:Class ;
    rdfs:label "CA Certificate File" ;
    ns1:definition "A file containing a digital certificate issued by a certificate authority (CA).  Certificate authorities store, issue, and sign digital certificates used as part of the public key infrastructure." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Certificate_authority>,
        <http://dbpedia.org/resource/Public_key_infrastructure> ;
    rdfs:subClassOf ns1:CertificateFile .

ns1:ChatroomClient a owl:Class ;
    rdfs:label "Chatroom Client" ;
    ns1:definition "Client software used to describe conduct any form of synchronous conferencing, occasionally even asynchronous conferencing. The term can thus mean any technology ranging from real-time online chat and online interaction with strangers (e.g., online forums) to fully immersive graphical social environments." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Chat_room> ;
    rdfs:subClassOf ns1:CollaborativeSoftware ;
    skos:altLabel "Chat Room Client" .

ns1:ChildProcess a owl:Class ;
    rdfs:label "Child Process" ;
    ns1:definition "A child process in computing is a process created by another process (the parent process). This technique pertains to multitasking operating systems, and is sometimes called a subprocess or traditionally a subtask. There are two major procedures for creating a child process: the fork system call (preferred in Unix-like systems and the POSIX standard) and the spawn (preferred in the modern (NT) kernel of Microsoft Windows, as well as in some historical operating systems)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Child_process> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Parent_process> ;
    rdfs:subClassOf ns1:Process .

ns1:CloudServiceSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Sensor" ;
    ns1:definition "Senses data from cloud service platforms. Including data from cloud service  authentications, authorizations, and other activities." ;
    ns1:monitors ns1:CloudServiceAuthentication,
        ns1:CloudServiceAuthorization ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CyberSensor .

ns1:ComputingServer a owl:Class ;
    rdfs:label "Computing Server" ;
    ns1:definition "A compute server is a system specifically designed to undertake large amounts of computation, usually but not necessarily in a client/server environment." ;
    rdfs:isDefinedBy <https://www.encyclopedia.com/computing/dictionaries-thesauruses-pictures-and-press-releases/compute-server> ;
    rdfs:subClassOf ns1:Server .

ns1:ConfigurationManagementDatabase a owl:Class ;
    rdfs:label "Configuration Management Database" ;
    ns1:definition "A database used to store configuration records throughout their lifecycle. The Configuration Management System (CMS) maintains one or more CMDBs, and each CMDB stores attributes of configuration items (CIs), and relationships with other CIs." ;
    rdfs:isDefinedBy <https://web.archive.org/web/20111201040529/http://www.best-management-practice.com/gempdf/itil_glossary_v3_1_24.pdf> ;
    rdfs:seeAlso <https://dbpedia.org/resource/Configuration_management_database>,
        <https://wiki.en.it-processmaps.com/index.php/ITIL_Glossary/_ITIL_Terms_C#Config_Management_Database_.28CMDB.29>,
        <https://www.dmtf.org/standards/cmdbf> ;
    rdfs:subClassOf ns1:ConfigurationDatabase .

ns1:ConsoleOutputFunction a owl:Class ;
    rdfs:label "Console Output Function" ;
    ns1:definition "Outputs characters to a computer console." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:ContainerBuildTool a owl:Class ;
    rdfs:label "Container Build Tool" ;
    ns1:definition "A software build tool that creates a container (e.g., Docker container) for deployment." ;
    rdfs:subClassOf ns1:SoftwarePackagingTool .

ns1:ContainerProcess a owl:Class ;
    rdfs:label "Container Process" ;
    ns1:definition "A running instance of a d3f:ContainerImage" ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/container> ;
    rdfs:subClassOf ns1:ApplicationProcess .

ns1:ContainerRuntime a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Container Runtime" ;
    ns1:definition "A software layer between d3f:ContainerProcess and d3f:Kernel which often mediates the invocation of d3f:SystemCall" ;
    ns1:runs ns1:ContainerImage ;
    rdfs:subClassOf [ ],
        ns1:ServiceApplication .

ns1:CopyMemoryFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Copy Memory Function" ;
    ns1:copies ns1:MemoryBlock ;
    ns1:definition "Copies a memory block from one location to another." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:DHCPServer a owl:Class ;
    rdfs:label "DHCP Server" ;
    ns1:definition "A Dynamic Host Configuration Protocol (DHCP) server is a type of server that assigns IP addresses to computers.  DHCP servers are used to assign IP addresses to computers and other devices automatically.  The DHCP server is responsible for assigning the unique IP address to each device." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Dynamic_Host_Configuration_Protocol> ;
    rdfs:subClassOf ns1:Server .

ns1:DNSServer a owl:Class ;
    rdfs:label "DNS Server" ;
    ns1:definition """A Domain Name System (DNS) name server is a kind of name server.  Domain names are one of the two principal namespaces of the Internet. The most important function of DNS servers is the translation (resolution) of human-memorable domain names and hostnames into the corresponding numeric Internet Protocol (IP) addresses, the second principal name space of the Internet which is used to identify and locate computer systems and resources on the Internet. (en).

More generally, a name server is a computer application that implements a network service for providing responses to queries against a directory service. It translates an often humanly meaningful, text-based identifier to a system-internal, often numeric identification or addressing component. This service is performed by the server in response to a service protocol request.""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Name_server> ;
    rdfs:subClassOf ns1:Server .

ns1:DataArtifactServer a owl:Class ;
    rdfs:label "Data Artifact Server" ;
    ns1:definition "A data artifact server provides access services to content in a content repository.  The content repository or content store is a database of digital content with an associated set of data management, search and access methods allowing application-independent access to the content, rather like a digital library, but with the ability to store and modify content in addition to searching and retrieving. The content repository acts as the storage engine for a larger application such as a content management system or a document management system, which adds a user interface on top of the repository's application programming interface." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Content_repository> ;
    rdfs:subClassOf ns1:ArtifactServer .

ns1:DataLinkLink a owl:Class ;
    rdfs:label "Data Link Link" ;
    ns1:definition "A communication link between two network devices connected directly at the physical layer and on the same network segment; i.e., an OSI Layer 2 link." ;
    ns1:synonym "Data Link Layer Link",
        "Layer-2 Link",
        "Link Layer Link" ;
    rdfs:seeAlso <https://dbpedia.org/resource/Link_layer> ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:DatabaseServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database Server" ;
    ns1:contains ns1:Database ;
    ns1:definition "A database server is a server which uses a database application that provides database services to other computer programs or to computers, as defined by the client-server model. Database management systems (DBMSs) frequently provide database-server functionality, and some database management systems (such as MySQL) rely exclusively on the client-server model for database access (while others e.g. SQLite are meant for using as an embedded database). For clarification, a database server is simply a server that maintains services related to clients via database applications." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Database_server> ;
    rdfs:subClassOf [ ],
        ns1:Server ;
    skos:altLabel "Network Database Resource" .

ns1:DeserializationFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Deserialization Function" ;
    ns1:definition "Function with an input of serialized data which deserializes that data, usually with data parsing methods." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:DesktopComputer a owl:Class ;
    rdfs:label "Desktop Computer" ;
    ns1:definition "A desktop computer is a personal computer designed for regular use at a single location on or near a desk or table due to its size and power requirements. The most common configuration has a case that houses the power supply, motherboard (a printed circuit board with a microprocessor as the central processing unit (CPU), memory, bus, and other electronic components, disk storage (usually one or more hard disk drives, solid state drives, optical disc drives, and in early models a floppy disk drive); a keyboard and mouse for input; and a computer monitor, speakers, and, often, a printer for output. The case may be oriented horizontally or vertically and placed either underneath, beside, or on top of a desk." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Desktop_computer> ;
    rdfs:subClassOf ns1:PersonalComputer .

ns1:DialUpModem a owl:Class ;
    rdfs:label "Dial Up Modem" ;
    ns1:definition "A dial-up modem transmits computer data over an ordinary switched telephone line that has not been designed for data use. This contrasts with leased line modems, which also operate over lines provided by a telephone company, but ones which are intended for data use and do not impose the same signaling constraints. The modulated data must fit the frequency constraints of a normal voice audio signal, and the modem must be able to perform the actions needed to connect a call through a telephone exchange, namely: picking up the line, dialing, understanding signals sent back by phone company equipment (dial tone, ringing, busy signal,) and on the far end of the call, the second modem in the connection must be able to recognize the incoming ring signal and answer the line." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem#Dial-up> ;
    rdfs:subClassOf ns1:Modem .

ns1:DifferentialVolumeSnapshot a owl:Class ;
    rdfs:label "Differential Volume Snapshot" ;
    ns1:definition "A differential volume snapshot is a point-in-time capture of the files and directories that were changed since the last full snapshot." ;
    rdfs:seeAlso <https://aws.amazon.com/compare/the-difference-between-incremental-differential-and-other-backups/> ;
    rdfs:subClassOf ns1:VolumeSnapshot .

ns1:DisplayDeviceDriver a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Display Device Driver" ;
    ns1:definition "A device driver for a display adapter." ;
    ns1:drives ns1:DisplayAdapter ;
    rdfs:seeAlso <http://dbpedia.org/resource/Device_driver>,
        <http://dbpedia.org/resource/Display_adapter> ;
    rdfs:subClassOf [ ],
        ns1:HardwareDriver .

ns1:DynamicAnalysisTool a owl:Class ;
    rdfs:label "Dynamic Analysis Tool" ;
    ns1:definition "Dynamic program analysis is the analysis of computer software that is performed by executing programs on a real or virtual processor." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Dynamic_program_analysis> ;
    rdfs:subClassOf ns1:CodeAnalyzer .

ns1:EmailAttachment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Attachment" ;
    ns1:attached-to ns1:Email ;
    ns1:definition "An email attachment is a computer file sent along with an email message. One or more files can be attached to any email message, and be sent along with it to the recipient. This is typically used as a simple method to share documents and images." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Email_attachment> ;
    rdfs:subClassOf [ ],
        ns1:DocumentFile .

ns1:Enclave a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Enclave" ;
    ns1:definition "Network enclaves consist of standalone assets that do not interact with other information systems or networks. A major difference between a DMZ or demilitarized zone and a network enclave is a DMZ allows inbound and outbound traffic access, where firewall boundaries are traversed. In an enclave, firewall boundaries are not traversed. Enclave protection tools can be used to provide protection within specific security domains. These mechanisms are installed as part of an Intranet to connect networks that have similar security requirements." ;
    ns1:may-contain ns1:LocalAreaNetwork ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_enclave> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Network Enclave" .

ns1:EncryptedPassword a owl:Class ;
    rdfs:label "Encrypted Password" ;
    rdfs:subClassOf ns1:EncryptedCredential,
        ns1:Password .

ns1:EvalFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Eval Function" ;
    ns1:definition "Takes inputs of strings and evaluations them as expressions." ;
    ns1:invokes ns1:Subroutine ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:ExceptionHandler a owl:Class ;
    rdfs:label "Exception Handler" ;
    ns1:definition "An exception handler is a code segment that processes an exception." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Exception_handling> ;
    rdfs:subClassOf ns1:Subroutine .

ns1:ExternalContentInclusionFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Content Inclusion Function" ;
    ns1:definition "External content, strings or data, are inserted into a local document (e.g. xml document) as if it were a native part of that document." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:FastSymbolicLink a owl:Class ;
    rdfs:label "Fast Symbolic Link" ;
    ns1:definition "Fast symbolic links, allow storage of the target path within the data structures used for storing file information on disk (e.g., within the inodes). This space normally stores a list of disk block addresses allocated to a file. Thus, symlinks with short target paths are accessed quickly. Systems with fast symlinks often fall back to using the original method if the target path exceeds the available inode space." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Symbolic_link#Storage_of_symbolic_links> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Symbolic_link#Storage_of_symbolic_links> ;
    rdfs:subClassOf ns1:SymbolicLink,
        ns1:UnixLink ;
    owl:disjointWith ns1:SlowSymbolicLink ;
    skos:altLabel "Fast Symlink" .

ns1:FilePathOpenFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Path Open Function" ;
    ns1:accesses ns1:File ;
    ns1:definition "Has an input of a file path, and opens a file handle for reading or writing." ;
    ns1:invokes ns1:OpenFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Subroutine .

ns1:FileServer a owl:Class ;
    rdfs:label "File Server" ;
    ns1:definition "The term server highlights the role of the machine in the traditional client-server scheme, where the clients are the workstations using the storage. A file server does not normally perform computational tasks or run programs on behalf of its client workstations. File servers are commonly found in schools and offices, where users use a local area network to connect their client computers." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/File_server> ;
    rdfs:subClassOf ns1:Server .

ns1:FileShareService a owl:Class ;
    rdfs:label "File Share Service" ;
    ns1:definition "A file sharing service (or file share service) provides the ability to share data across a network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_sharing> ;
    rdfs:subClassOf ns1:NetworkService .

ns1:FileSystemSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System Sensor" ;
    ns1:definition "Collects files and file metadata on an endpoint." ;
    ns1:monitors ns1:File ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:FingerPrintScannerInputDevice a owl:Class ;
    rdfs:label "Finger Print Scanner Input Device" ;
    ns1:definition "A fingerprint sensor is an electronic device used to capture a digital image of the fingerprint pattern. The captured image is called a live scan. This live scan is digitally processed to create a biometric template (a collection of extracted features) which is stored and used for matching. Many technologies have been used including optical, capacitive, RF, thermal, piezoresistive, ultrasonic, piezoelectric, and MEMS." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Fingerprint#Fingerprint_sensors> ;
    rdfs:subClassOf ns1:ImageScannerInputDevice ;
    skos:altLabel "Fingerprint Sensor" .

ns1:FirmwareSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Sensor" ;
    ns1:definition "Collects information on firmware installed on an Endpoint." ;
    ns1:monitors ns1:Firmware ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:First-stageBootLoader a owl:Class ;
    rdfs:label "First-stage Boot Loader" ;
    ns1:definition "The very first routine run in order to load the operating system." ;
    rdfs:subClassOf ns1:BootLoader .

ns1:FlashMemory a owl:Class ;
    rdfs:label "Flash Memory" ;
    ns1:definition "Flash memory is an electronic non-volatile computer memory storage medium that can be electrically erased and reprogrammed." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Flash_memory> ;
    rdfs:subClassOf ns1:SecondaryStorage .

ns1:ForwardProxyServer a owl:Class ;
    rdfs:label "Forward Proxy Server" ;
    ns1:definition "An forward (or open) proxy is a proxy server that is accessible by any Internet user. Generally, a proxy server only allows users within a network group (i.e. a closed proxy) to store and forward Internet services such as DNS or web pages to reduce and control the bandwidth used by the group. With an open proxy, however, any user on the Internet is able to use this forwarding service." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Open_proxy> ;
    rdfs:subClassOf ns1:ProxyServer .

ns1:FullVolumeSnapshot a owl:Class ;
    rdfs:label "Full Volume Snapshot" ;
    ns1:definition "A full volume snapshot is a point-in-time copy of the complete contents of a volume." ;
    rdfs:seeAlso <https://aws.amazon.com/compare/the-difference-between-incremental-differential-and-other-backups/> ;
    rdfs:subClassOf ns1:VolumeSnapshot .

ns1:GraphicsCardFirmware a owl:Class ;
    rdfs:label "Graphics Card Firmware" ;
    ns1:definition "Firmware that is installed on computer graphics card." ;
    rdfs:seeAlso ns1:Firmware ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    skos:altLabel "Video Card Firmware" .

ns1:GraphicsProcessingUnit a owl:Class ;
    rdfs:label "Graphics Processing Unit" ;
    ns1:synonym "GPU" ;
    rdfs:subClassOf ns1:Processor .

ns1:HardDiskFirmware a owl:Class ;
    rdfs:label "Hard Disk Firmware" ;
    ns1:definition "Firmware that is installed on a hard disk device." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Hard_disk_drive> ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    skos:altLabel "Hard Drive Firmware" .

ns1:HeapSegment a owl:Class ;
    rdfs:label "Heap Segment" ;
    ns1:definition "The heap segment (or free store) is a large pool of memory from which dynamic memory requests of a process are allocated and satisfied." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Memory_management#HEAP> ;
    rdfs:subClassOf ns1:ProcessSegment .

ns1:HostConfigurationSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host Configuration Sensor" ;
    ns1:definition "Collects the configuration data on an endpoint." ;
    ns1:monitors ns1:ApplicationConfiguration,
        ns1:OperatingSystemConfiguration ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:EndpointSensor .

ns1:HostGroup a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host Group" ;
    ns1:contains ns1:Host ;
    ns1:definition "A collection of Hosts used to allow operations such as access control to be applied to the entire group." ;
    rdfs:subClassOf [ ],
        ns1:AccessControlGroup .

ns1:Hostname a ns1:DomainName,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hostname" ;
    ns1:definition "In computer networking, a hostname (archaically nodename) is a label that is assigned to a device connected to a computer network and that is used to identify the device in various forms of electronic communication, such as the World Wide Web. Hostnames may be simple names consisting of a single word or phrase, or they may be structured." ;
    ns1:identifies ns1:Host ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hostname> ;
    rdfs:subClassOf [ ],
        ns1:Identifier ;
    skos:altLabel "Nodename" .

ns1:HumanInputDeviceFirmware a owl:Class ;
    rdfs:label "Human Input Device Firmware" ;
    ns1:definition "Firmware that is installed on an HCI device such as a mouse or keyboard." ;
    rdfs:seeAlso ns1:Firmware,
        <http://dbpedia.org/resource/Human_interface_device> ;
    rdfs:subClassOf ns1:PeripheralFirmware .

ns1:IPPhone a owl:Class ;
    rdfs:label "IP Phone" ;
    ns1:definition "A VoIP phone or IP phone uses voice over IP technologies for placing and transmitting telephone calls over an IP network, such as the Internet, instead of the traditional public switched telephone network (PSTN). Digital IP-based telephone service uses control protocols such as the Session Initiation Protocol (SIP), Skinny Client Control Protocol (SCCP) or various other proprietary protocols." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/VoIP_phone> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    skos:altLabel "VoIP Phone" .

ns1:ImpersonateUser a ns1:SystemCall,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Impersonate User" ;
    ns1:forges ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ImportLibraryFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Import Library Function" ;
    ns1:definition "Loads an external software library to enable the invocations of its methods." ;
    ns1:loads ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:InstantMessagingClient a owl:Class ;
    rdfs:label "Instant Messaging Client" ;
    ns1:definition "Client software used to engage in Instant Messaging, a type of online chat that offers real-time text transmission over the Internet. A LAN messenger operates in a similar way over a local area network. Short messages are typically transmitted between two parties, when each user chooses to complete a thought and select \"send\". Some IM applications can use push technology to provide real-time text, which transmits messages character by character, as they are composed. More advanced instant messaging can add file transfer, clickable hyperlinks, Voice over IP, or video chat." ;
    rdfs:isDefinedBy <https://dbpedia.org/wiki/Instant_messaging> ;
    rdfs:subClassOf ns1:CollaborativeSoftware .

ns1:IntegerRangeValidation a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Integer Range Validation" ;
    ns1:d3fend-id "D3-IRV" ;
    ns1:definition "Ensuring that an integer is within a valid range." ;
    ns1:hardens ns1:MathematicalFunction ;
    ns1:kb-article """## How it Works
Integer Range Validation can be done by programmatically checking the value of an integer before or after an operation to determine if the resulting value will be valid.
Checking the value of an integer to ensure it is in a valid range helps prevent integer overflow, wraparound, and logical errors.

## Considerations
* A valid range can be defined by language, data-type, or logical constraints.
* Take extra care when doing operations on integers that will result in a value close to the bounds of a valid range.
* Note: This resource should not be considered a definitive or exhaustive coding guideline.""" ;
    ns1:kb-reference ns1:Reference-IntegerRangeValidation_SEI ;
    rdfs:subClassOf [ ],
        ns1:SourceCodeHardening .

ns1:IntegrationTestExecutionTool a owl:Class ;
    rdfs:label "Integration Test Execution Tool" ;
    ns1:definition "An integration test execution tool automatically performs integration testing.  Integration testing (sometimes called integration and testing, abbreviated I&T) is the phase in software testing in which individual software modules are combined and tested as a group." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Integration_testing> ;
    rdfs:subClassOf ns1:TestExecutionTool .

ns1:InternetDNSLookup a owl:Class ;
    rdfs:label "Internet DNS Lookup" ;
    ns1:definition "An internet Domain Name System (DNS) lookup is a DNS lookup made from a host on a network that is resolved after querying a DNS name server hosted on a different network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:DNSLookup .

ns1:InternetFileTransferTraffic a owl:Class ;
    rdfs:label "Internet File Transfer Traffic" ;
    ns1:definition "Internet file transfer network traffic is network traffic related to file transfers between network nodes that crosses a boundary between networks. This includes only network traffic conforming to standard file transfer protocols, not custom transfer protocols." ;
    rdfs:subClassOf ns1:FileTransferNetworkTraffic,
        ns1:InternetNetworkTraffic .

ns1:InternetNetwork a owl:Class ;
    rdfs:label "Internet Network" ;
    ns1:definition "A network of multiple, connected networks. Internetworking is the practice of connecting a computer network with other networks through the use of gateways that provide a common method of routing information packets between the networks. The resulting system of interconnected networks are called an internetwork, or simply an internet. Internetworking is a combination of the words inter (\"between\") and networking; not internet-working or international-network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:Network ;
    skos:altLabel "Interconnected Network",
        "Internet",
        "Internetwork" .

ns1:InternetPersona a owl:Class ;
    rdfs:label "Internet Persona" ;
    ns1:definition "A social identity that an Internet user establishes in online communities and websites. It may also be an actively constructed presentation of oneself." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Online_identity> ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Online_identity> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "Online Identity",
        "Online Persona",
        "Online Personality" .

ns1:IntranetDNSLookup a owl:Class ;
    rdfs:label "Intranet DNS Lookup" ;
    ns1:definition "An Intranet Domain Name System (DNS) lookup is a DNS lookup made from a host on a network that is resolved after querying a DNS name server hosted on a that same network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:DNSLookup .

ns1:IntranetRPCNetworkTraffic a owl:Class ;
    rdfs:label "Intranet RPC Network Traffic" ;
    ns1:definition "Intranet RPC network traffic is network traffic that does not cross a given network's boundaries and uses a standard remote procedure call (e.g., RFC 1050) protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet>,
        <http://dbpedia.org/resource/Remote_procedure_call> ;
    rdfs:subClassOf ns1:IntranetNetworkTraffic,
        ns1:RPCNetworkTraffic .

ns1:IntrusionPreventionSystem a owl:Class ;
    rdfs:label "Intrusion Prevention System" ;
    ns1:definition """Intrusion prevention systems (IPS), also known as intrusion detection and prevention systems (IDPS), are network security appliances that monitor network or system activities for malicious activity. The main functions of intrusion prevention systems are to identify malicious activity, log information about this activity, report it and attempt to block or stop it.

Intrusion prevention systems are considered extensions of intrusion detection systems because they both monitor network traffic and/or system activities for malicious activity. The main differences are, unlike intrusion detection systems, intrusion prevention systems are placed in-line and are able to actively prevent or block intrusions that are detected. IPS can take such actions as sending an alarm, dropping detected malicious packets, resetting a connection or blocking traffic from the offending IP address. An IPS also can correct cyclic redundancy check (CRC) errors, defragment packet streams, mitigate TCP sequencing issues, and clean up unwanted transport and network layer options.""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Intrusion_detection_system#Intrusion_prevention> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intrusion_detection_system> ;
    rdfs:subClassOf ns1:IntrusionDetectionSystem ;
    skos:altLabel "IDPS",
        "IPS",
        "Intrusion Detection and Prevention System" .

ns1:JavaArchive a owl:Class ;
    rdfs:label "Java Archive" ;
    ns1:definition "A JAR (Java ARchive) is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file for distribution." ;
    rdfs:seeAlso <https://dbpedia.org/page/JAR_(file_format)> ;
    rdfs:subClassOf ns1:ArchiveFile,
        ns1:SoftwarePackage .

ns1:KerberosTicketGrantingServiceTicket a owl:Class ;
    rdfs:label "Kerberos Ticket Granting Service Ticket" ;
    ns1:definition "A Kerberos ticket-granting service (TGS) ticket is given in response to requesting a Kerberos TGS request." ;
    rdfs:subClassOf ns1:KerberosTicket ;
    skos:altLabel "TGS Ticket" .

ns1:KerberosTicketGrantingTicketAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kerberos Ticket Granting Ticket Account" ;
    ns1:creates ns1:KerberosTicketGrantingTicket ;
    ns1:definition "KRBTGT is an account used by Key Distribution Center (KDC) service to issue Ticket Granting Tickets (TGTs) as part of the Kerberos authentication protocol." ;
    ns1:synonym "krbtgt" ;
    rdfs:seeAlso <https://blog.quest.com/what-is-krbtgt-and-why-should-you-change-the-password/> ;
    rdfs:subClassOf [ ],
        ns1:ServiceAccount .

ns1:KernelAPISensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel API Sensor" ;
    ns1:definition "Monitors system calls (operating system api functions)." ;
    ns1:monitors ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:EndpointSensor .

ns1:KioskComputer a owl:Class ;
    rdfs:label "Kiosk Computer" ;
    ns1:definition "An interactive kiosk is a computer terminal featuring specialized hardware and software that provides access to information and applications for communication, commerce, entertainment, or education. Early interactive kiosks sometimes resembled telephone booths, but have been embraced by retail, food service and hospitality to improve customer service and streamline operations. Interactive kiosks are typically placed in high foot traffic settings such as shops, hotel lobbies or airports." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Interactive_kiosk> ;
    rdfs:subClassOf ns1:SharedComputer ;
    skos:altLabel "Interactive Kiosk" .

ns1:LaptopComputer a owl:Class ;
    rdfs:label "Laptop Computer" ;
    ns1:definition "A laptop computer (also laptop), is a small, portable personal computer (PC) with a \"clamshell\" form factor, typically having a thin LCD or LED computer screen mounted on the inside of the upper lid of the clamshell and an alphanumeric keyboard on the inside of the lower lid. The clamshell is opened up to use the computer. Laptops are folded shut for transportation, and thus are suitable for mobile use. Its name comes from lap, as it was deemed to be placed on a person's lap when being used. Although originally there was a distinction between laptops and notebooks (the former being bigger and heavier than the latter), as of 2014, there is often no longer any difference. Today, laptops are commonly used in a variety of settings, such as at work, in education, for playing games, web browsing" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Laptop> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    skos:altLabel "Laptop",
        "Notebook" .

ns1:LinuxClone a owl:Class ;
    rdfs:label "Linux Clone" ;
    ns1:definition "Creates a child process and provides more precise control over the data shared between the parent and child processes" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/clone.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateProcess .

ns1:LinuxClone3 a owl:Class ;
    rdfs:label "Linux Clone3" ;
    ns1:definition """Creates a child process and provides more precise control over the data shared between the parent and child processes.

Newer system call.""" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/clone3.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateProcess .

ns1:LinuxClone3ArgumentCLONE_THREAD a owl:Class ;
    rdfs:label "Linux Clone3 Argument CLONE_THREAD" ;
    ns1:definition "A flag parameter to the Clone3 syscall. If set, the child is placed in the same thread group as the calling process." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/clone3.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateThread .

ns1:LinuxCloneArgumentCLONE_THREAD a owl:Class ;
    rdfs:label "Linux Clone Argument CLONE_THREAD" ;
    ns1:definition "A flag parameter to the Clone syscall. If set, the child is placed in the same thread group as the calling process." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/clone.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateThread .

ns1:LinuxConnect a owl:Class ;
    rdfs:label "Linux Connect" ;
    ns1:definition "Initiate a connection on a socket." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/connect.2.html> ;
    rdfs:subClassOf ns1:OSAPIConnectSocket .

ns1:LinuxCreat a owl:Class ;
    rdfs:label "Linux Creat" ;
    ns1:definition "Equivalent to calling Linux Open with flags equal to O_CREAT|O_WRONLY|O_TRUNC." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/creat.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:LinuxDeleteModule a owl:Class ;
    rdfs:label "Linux Delete Module" ;
    ns1:definition "Attempts to remove the unused loadable module entry identified by name. If the module has an exit function, then that function is executed before unloading the module." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/delete_module.2.html> ;
    rdfs:subClassOf ns1:OSAPIUnloadModule .

ns1:LinuxExecve a owl:Class ;
    rdfs:label "Linux Execve" ;
    ns1:definition "Executes a program by replacing the calling process with a new program, with newly initialized stack, heap, and (initialized and uninitialized) data segments. The PID stays the same." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/execve.2.html> ;
    rdfs:subClassOf ns1:OSAPIExec .

ns1:LinuxExecveat a owl:Class ;
    rdfs:label "Linux Execveat" ;
    ns1:definition "Execute program relative to a directory file descriptor. Behavior is similar to Linux Execve." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/execveat.2.html> ;
    rdfs:subClassOf ns1:OSAPIExec .

ns1:LinuxFork a owl:Class ;
    rdfs:label "Linux Fork" ;
    ns1:definition "Creates a child process with unique PID but retains parent PID as Parent Process Identifier (PPID)" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/fork.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateProcess .

ns1:LinuxInitModule a owl:Class ;
    rdfs:label "Linux Init Module" ;
    ns1:definition "Loads an ELF image into kernel space, performs any necessary symbol relocations, initializes module parameters to values provided by the caller, and then runs the module's init function." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/init_module.2.html> ;
    rdfs:subClassOf ns1:OSAPILoadModule .

ns1:LinuxKillArgumentSIGKILL a owl:Class ;
    rdfs:label "Linux Kill Argument SIGKILL" ;
    ns1:definition "Send SIGKILL signal to a process." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/kill.2.html> ;
    rdfs:subClassOf ns1:OSAPITerminateProcess .

ns1:LinuxMmap a owl:Class ;
    rdfs:label "Linux Mmap" ;
    ns1:definition "Map files or devices into memory." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/mmap.2.html> ;
    rdfs:subClassOf ns1:OSAPIAllocateMemory .

ns1:LinuxMmap2 a owl:Class ;
    rdfs:label "Linux Mmap2" ;
    ns1:definition "Map files or devices into memory." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/mmap2.2.html> ;
    rdfs:subClassOf ns1:OSAPIAllocateMemory .

ns1:LinuxMunmap a owl:Class ;
    rdfs:label "Linux Munmap" ;
    ns1:definition "Unmap files or devices from memory." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/munmap.2.html> ;
    rdfs:subClassOf ns1:OSAPIFreeMemory .

ns1:LinuxOpenArgumentO_CREAT a owl:Class ;
    rdfs:label "Linux Open Argument O_CREAT" ;
    ns1:definition "Create a regular file." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/open.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:LinuxOpenArgumentO_RDONLY-O_WRONLY-O_RDWR a owl:Class ;
    rdfs:label "Linux Open Argument O_RDONLY, O_WRONLY, O_RDWR" ;
    ns1:definition "Opens a file specified by pathname." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/open.2.html> ;
    rdfs:subClassOf ns1:OSAPIOpenFile .

ns1:LinuxOpenAt2ArgumentO_CREAT a owl:Class ;
    rdfs:label "Linux OpenAt2 Argument O_CREAT" ;
    ns1:definition "Create a regular file. Extension of Linux Openat." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/openat2.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:LinuxOpenAt2ArgumentO_RDONLY-O_WRONLY-O_RDWR a owl:Class ;
    rdfs:label "Linux OpenAt2 Argument O_RDONLY, O_WRONLY, O_RDWR" ;
    ns1:definition "Extension of Linux Openat." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/openat2.2.html> ;
    rdfs:subClassOf ns1:OSAPIOpenFile .

ns1:LinuxOpenAtArgumentO_CREAT a owl:Class ;
    rdfs:label "Linux OpenAt Argument O_CREAT" ;
    ns1:definition "Create a regular file. Same functionality as Linux Open but slight differences in parameter." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/openat.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:LinuxOpenAtArgumentO_RDONLY-O_WRONLY-O_RDWR a owl:Class ;
    rdfs:label "Linux OpenAt Argument O_RDONLY, O_WRONLY, O_RDWR" ;
    ns1:definition "Same functionality as Linux Open but slight differences in parameter." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/openat.2.html> ;
    rdfs:subClassOf ns1:OSAPIOpenFile .

ns1:LinuxPauseProcess a owl:Class ;
    rdfs:label "Linux Pause Process" ;
    ns1:definition "Causes the calling process to sleep until a signal is delivered that either terminates the process or causes the invocation of a signal-catching function." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/pause.2.html> ;
    rdfs:subClassOf ns1:OSAPISuspendProcess .

ns1:LinuxPauseThread a owl:Class ;
    rdfs:label "Linux Pause Thread" ;
    ns1:definition "Causes the calling thread to sleep until a signal is delivered that either terminates the thread or causes the invocation of a signal-catching function." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/pause.2.html> ;
    rdfs:subClassOf ns1:OSAPISuspendThread .

ns1:LinuxPtraceArgumentPTRACEATTACH a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_ATTACH" ;
    ns1:definition "Attach to the process specified in pid, making it a tracee of the calling process." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPIAccessProcess .

ns1:LinuxPtraceArgumentPTRACECONT a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_CONT" ;
    ns1:definition "Restart the stopped tracee process." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPIResumeProcess .

ns1:LinuxPtraceArgumentPTRACEGETREGS a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_GETREGS" ;
    ns1:definition "Copy the tracee's general-purpose or floating-point registers, respectively, to the address data in the tracer." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPISaveRegisters .

ns1:LinuxPtraceArgumentPTRACEINTERRUPT a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_INTERRUPT" ;
    ns1:definition "Stops a tracee." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPISuspendProcess .

ns1:LinuxPtraceArgumentPTRACEPEEKTEXT a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_PEEKTEXT" ;
    ns1:definition "Read a word at the address addr in the tracee's memory, returning the word as the result of the ptrace() call." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPIReadMemory .

ns1:LinuxPtraceArgumentPTRACEPOKETEXT a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_POKETEXT" ;
    ns1:definition "Copy the word data to the address addr in the tracee's memory." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPIWriteMemory .

ns1:LinuxPtraceArgumentPTRACESETREGS a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_SETREGS" ;
    ns1:definition "Modify the tracee's general-purpose or floating-point registers, respectively, from the address data in the tracer." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPISetRegisters .

ns1:LinuxPtraceArgumentPTRACE_DETACH a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_DETACH" ;
    ns1:definition "Restart the stopped tracee as for PTRACE_CONT, but first detach from it." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPIResumeProcess .

ns1:LinuxPtraceArgumentPTRACE_TRACEME a owl:Class ;
    rdfs:label "Linux Ptrace Argument PTRACE_TRACEME" ;
    ns1:definition "Indicates that the process is to be traced by its parent." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/ptrace.2.html> ;
    rdfs:subClassOf ns1:OSAPITraceProcess .

ns1:LinuxRead a owl:Class ;
    rdfs:label "Linux Read" ;
    ns1:definition "Read from a file descriptor." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/read.2.html> ;
    rdfs:subClassOf ns1:OSAPIReadFile .

ns1:LinuxReadv a owl:Class ;
    rdfs:label "Linux Readv" ;
    ns1:definition "Read data into multiple buffers." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/readv.2.html> ;
    rdfs:subClassOf ns1:OSAPIReadFile .

ns1:LinuxRename a owl:Class ;
    rdfs:label "Linux Rename" ;
    ns1:definition "Change the name or location of a file" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/rename.2.html> ;
    rdfs:subClassOf ns1:OSAPIMoveFile .

ns1:LinuxRenameat a owl:Class ;
    rdfs:label "Linux Renameat" ;
    ns1:definition "Change the name or location of a file. Different parameter handling than Linux Rename." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/renameat.2.html> ;
    rdfs:subClassOf ns1:OSAPIMoveFile .

ns1:LinuxRenameat2 a owl:Class ;
    rdfs:label "Linux Renameat2" ;
    ns1:definition "Change the name or location of a file. Additional flags argument." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/renameat2.2.html> ;
    rdfs:subClassOf ns1:OSAPIMoveFile .

ns1:LinuxSocket a owl:Class ;
    rdfs:label "Linux Socket" ;
    ns1:definition "Create an endpoint for communication." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/socket.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateSocket .

ns1:LinuxSocketcallArgumentSYS_CONNECT a owl:Class ;
    rdfs:label "Linux Socketcall Argument SYS_CONNECT" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/socketcall.2.html> ;
    rdfs:subClassOf ns1:OSAPIConnectSocket .

ns1:LinuxSocketcallArgumentSYS_SOCKET a owl:Class ;
    rdfs:label "Linux Socketcall Argument SYS_SOCKET" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/socketcall.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateSocket .

ns1:LinuxTime a owl:Class ;
    rdfs:label "Linux Time" ;
    ns1:definition "Get time in seconds." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/time.2.html> ;
    rdfs:subClassOf ns1:OSAPIGetSystemTime .

ns1:LinuxUnlink a owl:Class ;
    rdfs:label "Linux Unlink" ;
    ns1:definition "Delete a name and possibly the file it refers to." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/unlink.2.html> ;
    rdfs:subClassOf ns1:OSAPIDeleteFile .

ns1:LinuxUnlinkat a owl:Class ;
    rdfs:label "Linux Unlinkat" ;
    ns1:definition "Delete a name and possibly the file it refers to. Different parameter handling than Linux Unlink" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/unlinkat.2.html> ;
    rdfs:subClassOf ns1:OSAPIDeleteFile .

ns1:LinuxVfork a owl:Class ;
    rdfs:label "Linux Vfork" ;
    ns1:definition "Create child process that temp suspends parent process until it terminates" ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/vfork.2.html> ;
    rdfs:subClassOf ns1:OSAPICreateProcess .

ns1:LinuxWrite a owl:Class ;
    rdfs:label "Linux Write" ;
    ns1:definition "Write to a file descriptor." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/write.2.html> ;
    rdfs:subClassOf ns1:OSAPIWriteFile .

ns1:LinuxWritev a owl:Class ;
    rdfs:label "Linux Writev" ;
    ns1:definition "Write data into multiple buffers." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/writev.2.html> ;
    rdfs:subClassOf ns1:OSAPIWriteFile .

ns1:Linux_Exit a owl:Class ;
    rdfs:label "Linux _Exit" ;
    ns1:definition "Terminate the calling process." ;
    rdfs:isDefinedBy <https://man7.org/linux/man-pages/man2/exit.2.html> ;
    rdfs:subClassOf ns1:OSAPITerminateProcess .

ns1:LocalAuthenticationService a owl:Class ;
    rdfs:label "Local Authentication Service" ;
    ns1:definition "A local authentication service running on a host can authenticate a user logged into just that local host computer." ;
    rdfs:subClassOf ns1:AuthenticationService,
        ns1:SystemServiceSoftware .

ns1:LocalAuthorizationService a owl:Class ;
    rdfs:label "Local Authorization Service" ;
    ns1:definition "A local authorization service running on a host can authorize a user logged into just that local host computer." ;
    rdfs:subClassOf ns1:AuthorizationService,
        ns1:SystemServiceSoftware .

ns1:LogMessageFunction a owl:Class ;
    rdfs:label "Log Message Function" ;
    ns1:definition "Produces an entry in a log." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:LogonUser a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logon User" ;
    ns1:authenticates ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:MACAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "MAC Address" ;
    ns1:definition "A media access control address (MAC address) is a unique identifier assigned to a network interface controller (NIC) for use as a network address in communications within a network segment." ;
    ns1:identifies ns1:NetworkInterfaceCard ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/MAC_address> ;
    rdfs:subClassOf [ ],
        ns1:Identifier .

ns1:MediaServer a owl:Class ;
    rdfs:label "Media Server" ;
    ns1:definition "A media server is a computer appliance or an application software that stores digital media (video, audio or images) and makes it available over a network. Media servers range from servers that provide video on demand to smaller personal computers or NAS (Network Attached Storage) for the home." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Media_server> ;
    rdfs:subClassOf ns1:Server .

ns1:MemoryAllocationFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Allocation Function" ;
    ns1:definition "Reserves memory for a running process to use." ;
    ns1:invokes ns1:AllocateMemory ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:MemoryBlockStartValidation a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Block Start Validation" ;
    ns1:d3fend-id "D3-MBSV" ;
    ns1:definition "Ensuring that a pointer accurately references the beginning of a designated memory block." ;
    ns1:hardens ns1:MemoryFreeFunction ;
    ns1:kb-article """## How it Works
Ensure that a pointer is referencing the beginning of the intended block before using.

## Considerations
Be careful with pointer arithmetic.""" ;
    ns1:kb-reference ns1:Reference-CManualPointerArithmetic_GNU ;
    rdfs:subClassOf [ ],
        ns1:PointerValidation .

ns1:MemoryPool a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Pool" ;
    ns1:contains ns1:MemoryBlock ;
    ns1:definition "Memory pools, also called fixed-size blocks allocation, is the use of pools for memory management… preallocating a number of memory blocks with the same size called the memory pool. The application can allocate, access, and free blocks represented by handles at run time." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Memory_pool> ;
    rdfs:subClassOf [ ],
        ns1:MemoryExtent .

ns1:Microcode a owl:Class ;
    rdfs:label "Microcode" ;
    ns1:definition "Microcode is a computer hardware technique that interposes a layer of organization between the CPU hardware and the programmer-visible instruction set architecture of the computer. As such, the microcode is a layer of hardware-level instructions that implement higher-level machine code instructions or internal state machine sequencing in many digital processing elements." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Microcode> ;
    rdfs:subClassOf ns1:Firmware .

ns1:MobilePhone a owl:Class ;
    rdfs:label "Mobile Phone" ;
    ns1:definition "A mobile phone, cellular phone, cell phone, cellphone or hand phone, sometimes shortened to simply mobile, cell or just phone, is a portable telephone that can make and receive calls over a radio frequency link while the user is moving within a telephone service area. The radio frequency link establishes a connection to the switching systems of a mobile phone operator, which provides access to the public switched telephone network (PSTN). Modern mobile telephone services use a cellular network architecture and, therefore, mobile telephones are called cellular telephones or cell phones in North America. In addition to telephony, digital mobile phones (2G) support a variety of other services, such as text messaging, MMS, email, Internet access, short-range wireless communications (infrared," ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Mobile_phone> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    skos:altLabel "Cellphone",
        "Cellular Phone" .

ns1:MouseInputDevice a owl:Class ;
    rdfs:label "Mouse Input Device" ;
    ns1:definition "A computer mouse (plural mice or mouses) is a hand-held pointing device that detects two-dimensional motion relative to a surface. This motion is typically translated into the motion of a pointer on a display, which allows a smooth control of the graphical user interface of a computer. In addition to moving a cursor, computer mice have one or more buttons to allow operations such as selection of a menu item on a display. Mice often also feature other elements, such as touch surfaces and scroll wheels, which enable additional control and dimensional input." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_mouse> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Pointing_device> ;
    rdfs:subClassOf ns1:InputDevice ;
    skos:altLabel "Computer Mouse" .

ns1:MultimediaDocumentFile a owl:Class ;
    rdfs:label "Multimedia Document File" ;
    ns1:definition "Digital video files which often contain audio." ;
    rdfs:seeAlso <https://dbpedia.org/page/Multimedia> ;
    rdfs:subClassOf ns1:DocumentFile .

ns1:NTFSHardLink a owl:Class ;
    rdfs:label "NTFS Hard Link" ;
    ns1:definition "An NTFS hard link points to another file, and files share the same MFT entry (inode), in the same filesystem." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/NTFS_links> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:HardLink,
        ns1:NTFSLink .

ns1:NTFSJunctionPoint a owl:Class ;
    rdfs:label "NTFS Junction Point" ;
    ns1:definition "NTFS junction points are are similar to NTFS symlinks but are defined only for directories. Only accepts local absolute paths." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/NTFS_links> ;
    rdfs:subClassOf ns1:NTFSLink,
        ns1:SymbolicLink ;
    skos:altLabel "Junction Point" .

ns1:NTFSSymbolicLink a owl:Class ;
    rdfs:label "NTFS Symbolic Link" ;
    ns1:definition "An NTFS symbolic link records the path of another file that the links contents should show. Can accept relative paths. SMB networking (UNC path) and directory support added in NTFS 3.1." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/NTFS_links> ;
    rdfs:subClassOf ns1:NTFSLink,
        ns1:SymbolicLink ;
    skos:altLabel "NTFS Symlink" .

ns1:NamedPipe a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Named Pipe" ;
    ns1:definition "In computing, a named pipe (also known as a FIFO for its behavior) is an extension to the traditional pipe concept on Unix and Unix-like systems, and is one of the methods of inter-process communication (IPC). The concept is also found in OS/2 and Microsoft Windows, although the semantics differ substantially. A traditional pipe is 'unnamed' and lasts only as long as the process. A named pipe, however, can last as long as the system is up, beyond the life of the process. It can be deleted if no longer used. Usually a named pipe appears as a file, and generally processes attach to it for IPC." ;
    rdfs:isDefinedBy <https://dbpedia.org/resource/Named_pipe> ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Named_pipe> ;
    rdfs:subClassOf ns1:Pipe .

ns1:NetworkCardFirmware a owl:Class ;
    rdfs:label "Network Card Firmware" ;
    ns1:definition "Firmware that is installed on a network card (network interface controller)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Network_interface_controller> ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    skos:altLabel "Network Controller Firmware" .

ns1:NetworkDirectoryResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Directory Resource" ;
    ns1:contains ns1:Directory ;
    ns1:definition "A directory resource made available from one host to other hosts on a computer network." ;
    rdfs:subClassOf [ ],
        ns1:NetworkFileShareResource .

ns1:NetworkFlowSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Flow Sensor" ;
    ns1:definition "Monitors network traffic and produces summaries of data flows traversing the network." ;
    ns1:monitors ns1:NetworkFlow ;
    rdfs:subClassOf [ ],
        ns1:NetworkSensor .

ns1:NetworkLink a owl:Class ;
    rdfs:label "Network Link" ;
    ns1:definition "A network link is a link within the network layer, which is responsible for packet forwarding including routing through intermediate routers." ;
    ns1:synonym "Layer-3 Link",
        "Network Layer Link" ;
    rdfs:seeAlso <https://dbpedia.org/resource/Network_layer>,
        <https://www.techtarget.com/searchnetworking/definition/Network-layer> ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:NetworkPrinter a owl:Class ;
    rdfs:label "Network Printer" ;
    ns1:definition "In computing, a network printer is a device that can be accessed over a network which makes a persistent representation of graphics or text, usually on paper. While most output is human-readable, bar code printers are an example of an expanded use for printers. The different types of printers include 3D printer, inkjet printer, laser printer, thermal printer, etc.  Note that not all printers are networked and the digital information to be printed must be passed either by removable media or as directly connecting the printer to a computer (e.g., by USB.)" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Printer_(computing)> ;
    rdfs:subClassOf ns1:SharedComputer .

ns1:NetworkProtocolAnalyzer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Protocol Analyzer" ;
    ns1:definition "Monitors and parses network protocols to extract values from various network protocol layers." ;
    ns1:monitors ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:NetworkSensor .

ns1:NetworkScanner a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Scanner" ;
    ns1:definition "A network scanner is a computer program used to retrieve usernames and info on groups, shares, and services of networked computers. This type of program scans networks for vulnerabilities in the security of that network. If there is a vulnerability with the security of the network, it will send a report back to a hacker who may use this info to exploit that network glitch to gain entry to the network or for other malicious activities. Ethical hackers often also use the information to remove the glitches and strengthen their network." ;
    ns1:monitors ns1:Network ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Network_enumeration> ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Network_enumeration#Software> ;
    rdfs:subClassOf [ ],
        ns1:CyberSensor ;
    skos:altLabel "Network Enumerator" .

ns1:NetworkTimeServer a owl:Class ;
    rdfs:label "Network Time Server" ;
    ns1:definition "A network time server is a server computer that reads the actual time from a reference clock and distributes this information to its clients using a computer network. The time server may be a local network time server or an internet time server. The time server may also be a stand-alone hardware device. It can use NTP (RFC5905) or other protocols." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Time_server> ;
    rdfs:subClassOf ns1:Server .

ns1:NetworkTrafficAnalysisSoftware a ns1:DigitalArtifact,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Analysis Software" ;
    ns1:definition "A packet analyzer, also known as packet sniffer, protocol analyzer, or network analyzer, is a computer program or computer hardware such as a packet capture appliance, that can intercept and log traffic that passes over a computer network or part of a network." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Packet_analyzer> ;
    rdfs:seeAlso <https://dbpedia.org/resource/Category:Network_analyzers> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    skos:altLabel "Network Sniffer" .

ns1:NullPointerChecking a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Null Pointer Checking" ;
    ns1:d3fend-id "D3-NPC" ;
    ns1:definition "Checking if a pointer is NULL." ;
    ns1:hardens ns1:MemoryFreeFunction,
        ns1:PointerDereferencingFunction ;
    ns1:kb-article """
## How it Works
Programmatically checking if a pointer is NULL before use.

## Considerations
* Pointers should be checked prior to use after they have, or may have been modified.
* Note that it may vary by circumstance whether the caller, or callee is responsible for checking if a pointer is NULL.
* Note: This resource should not be considered a definitive or exhaustive coding guideline.""" ;
    ns1:kb-reference ns1:Reference-NullPointerChecking_SEI,
        ns1:Reference-NullPointerDereference_CWE,
        ns1:Reference-PointerValidationFunction_SEI ;
    ns1:synonym "Nil Pointer Checking" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:PointerValidation .

ns1:OTController a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OT Controller" ;
    ns1:communicates-with ns1:OTIOModule ;
    ns1:controls ns1:OTActuator ;
    ns1:definition "An OT Controller is an industrial control device that automatically regulates one or more controlled variables in response to command inputs and real-time feedback signals." ;
    ns1:monitors ns1:OTSensor ;
    ns1:powered-by ns1:OTPowerSupply ;
    rdfs:isDefinedBy <https://csrc.nist.gov/glossary/term/controller> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:OTEmbeddedComputer .

ns1:OperatingSystemPackagingTool a owl:Class ;
    rdfs:label "Operating System Packaging Tool" ;
    ns1:definition "A software packaging tool oriented on building a software package for a particular operating system (e.g. rpmbuild.)" ;
    rdfs:subClassOf ns1:SoftwarePackagingTool .

ns1:OperationsCenterComputer a owl:Class ;
    rdfs:label "Operations Center Computer" ;
    ns1:definition "Mainframe computers or mainframes (colloquially referred to as \"big iron\") are computers used primarily by large organizations for critical applications; bulk data processing, such as census, industry and consumer statistics, and enterprise resource planning; and transaction processing. They are larger and have more processing power than some other classes of computers: minicomputers, servers, workstations, and personal computers." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Mainframe_computer> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Time-sharing> ;
    rdfs:subClassOf ns1:SharedComputer ;
    skos:altLabel "Mainframe" .

ns1:OpticalDiscImage a owl:Class ;
    rdfs:label "Optical Disc Image" ;
    ns1:definition "An optical disc image (or ISO image, from the ISO 9660 file system used with CD-ROM media) is a disk image that contains everything that would be written to an optical disc, disk sector by disc sector, including the optical disc file system." ;
    rdfs:isDefinedBy <https://en.wikipedia.org/wiki/Optical_disc_image> ;
    rdfs:seeAlso <https://dbpedia.org/resource/Optical_disc_image> ;
    rdfs:subClassOf ns1:DiskImage .

ns1:OpticalModem a owl:Class ;
    rdfs:label "Optical Modem" ;
    ns1:definition "A modem that connects to a fiber optic network is known as an optical network terminal (ONT) or optical network unit (ONU). These are commonly used in fiber to the home installations, installed inside or outside a house to convert the optical medium to a copper Ethernet interface, after which a router or gateway is often installed to perform authentication, routing, NAT, and other typical consumer internet functions, in addition to \"triple play\" features such as telephony and television service." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem#Optical_modem> ;
    rdfs:subClassOf ns1:Modem .

ns1:OrchestrationController a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Orchestration Controller" ;
    ns1:contains ns1:ContainerOrchestrationSoftware ;
    ns1:definition "An orchestration server provides orchestration services that automate the configuration, coordination, and management of computer systems and software." ;
    rdfs:subClassOf [ ],
        ns1:OrchestrationServer .

ns1:OrchestrationWorker a owl:Class ;
    rdfs:label "Orchestration Worker" ;
    ns1:definition "A d3f:Server which receives commands from a d3f:OrchestrationController to execute workloads." ;
    rdfs:seeAlso "d3f:OrchestrationController" ;
    rdfs:subClassOf ns1:OrchestrationServer .

ns1:OutboundInternetRPCTraffic a owl:Class ;
    rdfs:label "Outbound Internet RPC Traffic" ;
    ns1:definition "Outbound internet RPC traffic is RPC traffic that is: (a) on an outgoing connection initiated from a host within a network to a host outside the network, and (b) using a standard RPC protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking>,
        <http://dbpedia.org/resource/Remote_procedure_call> ;
    rdfs:subClassOf ns1:OutboundInternetNetworkTraffic,
        ns1:OutboundNetworkTraffic,
        ns1:RPCNetworkTraffic .

ns1:POSIXSymbolicLink a owl:Class ;
    rdfs:label "POSIX Symbolic Link" ;
    ns1:definition "A POSIX-compliant symbolic link.  These are often fast symbolic links, but need not be." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Symbolic_link> ;
    rdfs:subClassOf ns1:SymbolicLink,
        ns1:UnixLink .

ns1:PacketLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Packet Log" ;
    ns1:definition "A log of all the network packet data captured from a network by a network sensor (i.e., packet analyzer)," ;
    ns1:records ns1:NetworkSession ;
    rdfs:seeAlso <http://dbpedia.org/resource/Packet_analyzer> ;
    rdfs:subClassOf [ ],
        ns1:Log .

ns1:Page a owl:Class ;
    rdfs:label "Page" ;
    ns1:definition "A page, memory page, logical page, or virtual page is a fixed-length contiguous block of virtual memory, described by a single entry in the page table. It is the smallest unit of data for memory management in a virtual memory operating system." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Page_(computer_memory)> ;
    rdfs:subClassOf ns1:MemoryBlock .

ns1:ParentProcess a owl:Class ;
    rdfs:label "Parent Process" ;
    ns1:definition "In computing, a parent process is a process that has created one or more child processes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Parent_process> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Child_process> ;
    rdfs:subClassOf ns1:Process .

ns1:PasswordManager a owl:Class ;
    rdfs:label "Password Manager" ;
    ns1:definition "A password manager is a software application or hardware that helps a user store and organize passwords. Password managers usually store passwords encrypted, requiring the user to create a master password: a single, ideally very strong password which grants the user access to their entire password database. Some password managers store passwords on the user's computer (called offline password managers), whereas others store data in the provider's cloud (often called online password managers). However offline password managers also offer data storage in the user's own cloud accounts rather than the provider's cloud. While the core functionality of a password manager is to securely store large collections of passwords, many provide additional features such as form filling and password generation." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Password_manager> ;
    rdfs:subClassOf ns1:Application .

ns1:PeripheralHubFirmware a owl:Class ;
    rdfs:label "Peripheral Hub Firmware" ;
    ns1:definition "Firmware that is installed on peripheral hub device such as a USB or Firewire hub." ;
    rdfs:seeAlso <http://dbpedia.org/resource/USB_hub> ;
    rdfs:subClassOf ns1:PeripheralFirmware ;
    skos:altLabel "USB Hub Firmware" .

ns1:PrintServer a owl:Class ;
    rdfs:label "Print Server" ;
    ns1:definition "A print server, or printer server, is a device that connects printers to client computers over a network. It accepts print jobs from the computers and sends the jobs to the appropriate printers, queuing the jobs locally to accommodate the fact that work may arrive more quickly than the printer can actually handle." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Print_server> ;
    rdfs:subClassOf ns1:Server .

ns1:PrivilegedUserAccount a owl:Class ;
    rdfs:label "Privileged User Account" ;
    ns1:definition "A privileged account is a user account that has more privileges than ordinary users. Privileged accounts might, for example, be able to install or remove software, upgrade the operating system, or modify system or application configurations. They might also have access to files that are not normally accessible to standard users. Typical examples are root and administrator accounts. But there also service accounts, system accounts, etc. Privileged accounts are especially powerful, and should be monitored especially closely." ;
    rdfs:isDefinedBy <https://www.ssh.com/iam/user/privileged-account> ;
    rdfs:seeAlso <https://www.cyberark.com/resources/blog/7-types-of-privileged-accounts-service-accounts-and-more> ;
    rdfs:subClassOf ns1:UserAccount .

ns1:ProcessStartFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Start Function" ;
    ns1:definition "A function creates a new computer process, usually by invoking a create process system call." ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:PythonPackage a owl:Class ;
    rdfs:label "Python Package" ;
    ns1:definition "A Python package is an aggregation of many Python files - either in source code or in bytecode - and associated metadata and resources (text, images, etc.). Python packages can be distributed in different file formats." ;
    rdfs:seeAlso <https://packaging.python.org/> ;
    rdfs:subClassOf ns1:SoftwarePackage .

ns1:PythonScriptFile a owl:Class ;
    rdfs:label "Python Script File" ;
    rdfs:subClassOf ns1:ExecutableScript .

ns1:RAM a owl:Class ;
    rdfs:label "RAM" ;
    ns1:definition "Random-access memory (RAM) is a form of computer memory that can be read and changed in any order, typically used to store working data and machine code." ;
    ns1:synonym "Random-access Memory" ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Random-access_memory> ;
    rdfs:subClassOf ns1:PrimaryStorage .

ns1:RFReceiver a owl:Class ;
    rdfs:label "RF Receiver" ;
    rdfs:subClassOf ns1:RFNode .

ns1:RFTransceiver a owl:Class ;
    rdfs:label "RF Transceiver" ;
    rdfs:subClassOf ns1:RFNode .

ns1:ROM a owl:Class ;
    rdfs:label "ROM" ;
    ns1:definition "Read-only memory (ROM) is a type of non-volatile memory used in computers and other electronic devices. Data stored in ROM cannot be electronically modified after the manufacture of the memory device. Read-only memory is useful for storing software that is rarely changed during the life of the system, also known as firmware." ;
    ns1:synonym "Read-only Memory" ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Read-only_memory> ;
    rdfs:subClassOf ns1:PrimaryStorage .

ns1:RadioModem a owl:Class ;
    rdfs:label "Radio Modem" ;
    ns1:definition "A radio modem provides the means to send digital data wirelessly.  Radio modems are used to communicate by direct broadcast satellite, WiFi, WiMax, mobile phones, GPS, Bluetooth and NFC. Modern telecommunications and data networks also make extensive use of radio modems where long distance data links are required. Such systems are an important part of the PSTN, and are also in common use for high-speed computer network links to outlying areas where fiber optic is not economical." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem#Radio> ;
    rdfs:subClassOf ns1:Modem .

ns1:RawMemoryAccessFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Raw Memory Access Function" ;
    ns1:accesses ns1:MemoryBlock ;
    ns1:definition "A function which accesses raw memory, usually using memory addresses." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:ReferenceNullification a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reference Nullification" ;
    ns1:d3fend-id "D3-RN" ;
    ns1:definition "Invalidating all pointers that reference a specific memory block, ensuring that the block cannot be accessed or modified after deallocation." ;
    ns1:hardens ns1:MemoryFreeFunction ;
    ns1:kb-article """## How it Works
Nullifying references to memory blocks makes those blocks no longer accessible. This is critical to prevent use-after-free errors.

## Considerations
* If a memory block is freed, all other references to that block should be nullified.
* This is particularly relevant when manually managing memory.
* Note: This resource should not be considered a definitive or exhaustive coding guideline.""" ;
    ns1:kb-reference ns1:Reference-ReferenceNullification_SecureSoftwareInc ;
    rdfs:subClassOf [ ],
        ns1:SourceCodeHardening .

ns1:RemoteAuthenticationService a owl:Class ;
    rdfs:label "Remote Authentication Service" ;
    ns1:definition "A remote authentication service provides for the authentication of a user across a network (i.e., remotely)." ;
    rdfs:subClassOf ns1:AuthenticationService,
        ns1:NetworkService .

ns1:RemoteAuthorizationService a owl:Class ;
    rdfs:label "Remote Authorization Service" ;
    ns1:definition "A remote authorization service provides for the authorization of a user across a network (i.e., remotely)." ;
    rdfs:subClassOf ns1:AuthorizationService .

ns1:RemoteDatabaseQuery a owl:Class ;
    rdfs:label "Remote Database Query" ;
    ns1:definition "A remote query session enabling a user to make an SQL, SPARQL, or similar query over the network from one host to another." ;
    rdfs:subClassOf ns1:DatabaseQuery,
        ns1:RemoteCommand .

ns1:RemoteLoginSession a owl:Class ;
    rdfs:label "Remote Login Session" ;
    ns1:definition "A remote login session is a login session where a client has logged in from their local host machine to a server via a network." ;
    rdfs:subClassOf ns1:NetworkSession .

ns1:RemoteProcedureCall a owl:Class ;
    rdfs:label "Remote Procedure Call" ;
    ns1:definition "In distributed computing a remote procedure call (RPC) is when a computer program causes a procedure (subroutine) to execute in another address space (commonly on another computer on a shared network), which is coded as if it were a normal (local) procedure call, without the programmer explicitly coding the details for the remote interaction. That is, the programmer writes essentially the same code whether the subroutine is local to the executing program, or remote. This is a form of client-server interaction (caller is client, executor is server), typically implemented via a request-response message-passing system. The object-oriented programming analog is remote method invocation (RMI). The RPC model implies a level of location transparency." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Remote_procedure_call> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/dce_rpc> ;
    rdfs:subClassOf ns1:RemoteCommand .

ns1:RemoteTerminalSession a owl:Class ;
    rdfs:label "Remote Terminal Session" ;
    ns1:definition "A remote terminal session is a session that provides a user access from one host to another host via a terminal." ;
    rdfs:subClassOf ns1:NetworkSession .

ns1:ReverseProxyServer a owl:Class ;
    rdfs:label "Reverse Proxy Server" ;
    ns1:definition "In computer networks, a reverse proxy is a type of proxy server that retrieves resources on behalf of a client from one or more servers. These resources are then returned to the client, appearing as if they originated from the proxy server itself. Unlike a forward proxy, which is an intermediary for its associated clients to contact any server, a reverse proxy is an intermediary for its associated servers to be contacted by any client. In other words, a proxy acts on behalf of the client(s), while a reverse proxy acts on behalf of the server(s); a reverse proxy is usually an internal-facing proxy used as a 'front-end' to control and protect access to a server on a private network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Reverse_proxy> ;
    rdfs:subClassOf ns1:ProxyServer .

ns1:SavedInstructionPointer a owl:Class ;
    rdfs:label "Saved Instruction Pointer" ;
    ns1:definition "A saved instruction pointer points to the instruction that generated an exception (trap or fault)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Exception_handling> ;
    rdfs:subClassOf ns1:Pointer,
        ns1:StackComponent .

ns1:Second-stageBootLoader a owl:Class ;
    rdfs:label "Second-stage Boot Loader" ;
    ns1:definition "An optional, often feature rich,  second stage set of routines run in order to load the operating system." ;
    rdfs:subClassOf ns1:BootLoader .

ns1:SerializationFunction a owl:Class ;
    rdfs:label "Serialization Function" ;
    ns1:definition "A function which has an operation that serializes data." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:SetSystemConfigValue a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Set System Config Value" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regsetvalueexa> ;
    rdfs:subClassOf [ ],
        ns1:SystemConfigSystemCall .

ns1:ShadowStack a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shadow Stack" ;
    ns1:copy-of ns1:CallStack ;
    ns1:definition "A shadow stack is a mechanism for protecting a procedure's stored return address, such as from a stack buffer overflow. The shadow stack itself is a second, separate stack that \"shadows\" the program call stack. In the function prologue, a function stores its return address to both the call stack and the shadow stack. In the function epilogue, a function loads the return address from both the call stack and the shadow stack, and then compares them. If the two records of the return address differ, then an attack is detected." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Shadow_stack> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:SharedResourceAccessFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shared Resource Access Function" ;
    ns1:accesses ns1:Resource ;
    ns1:definition "A function which access a shared resource." ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:SoftwareArtifactServer a owl:Class ;
    rdfs:label "Software Artifact Server" ;
    ns1:definition "A software artifact server provides access to the software artifacts in a software repository. A software repository, or \"repo\" for short, is a storage location for software packages. Often a table of contents is stored, as well as metadata. Repositories group packages. Sometimes the grouping is for a programming language, such as CPAN for the Perl programming language, sometimes for an entire operating system, sometimes the license of the contents is the criteria. At client side, a package manager helps installing from and updating the repositories." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Artifact_(software_development)>,
        <http://dbpedia.org/resource/Software_repository> ;
    rdfs:subClassOf ns1:ArtifactServer .

ns1:SoftwareLibrary a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Library" ;
    ns1:contains ns1:SoftwareLibraryFile ;
    ns1:definition "A software library is a collection of software components that are used to build a software product." ;
    rdfs:seeAlso <https://dbpedia.org/page/Library_(computing)> ;
    rdfs:subClassOf [ ],
        ns1:Software .

ns1:SoftwarePatch a owl:Class ;
    rdfs:label "Software Patch" ;
    ns1:definition "A patch is a piece of software designed to update a computer program or its supporting data, to fix or improve it. This includes fixing security vulnerabilities and other bugs, with such patches usually called bugfixes or bug fixes, and improving the usability or performance. Although meant to fix problems, poorly designed patches can sometimes introduce new problems (see software regressions). In some special cases updates may knowingly break the functionality, for instance, by removing components for which the update provider is no longer licensed or disabling a device." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Patch_(computing)> ;
    rdfs:subClassOf ns1:Software ;
    skos:altLabel "Patch" .

ns1:SoftwareRepository a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Repository" ;
    ns1:contains ns1:SoftwarePackage ;
    ns1:definition "A software repository, or repo for short, is a storage location for software packages. Often a table of contents is also stored, along with metadata. A software repository is typically managed by source or version control, or repository managers. Package managers allow automatically installing and updating repositories, sometimes called 'packages'." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Software_repository> ;
    rdfs:subClassOf [ ],
        ns1:Repository ;
    skos:altLabel "Package Repository" .

ns1:SourceCodeAnalyzerTool a owl:Class ;
    rdfs:label "Source Code Analyzer Tool" ;
    ns1:definition "A source code analyzer tool is a static analysis tool that operates specifically on source code, but not object code." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Static_program_analysis> ;
    rdfs:subClassOf ns1:StaticAnalysisTool .

ns1:StackSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Segment" ;
    ns1:contains ns1:StackFrame ;
    ns1:definition "The stack segment contains the program stack, a last-in-first-out structure, typically allocated in the higher parts of memory for the process." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Call_stack>,
        <http://dbpedia.org/resource/Data_segment#Stack> ;
    rdfs:subClassOf [ ],
        ns1:ProcessSegment .

ns1:StartupDirectory a owl:Class ;
    rdfs:label "Startup Directory" ;
    ns1:definition "A startup directory is a directory containing executable files or links to executable files which are run when a user logs in or when a system component or service is started." ;
    rdfs:subClassOf ns1:Directory,
        ns1:LocalResource .

ns1:StringFormatFunction a owl:Class ;
    rdfs:label "String Format Function" ;
    ns1:definition "A function which creates a new string based on a format specification and correspondingi specified values." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:Switch a owl:Class ;
    rdfs:label "Switch" ;
    ns1:definition "A network switch (also called switching hub, bridging hub, and by the IEEE MAC bridge) is networking hardware that connects devices on a computer network by using packet switching to receive and forward data to the destination device. A network switch is a multiport network bridge that uses MAC addresses to forward data at the data link layer (layer 2) of the OSI model. Some switches can also forward data at the network layer (layer 3) by additionally incorporating routing functionality. Such switches are commonly known as layer-3 switches or multilayer switches." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_switch> ;
    rdfs:subClassOf ns1:ComputerNetworkNode ;
    skos:altLabel "Bridging Hub",
        "MAC Bridge",
        "Network Switch",
        "Switching Hub" .

ns1:SymmetricKey a owl:Class ;
    rdfs:label "Symmetric Key" ;
    ns1:definition "A symmetric key is a single key used for both encryption and decryption and used with a symmetric-key algorithm. Symmetric-key algorithms are algorithms for cryptography that use the same cryptographic keys for both encryption of plaintext and decryption of ciphertext. The keys may be identical or there may be a simple transformation to go between the two keys. The keys, in practice, represent a shared secret between two or more parties that can be used to maintain a private information link. This requirement that both parties have access to the secret key is one of the main drawbacks of symmetric key encryption, in comparison to public-key encrytption (also known as asymmetric key encryption)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Symmetric-key_algorithm> ;
    rdfs:subClassOf ns1:CryptographicKey .

ns1:SystemInitProcess a owl:Class ;
    rdfs:label "System Init Process" ;
    ns1:definition "A system initialization process is a process that executes to initialize (boot) an operating system." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Booting>,
        <http://dbpedia.org/resource/Linux_startup_process>,
        <http://dbpedia.org/resource/Windows_startup_process> ;
    rdfs:subClassOf ns1:OperatingSystemProcess ;
    skos:altLabel "System Initialization Process",
        "System Startup Process" .

ns1:SystemUtilizationRecord a owl:Class ;
    rdfs:label "System Utilization Record" ;
    ns1:definition "A system utilization record is a record for the tracking of resource utilization e.g. CPU, Disk, Network, Memory Bandwidth, GPU, or other resources for a given time period." ;
    rdfs:subClassOf ns1:Record .

ns1:T1001.001 a owl:Class ;
    rdfs:label "Junk Data" ;
    ns1:attack-id "T1001.001" ;
    ns1:definition "Adversaries may add junk data to protocols used for command and control to make detection more difficult.(Citation: FireEye SUNBURST Backdoor December 2020) By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters." ;
    rdfs:subClassOf ns1:T1001 .

ns1:T1001.002 a owl:Class ;
    rdfs:label "Steganography" ;
    ns1:attack-id "T1001.002" ;
    ns1:definition "Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control." ;
    rdfs:subClassOf ns1:T1001 .

ns1:T1001.003 a owl:Class ;
    rdfs:label "Protocol or Service Impersonation" ;
    ns1:attack-id "T1001.003" ;
    ns1:definition "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic." ;
    rdfs:subClassOf ns1:T1001 .

ns1:T1002 a owl:Class ;
    rdfs:label "Data Compressed" ;
    ns1:attack-id "T1002" ;
    ns1:definition "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network. The compression is done separately from the exfiltration channel and is performed using a custom program or algorithm, or a more common compression library or utility such as 7zip, RAR, ZIP, or zlib." ;
    rdfs:comment "This technique has been revoked by T1560" ;
    rdfs:seeAlso "T1560" ;
    rdfs:subClassOf ns1:ExfiltrationTechnique ;
    owl:deprecated true .

ns1:T1003.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LSASS Memory" ;
    ns1:accesses ns1:AuthenticationService,
        ns1:Process ;
    ns1:attack-id "T1003.001" ;
    ns1:definition "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)." ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Account Manager" ;
    ns1:attack-id "T1003.002" ;
    ns1:definition "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access." ;
    ns1:may-access ns1:AuthenticationService,
        ns1:Process,
        ns1:SystemPasswordDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "NTDS" ;
    ns1:accesses ns1:EncryptedCredential ;
    ns1:attack-id "T1003.003" ;
    ns1:definition "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\NTDS\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)" ;
    rdfs:subClassOf [ ],
        ns1:T1003 .

ns1:T1003.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LSA Secrets" ;
    ns1:attack-id "T1003.004" ;
    ns1:definition "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)" ;
    ns1:may-access ns1:Process,
        ns1:SystemPasswordDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cached Domain Credentials" ;
    ns1:accesses ns1:EncryptedCredential ;
    ns1:attack-id "T1003.005" ;
    ns1:definition "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)" ;
    ns1:may-modify ns1:Log ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DCSync" ;
    ns1:attack-id "T1003.006" ;
    ns1:definition "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync." ;
    ns1:may-modify ns1:EventLog ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Proc Filesystem" ;
    ns1:accesses ns1:OperatingSystemFile,
        ns1:ProcessImage ;
    ns1:attack-id "T1003.007" ;
    ns1:definition "Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process’s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process’s virtual address space.(Citation: Picus Labs Proc cump 2022)(Citation: baeldung Linux proc map 2022)" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1003.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "/etc/passwd and /etc/shadow" ;
    ns1:accesses ns1:EncryptedCredential,
        ns1:PasswordFile ;
    ns1:attack-id "T1003.008" ;
    ns1:definition "Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1003 .

ns1:T1004 a owl:Class ;
    rdfs:label "Winlogon Helper DLL" ;
    ns1:attack-id "T1004" ;
    ns1:definition "Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\Software\\[Wow6432Node\\]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> and <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> are used to manage additional helper programs and functionalities that support Winlogon. (Citation: Cylance Reg Persistence Sept 2013)" ;
    rdfs:comment "This technique has been revoked by T1547.004" ;
    rdfs:seeAlso "T1547.004" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Local System" ;
    ns1:accesses ns1:File,
        ns1:LocalResource ;
    ns1:attack-id "T1005" ;
    ns1:definition "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration." ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CollectionTechnique .

ns1:T1006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Direct Volume Access" ;
    ns1:accesses ns1:Volume ;
    ns1:attack-id "T1006" ;
    ns1:definition "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)" ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Service Discovery" ;
    ns1:attack-id "T1007" ;
    ns1:definition "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>." ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetRunningProcesses ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Fallback Channels" ;
    ns1:attack-id "T1008" ;
    ns1:definition "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1009 a owl:Class ;
    rdfs:label "Binary Padding" ;
    ns1:attack-id "T1009" ;
    ns1:definition "Adversaries can use binary padding to add junk data and change the on-disk representation of malware without affecting the functionality or behavior of the binary. This will often increase the size of the binary beyond what some security tools are capable of handling due to file size limitations." ;
    rdfs:comment "This technique has been revoked by T1027.001" ;
    rdfs:seeAlso "T1027.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Window Discovery" ;
    ns1:attack-id "T1010" ;
    ns1:definition "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used.(Citation: Prevailion DarkWatchman 2021) For example, information about application windows could be used identify potential data to collect as well as identifying security tooling ([Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) to evade.(Citation: ESET Grandoreiro April 2020)" ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetOpenWindows ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1011.001 a owl:Class ;
    rdfs:label "Exfiltration Over Bluetooth" ;
    ns1:attack-id "T1011.001" ;
    ns1:definition "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel." ;
    rdfs:subClassOf ns1:T1011 .

ns1:T1012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Query Registry" ;
    ns1:accesses ns1:SystemConfigurationDatabase ;
    ns1:attack-id "T1012" ;
    ns1:definition "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software." ;
    ns1:may-invoke ns1:GetSystemConfigValue ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1013 a owl:Class ;
    rdfs:label "Port Monitors" ;
    ns1:attack-id "T1013" ;
    ns1:definition "A port monitor can be set through the  (Citation: AddMonitor) API call to set a DLL to be loaded at startup. (Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. (Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>." ;
    rdfs:comment "This technique has been revoked by T1547.010" ;
    rdfs:seeAlso "T1547.010" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rootkit" ;
    ns1:attack-id "T1014" ;
    ns1:definition "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits)" ;
    ns1:may-modify ns1:BootSector,
        ns1:Firmware,
        ns1:Kernel,
        ns1:KernelModule,
        ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1015 a owl:Class ;
    rdfs:label "Accessibility Features" ;
    ns1:attack-id "T1015" ;
    ns1:definition "Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system." ;
    rdfs:comment "This technique has been revoked by T1546.008" ;
    rdfs:seeAlso "T1546.008" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1016.001 a owl:Class ;
    rdfs:label "Internet Connection Discovery" ;
    ns1:attack-id "T1016.001" ;
    ns1:definition "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, and GET requests to websites." ;
    rdfs:subClassOf ns1:T1016 .

ns1:T1016.002 a owl:Class ;
    rdfs:label "Wi-Fi Discovery" ;
    ns1:attack-id "T1016.002" ;
    ns1:definition "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns." ;
    rdfs:subClassOf ns1:T1016 .

ns1:T1017 a owl:Class ;
    rdfs:label "Application Deployment Software" ;
    ns1:attack-id "T1017" ;
    ns1:definition "Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment." ;
    rdfs:comment "This technique has been revoked by T1072" ;
    rdfs:seeAlso "T1072" ;
    rdfs:subClassOf ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1018 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote System Discovery" ;
    ns1:attack-id "T1018" ;
    ns1:definition "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039)." ;
    ns1:may-access ns1:OperatingSystemConfigurationFile ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:CreateSocket ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1019 a owl:Class ;
    rdfs:label "System Firmware" ;
    ns1:attack-id "T1019" ;
    ns1:definition "The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)" ;
    rdfs:comment "This technique has been revoked by T1542.001" ;
    rdfs:seeAlso "T1542.001" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1020.001 a owl:Class ;
    rdfs:label "Traffic Duplication" ;
    ns1:attack-id "T1020.001" ;
    ns1:definition "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)" ;
    rdfs:subClassOf ns1:T1020 .

ns1:T1021.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Desktop Protocol" ;
    ns1:attack-id "T1021.001" ;
    ns1:creates ns1:RDPSession ;
    ns1:definition "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user." ;
    ns1:produces ns1:AdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1021 .

ns1:T1021.002 a owl:Class ;
    rdfs:label "SMB/Windows Admin Shares" ;
    ns1:attack-id "T1021.002" ;
    ns1:definition "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user." ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.003 a owl:Class ;
    rdfs:label "Distributed Component Object Model" ;
    ns1:attack-id "T1021.003" ;
    ns1:definition "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user." ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SSH" ;
    ns1:attack-id "T1021.004" ;
    ns1:creates ns1:SSHSession ;
    ns1:definition "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user." ;
    ns1:produces ns1:AdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1021 .

ns1:T1021.005 a owl:Class ;
    rdfs:label "VNC" ;
    ns1:attack-id "T1021.005" ;
    ns1:definition "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (“remote framebuffer”) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)" ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.006 a owl:Class ;
    rdfs:label "Windows Remote Management" ;
    ns1:attack-id "T1021.006" ;
    ns1:definition "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user." ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.007 a owl:Class ;
    rdfs:label "Cloud Services" ;
    ns1:attack-id "T1021.007" ;
    ns1:definition "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user." ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1021.008 a owl:Class ;
    rdfs:label "Direct Cloud VM Connections" ;
    ns1:attack-id "T1021.008" ;
    ns1:definition "Adversaries may leverage [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the [Cloud API](https://attack.mitre.org/techniques/T1059/009), such as Azure Serial Console(Citation: Azure Serial Console), AWS EC2 Instance Connect(Citation: EC2 Instance Connect)(Citation: lucr-3: Getting SaaS-y in the cloud), and AWS System Manager.(Citation: AWS System Manager)." ;
    rdfs:subClassOf ns1:T1021 .

ns1:T1022 a owl:Class ;
    rdfs:label "Data Encrypted" ;
    ns1:attack-id "T1022" ;
    ns1:definition "Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file archive formats that can encrypt files are RAR and zip." ;
    rdfs:comment "This technique has been revoked by T1560" ;
    rdfs:seeAlso "T1560" ;
    rdfs:subClassOf ns1:ExfiltrationTechnique ;
    owl:deprecated true .

ns1:T1023 a owl:Class ;
    rdfs:label "Shortcut Modification" ;
    ns1:attack-id "T1023" ;
    ns1:definition "Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process. Adversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program." ;
    rdfs:comment "This technique has been revoked by T1547.009" ;
    rdfs:seeAlso "T1547.009" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1024 a owl:Class ;
    rdfs:label "Custom Cryptographic Protocol" ;
    ns1:attack-id "T1024" ;
    ns1:definition "Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic. A simple scheme, such as XOR-ing the plaintext with a fixed key, will produce a very weak ciphertext." ;
    rdfs:comment "This technique has been revoked by T1573" ;
    rdfs:seeAlso "T1573" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1025 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Removable Media" ;
    ns1:accesses ns1:RemovableMediaDevice ;
    ns1:attack-id "T1025" ;
    ns1:definition "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information." ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1026 a owl:Class ;
    rdfs:label "Multiband Communication" ;
    ns1:attack-id "T1026" ;
    ns1:definition "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:comment "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1027.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Binary Padding" ;
    ns1:attack-id "T1027.001" ;
    ns1:definition "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations." ;
    ns1:modifies ns1:ExecutableBinary ;
    rdfs:subClassOf [ ],
        ns1:T1027 .

ns1:T1027.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Packing" ;
    ns1:attack-id "T1027.002" ;
    ns1:definition "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018)" ;
    ns1:obfuscates ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1027 .

ns1:T1027.003 a owl:Class ;
    rdfs:label "Steganography" ;
    ns1:attack-id "T1027.003" ;
    ns1:definition "Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files." ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compile After Delivery" ;
    ns1:attack-id "T1027.004" ;
    ns1:creates ns1:ExecutableFile ;
    ns1:definition "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)" ;
    rdfs:subClassOf [ ],
        ns1:T1027 .

ns1:T1027.005 a owl:Class ;
    rdfs:label "Indicator Removal from Tools" ;
    ns1:attack-id "T1027.005" ;
    ns1:definition "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems." ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "HTML Smuggling" ;
    ns1:attack-id "T1027.006" ;
    ns1:creates ns1:JavaScriptBlob ;
    ns1:definition "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)" ;
    ns1:hides ns1:DigitalArtifact ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1027 .

ns1:T1027.007 a owl:Class ;
    rdfs:label "Dynamic API Resolution" ;
    ns1:attack-id "T1027.007" ;
    ns1:definition "Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts." ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.008 a owl:Class ;
    rdfs:label "Stripped Payloads" ;
    ns1:attack-id "T1027.008" ;
    ns1:definition "Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.(Citation: Mandiant golang stripped binaries explanation)(Citation: intezer stripped binaries elf files 2018)" ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.009 a owl:Class ;
    rdfs:label "Embedded Payloads" ;
    ns1:attack-id "T1027.009" ;
    ns1:definition "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs)" ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.010 a owl:Class ;
    rdfs:label "Command Obfuscation" ;
    ns1:attack-id "T1027.010" ;
    ns1:definition "Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing](https://attack.mitre.org/techniques/T1566) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)) or interactively via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: Akamai JS)(Citation: Malware Monday VBE)" ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.011 a owl:Class ;
    rdfs:label "Fileless Storage" ;
    ns1:attack-id "T1027.011" ;
    ns1:definition "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)" ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.012 a owl:Class ;
    rdfs:label "LNK Icon Smuggling" ;
    ns1:attack-id "T1027.012" ;
    ns1:definition "Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory." ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.013 a owl:Class ;
    rdfs:label "Encrypted/Encoded File" ;
    ns1:attack-id "T1027.013" ;
    ns1:definition "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use." ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1027.014 a owl:Class ;
    rdfs:label "Polymorphic Code" ;
    ns1:attack-id "T1027.014" ;
    ns1:definition "Adversaries may utilize polymorphic code (also known as metamorphic or mutating code) to evade detection. Polymorphic code is a type of software capable of changing its runtime footprint during code execution.(Citation: polymorphic-blackberry) With each execution of the software, the code is mutated into a different version of itself that achieves the same purpose or objective as the original. This functionality enables the malware to evade traditional signature-based defenses, such as antivirus and antimalware tools.(Citation: polymorphic-sentinelone)" ;
    rdfs:subClassOf ns1:T1027 .

ns1:T1028 a owl:Class ;
    rdfs:label "Windows Remote Management" ;
    ns1:attack-id "T1028" ;
    ns1:definition "Windows Remote Management (WinRM) is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). (Citation: Microsoft WinRM) It may be called with the <code>winrm</code> command or by any number of programs such as PowerShell. (Citation: Jacobsen 2014)" ;
    rdfs:comment "This technique has been revoked by T1021.006" ;
    rdfs:seeAlso "T1021.006" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1029 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Transfer" ;
    ns1:attack-id "T1029" ;
    ns1:definition "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability." ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1030 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Transfer Size Limits" ;
    ns1:attack-id "T1030" ;
    ns1:definition "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts." ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1031 a owl:Class ;
    rdfs:label "Modify Existing Service" ;
    ns1:attack-id "T1031" ;
    ns1:definition "Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075)." ;
    rdfs:comment "This technique has been revoked by T1543.003" ;
    rdfs:seeAlso "T1543.003" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1032 a owl:Class ;
    rdfs:label "Standard Cryptographic Protocol" ;
    ns1:attack-id "T1032" ;
    ns1:definition "Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and/or generated within malware samples/configuration files." ;
    rdfs:comment "This technique has been revoked by T1573" ;
    rdfs:seeAlso "T1573" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1033 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Owner/User Discovery" ;
    ns1:attack-id "T1033" ;
    ns1:definition "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions." ;
    ns1:may-access ns1:DirectoryService,
        ns1:GetSystemConfigValue,
        ns1:PasswordFile,
        ns1:ProcessSegment ;
    ns1:may-invoke ns1:CopyToken,
        ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1034 a owl:Class ;
    rdfs:label "Path Interception" ;
    ns1:attack-id "T1034" ;
    ns1:definition "**This technique has been deprecated. Please use [Path Interception by PATH Environment Variable](https://attack.mitre.org/techniques/T1574/007), [Path Interception by Search Order Hijacking](https://attack.mitre.org/techniques/T1574/008), and/or [Path Interception by Unquoted Path](https://attack.mitre.org/techniques/T1574/009).**" ;
    rdfs:comment "**This technique has been deprecated. Please use [Path Interception by PATH Environment Variable](https://attack.mitre.org/techniques/T1574/007), [Path Interception by Search Order Hijacking](https://attack.mitre.org/techniques/T1574/008), and/or [Path Interception by Unquoted Path](https://attack.mitre.org/techniques/T1574/009).**" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1035 a owl:Class ;
    rdfs:label "Service Execution" ;
    ns1:attack-id "T1035" ;
    ns1:definition "Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager. This can be done by either creating a new service or modifying an existing service. This technique is the execution used in conjunction with [New Service](https://attack.mitre.org/techniques/T1050) and [Modify Existing Service](https://attack.mitre.org/techniques/T1031) during service persistence or privilege escalation." ;
    rdfs:comment "This technique has been revoked by T1569.002" ;
    rdfs:seeAlso "T1569.002" ;
    rdfs:subClassOf ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1036.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Invalid Code Signature" ;
    ns1:attack-id "T1036.001" ;
    ns1:creates ns1:ExecutableBinary ;
    ns1:definition "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)" ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Right-to-Left Override" ;
    ns1:attack-id "T1036.002" ;
    ns1:definition "Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.(Citation: Infosecinstitute RTLO Technique)" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rename System Utilities" ;
    ns1:attack-id "T1036.003" ;
    ns1:definition "Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. (Citation: LOLBAS Main Site) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>). (Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)" ;
    ns1:may-create ns1:ExecutableFile ;
    ns1:may-modify ns1:OperatingSystemExecutableFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1036 .

ns1:T1036.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Masquerade Task or Service" ;
    ns1:attack-id "T1036.004" ;
    ns1:definition "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones." ;
    ns1:modifies ns1:JobSchedule ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Match Legitimate Name or Location" ;
    ns1:attack-id "T1036.005" ;
    ns1:definition "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous." ;
    ns1:invokes ns1:MoveFile ;
    ns1:may-create ns1:File ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1036 .

ns1:T1036.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Space after Filename" ;
    ns1:attack-id "T1036.006" ;
    ns1:creates ns1:File ;
    ns1:definition "Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system." ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Double File Extension" ;
    ns1:attack-id "T1036.007" ;
    ns1:definition "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension)" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1036 .

ns1:T1036.008 a owl:Class ;
    rdfs:label "Masquerade File Type" ;
    ns1:attack-id "T1036.008" ;
    ns1:definition "Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file’s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file’s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file’s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`." ;
    rdfs:subClassOf ns1:T1036 .

ns1:T1036.009 a owl:Class ;
    rdfs:label "Break Process Trees" ;
    ns1:attack-id "T1036.009" ;
    ns1:definition "An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the “parent-child\" relationship for detection, breaking this relationship could result in the adversary’s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.(Citation: 3OHA double-fork 2022)" ;
    rdfs:subClassOf ns1:T1036 .

ns1:T1036.010 a owl:Class ;
    rdfs:label "Masquerade Account Name" ;
    ns1:attack-id "T1036.010" ;
    ns1:definition "Adversaries may match or approximate the names of legitimate accounts to make newly created ones appear benign. This will typically occur during [Create Account](https://attack.mitre.org/techniques/T1136), although accounts may also be renamed at a later date. This may also coincide with [Account Access Removal](https://attack.mitre.org/techniques/T1531) if the actor first deletes an account before re-creating one with the same name.(Citation: Huntress MOVEit 2023)" ;
    rdfs:subClassOf ns1:T1036 .

ns1:T1037.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logon Script (Windows)" ;
    ns1:attack-id "T1037.001" ;
    ns1:definition "Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the <code>HKCU\\Environment\\UserInitMprLogonScript</code> Registry key.(Citation: Hexacorn Logon Scripts)" ;
    ns1:modifies ns1:UserInitScript ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Login Hook" ;
    ns1:attack-id "T1037.002" ;
    ns1:definition "Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the <code>/Library/Preferences/com.apple.loginwindow.plist</code> file and can be modified using the <code>defaults</code> command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.(Citation: Login Scripts Apple Dev)(Citation: LoginWindowScripts Apple Dev)" ;
    ns1:modifies ns1:UserInitScript ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Logon Script" ;
    ns1:attack-id "T1037.003" ;
    ns1:definition "Group Policy Object / Active Directory Users and Computers are both Active Directory-based" ;
    ns1:modifies ns1:NetworkInitScriptFileResource ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RC Scripts" ;
    ns1:attack-id "T1037.004" ;
    ns1:definition "Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify." ;
    ns1:modifies ns1:SystemInitScript ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1037.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Startup Items" ;
    ns1:attack-id "T1037.005" ;
    ns1:definition "Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.(Citation: Startup Items)" ;
    ns1:modifies ns1:SystemStartupDirectory ;
    rdfs:subClassOf [ ],
        ns1:T1037 .

ns1:T1038 a owl:Class ;
    rdfs:label "DLL Search Order Hijacking" ;
    ns1:attack-id "T1038" ;
    ns1:definition "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence." ;
    rdfs:comment "This technique has been revoked by T1574.001" ;
    rdfs:seeAlso "T1574.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1039 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Network Shared Drive" ;
    ns1:accesses ns1:NetworkFileShareResource ;
    ns1:attack-id "T1039" ;
    ns1:definition "Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information." ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1040 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Sniffing" ;
    ns1:attack-id "T1040" ;
    ns1:definition "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data." ;
    ns1:may-produce ns1:DNSLookup ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique,
        ns1:DiscoveryTechnique .

ns1:T1041 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over C2 Channel" ;
    ns1:attack-id "T1041" ;
    ns1:definition "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications." ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExfiltrationTechnique .

ns1:T1042 a owl:Class ;
    rdfs:label "Change Default File Association" ;
    ns1:attack-id "T1042" ;
    ns1:definition "When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access (Citation: Microsoft Change Default Programs) (Citation: Microsoft File Handlers) or by administrators using the built-in assoc utility. (Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened." ;
    rdfs:comment "This technique has been revoked by T1546.001" ;
    rdfs:seeAlso "T1546.001" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1043 a owl:Class ;
    rdfs:label "Commonly Used Port" ;
    ns1:attack-id "T1043" ;
    ns1:definition "**This technique has been deprecated. Please use [Non-Standard Port](https://attack.mitre.org/techniques/T1571) where appropriate.**" ;
    rdfs:comment "**This technique has been deprecated. Please use [Non-Standard Port](https://attack.mitre.org/techniques/T1571) where appropriate.**" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1044 a owl:Class ;
    rdfs:label "File System Permissions Weakness" ;
    ns1:attack-id "T1044" ;
    ns1:definition "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM." ;
    rdfs:comment "This technique has been revoked by T1574.010" ;
    rdfs:seeAlso "T1574.010" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1045 a owl:Class ;
    rdfs:label "Software Packing" ;
    ns1:attack-id "T1045" ;
    ns1:definition "Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory." ;
    rdfs:comment "This technique has been revoked by T1027.002" ;
    rdfs:seeAlso "T1027.002" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1046 a owl:Class ;
    rdfs:label "Network Service Discovery" ;
    ns1:attack-id "T1046" ;
    ns1:definition "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1047 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Management Instrumentation" ;
    ns1:attack-id "T1047" ;
    ns1:definition "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components." ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionTechnique .

ns1:T1048.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Symmetric Encrypted Non-C2 Protocol" ;
    ns1:attack-id "T1048.001" ;
    ns1:definition "Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server." ;
    ns1:produces ns1:OutboundInternetEncryptedTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1048 .

ns1:T1048.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol" ;
    ns1:attack-id "T1048.002" ;
    ns1:definition "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server." ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:produces ns1:OutboundInternetEncryptedTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1048 .

ns1:T1048.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Unencrypted Non-C2 Protocol" ;
    ns1:attack-id "T1048.003" ;
    ns1:definition "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.(Citation: copy_cmd_cisco)" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1048 .

ns1:T1049 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Network Connections Discovery" ;
    ns1:attack-id "T1049" ;
    ns1:definition "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network." ;
    ns1:may-invoke ns1:GetOpenSockets ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1050 a owl:Class ;
    rdfs:label "New Service" ;
    ns1:attack-id "T1050" ;
    ns1:definition "When operating systems boot up, they can start programs or applications called services that perform background system functions. (Citation: TechNet Services) A service's configuration information, including the file path to the service's executable, is stored in the Windows Registry." ;
    rdfs:comment "This technique has been revoked by T1543.003" ;
    rdfs:seeAlso "T1543.003" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1051 a owl:Class ;
    rdfs:label "Shared Webroot" ;
    ns1:attack-id "T1051" ;
    ns1:definition "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:comment "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:subClassOf ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1052.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration over USB" ;
    ns1:attack-id "T1052.001" ;
    ns1:definition "Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems." ;
    ns1:modifies ns1:RemovableMediaDevice ;
    rdfs:subClassOf [ ],
        ns1:T1052 .

ns1:T1053.001 a owl:Class ;
    rdfs:label "At (Linux) Execution" ;
    ns1:attack-id "T1053.001" ;
    ns1:definition "Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial, recurring, or future execution of malicious code. The [at](https://attack.mitre.org/software/S0110) command within Linux operating systems enables administrators to schedule tasks.(Citation: Kifarunix - Task Scheduling in Linux)" ;
    rdfs:comment "This technique has been revoked by T1053.002" ;
    rdfs:seeAlso "T1053.002" ;
    rdfs:subClassOf ns1:T1053 ;
    owl:deprecated true .

ns1:T1053.002 a owl:Class ;
    rdfs:label "At" ;
    ns1:attack-id "T1053.002" ;
    ns1:definition "Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group." ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.003 a owl:Class ;
    rdfs:label "Cron" ;
    ns1:attack-id "T1053.003" ;
    ns1:definition "Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths." ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Launchd" ;
    ns1:attack-id "T1053.004" ;
    ns1:creates ns1:PropertyListFile ;
    ns1:definition "This technique is deprecated due to the inaccurate usage. The report cited did not provide technical detail as to how the malware interacted directly with launchd rather than going through known services. Other system services are used to interact with launchd rather than launchd being used by itself." ;
    rdfs:comment "This technique is deprecated due to the inaccurate usage. The report cited did not provide technical detail as to how the malware interacted directly with launchd rather than going through known services. Other system services are used to interact with launchd rather than launchd being used by itself." ;
    rdfs:subClassOf [ ],
        ns1:T1053 ;
    owl:deprecated true .

ns1:T1053.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Task" ;
    ns1:attack-id "T1053.005" ;
    ns1:definition "Renamed from ATT&CK to be consistent with at, launchd, cron siblings; name as is looks like parent.  Not sure why parent is not just Scheduled Task [Execution[." ;
    ns1:executes ns1:ScheduledJob ;
    rdfs:subClassOf [ ],
        ns1:T1053 .

ns1:T1053.006 a owl:Class ;
    rdfs:label "Systemd Timers" ;
    ns1:attack-id "T1053.006" ;
    ns1:definition "Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension <code>.timer</code> that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.(Citation: archlinux Systemd Timers Aug 2020) Systemd timers may be activated remotely via the <code>systemctl</code> command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: Systemd Remote Control)" ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1053.007 a owl:Class ;
    rdfs:label "Container Orchestration Job" ;
    ns1:attack-id "T1053.007" ;
    ns1:definition "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster." ;
    rdfs:subClassOf ns1:T1053 .

ns1:T1054 a owl:Class ;
    rdfs:label "Indicator Blocking" ;
    ns1:attack-id "T1054" ;
    ns1:definition "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047)." ;
    rdfs:comment "This technique has been revoked by T1562.006" ;
    rdfs:seeAlso "T1562.006" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1055.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dynamic-link Library Injection" ;
    ns1:adds ns1:SharedLibraryFile ;
    ns1:attack-id "T1055.001" ;
    ns1:definition "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:invokes ns1:SystemCall ;
    ns1:loads ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Portable Executable Injection" ;
    ns1:attack-id "T1055.002" ;
    ns1:definition "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:may-add ns1:ObjectFile ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread Execution Hijacking" ;
    ns1:attack-id "T1055.003" ;
    ns1:definition "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:invokes ns1:SystemCall ;
    ns1:may-add ns1:ExecutableBinary ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asynchronous Procedure Call" ;
    ns1:attack-id "T1055.004" ;
    ns1:definition "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread Local Storage" ;
    ns1:attack-id "T1055.005" ;
    ns1:definition "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Ptrace System Calls" ;
    ns1:attack-id "T1055.008" ;
    ns1:definition "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Proc Memory" ;
    ns1:accesses ns1:OperatingSystemFile ;
    ns1:attack-id "T1055.009" ;
    ns1:definition "Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:may-modify ns1:OperatingSystemFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.011 a owl:Class ;
    rdfs:label "Extra Window Memory Injection" ;
    ns1:attack-id "T1055.011" ;
    ns1:definition "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process." ;
    rdfs:subClassOf ns1:T1055 .

ns1:T1055.012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Hollowing" ;
    ns1:attack-id "T1055.012" ;
    ns1:definition "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:modifies ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.013 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Doppelgänging" ;
    ns1:attack-id "T1055.013" ;
    ns1:definition "Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:T1055 .

ns1:T1055.014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "VDSO Hijacking" ;
    ns1:accesses ns1:SharedLibraryFile ;
    ns1:attack-id "T1055.014" ;
    ns1:definition "Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process." ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1055 .

ns1:T1055.015 a owl:Class ;
    rdfs:label "ListPlanting" ;
    ns1:attack-id "T1055.015" ;
    ns1:definition "Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process." ;
    rdfs:subClassOf ns1:T1055 .

ns1:T1056.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keylogging" ;
    ns1:accesses ns1:KeyboardInputDevice ;
    ns1:attack-id "T1056.001" ;
    ns1:definition "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)" ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1056.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "GUI Input Capture" ;
    ns1:accesses ns1:GraphicalUserInterface ;
    ns1:attack-id "T1056.002" ;
    ns1:definition "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002))." ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1056.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Portal Capture" ;
    ns1:attack-id "T1056.003" ;
    ns1:definition "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service." ;
    ns1:modifies ns1:WebServerApplication ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1056.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential API Hooking" ;
    ns1:attack-id "T1056.004" ;
    ns1:definition "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:" ;
    ns1:may-modify ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        ns1:T1056 .

ns1:T1057 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Discovery" ;
    ns1:attack-id "T1057" ;
    ns1:definition "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions." ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetRunningProcesses ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1058 a owl:Class ;
    rdfs:label "Service Registry Permissions Weakness" ;
    ns1:attack-id "T1058" ;
    ns1:definition "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)" ;
    rdfs:comment "This technique has been revoked by T1574.011" ;
    rdfs:seeAlso "T1574.011" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1059.001 a owl:Class ;
    rdfs:label "PowerShell" ;
    ns1:attack-id "T1059.001" ;
    ns1:definition "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems)." ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.002 a owl:Class ;
    rdfs:label "AppleScript" ;
    ns1:attack-id "T1059.002" ;
    ns1:definition "Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.(Citation: Apple AppleScript) These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely." ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.003 a owl:Class ;
    rdfs:label "Windows Command Shell" ;
    ns1:attack-id "T1059.003" ;
    ns1:definition "Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.004 a owl:Class ;
    rdfs:label "Unix Shell" ;
    ns1:attack-id "T1059.004" ;
    ns1:definition "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges." ;
    rdfs:subClassOf ns1:T1059 ;
    skos:altLabel "Bash Execution" .

ns1:T1059.005 a owl:Class ;
    rdfs:label "Visual Basic" ;
    ns1:attack-id "T1059.005" ;
    ns1:definition "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.006 a owl:Class ;
    rdfs:label "Python" ;
    ns1:attack-id "T1059.006" ;
    ns1:definition "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.(Citation: Zscaler APT31 Covid-19 October 2020)" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.007 a owl:Class ;
    rdfs:label "JavaScript" ;
    ns1:attack-id "T1059.007" ;
    ns1:definition "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.008 a owl:Class ;
    rdfs:label "Network Device CLI" ;
    ns1:attack-id "T1059.008" ;
    ns1:definition "Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands." ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.009 a owl:Class ;
    rdfs:label "Cloud API" ;
    ns1:attack-id "T1059.009" ;
    ns1:definition "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006)." ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.010 a owl:Class ;
    rdfs:label "AutoHotKey & AutoIT" ;
    ns1:attack-id "T1059.010" ;
    ns1:definition "Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.(Citation: AutoIT)(Citation: AutoHotKey)" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1059.011 a owl:Class ;
    rdfs:label "Lua" ;
    ns1:attack-id "T1059.011" ;
    ns1:definition "Adversaries may abuse Lua commands and scripts for execution. Lua is a cross-platform scripting and programming language primarily designed for embedded use in applications. Lua can be executed on the command-line (through the stand-alone lua interpreter), via scripts (<code>.lua</code>), or from Lua-embedded programs (through the <code>struct lua_State</code>).(Citation: Lua main page)(Citation: Lua state)" ;
    rdfs:subClassOf ns1:T1059 .

ns1:T1060 a owl:Class ;
    rdfs:label "Registry Run Keys / Startup Folder" ;
    ns1:attack-id "T1060" ;
    ns1:definition "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level." ;
    rdfs:comment "This technique has been revoked by T1547.001" ;
    rdfs:seeAlso "T1547.001" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1061 a owl:Class ;
    rdfs:label "Graphical User Interface" ;
    ns1:attack-id "T1061" ;
    ns1:definition "**This technique has been deprecated. Please use [Remote Services](https://attack.mitre.org/techniques/T1021) where appropriate.**" ;
    rdfs:comment "**This technique has been deprecated. Please use [Remote Services](https://attack.mitre.org/techniques/T1021) where appropriate.**" ;
    rdfs:subClassOf ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1062 a owl:Class ;
    rdfs:label "Hypervisor" ;
    ns1:attack-id "T1062" ;
    ns1:definition "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:comment "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1063 a owl:Class ;
    rdfs:label "Security Software Discovery" ;
    ns1:attack-id "T1063" ;
    ns1:definition "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1063) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions." ;
    rdfs:comment "This technique has been revoked by T1518.001" ;
    rdfs:seeAlso "T1518.001" ;
    rdfs:subClassOf ns1:DiscoveryTechnique ;
    owl:deprecated true .

ns1:T1064 a owl:Class ;
    rdfs:label "Scripting" ;
    ns1:attack-id "T1064" ;
    ns1:definition "**This technique has been deprecated. Please use [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) where appropriate.**" ;
    rdfs:comment "**This technique has been deprecated. Please use [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) where appropriate.**" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1065 a owl:Class ;
    rdfs:label "Uncommonly Used Port" ;
    ns1:attack-id "T1065" ;
    ns1:definition "Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured." ;
    rdfs:comment "This technique has been revoked by T1571" ;
    rdfs:seeAlso "T1571" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1066 a owl:Class ;
    rdfs:label "Indicator Removal from Tools" ;
    ns1:attack-id "T1066" ;
    ns1:definition "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems." ;
    rdfs:comment "This technique has been revoked by T1027.005" ;
    rdfs:seeAlso "T1027.005" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1067 a owl:Class ;
    rdfs:label "Bootkit" ;
    ns1:attack-id "T1067" ;
    ns1:definition "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)" ;
    rdfs:comment "This technique has been revoked by T1542.003" ;
    rdfs:seeAlso "T1542.003" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1068 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Privilege Escalation" ;
    ns1:attack-id "T1068" ;
    ns1:definition "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions." ;
    ns1:enables ns1:TA0004 ;
    ns1:may-modify ns1:StackFrame ;
    ns1:modifies ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:PrivilegeEscalationTechnique .

ns1:T1069.001 a owl:Class ;
    rdfs:label "Local Groups" ;
    ns1:attack-id "T1069.001" ;
    ns1:definition "Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group." ;
    rdfs:subClassOf ns1:T1069 .

ns1:T1069.002 a owl:Class ;
    rdfs:label "Domain Groups" ;
    ns1:attack-id "T1069.002" ;
    ns1:definition "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators." ;
    rdfs:subClassOf ns1:T1069 .

ns1:T1069.003 a owl:Class ;
    rdfs:label "Cloud Groups" ;
    ns1:attack-id "T1069.003" ;
    ns1:definition "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group." ;
    rdfs:subClassOf ns1:T1069 .

ns1:T1070.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clear Windows Event Logs" ;
    ns1:attack-id "T1070.001" ;
    ns1:definition "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit." ;
    ns1:modifies ns1:EventLog ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clear Linux or Mac System Logs" ;
    ns1:attack-id "T1070.002" ;
    ns1:definition "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)" ;
    ns1:modifies ns1:OperatingSystemLogFile ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clear Command History" ;
    ns1:attack-id "T1070.003" ;
    ns1:definition "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done." ;
    ns1:modifies ns1:CommandHistoryLog ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Deletion" ;
    ns1:attack-id "T1070.004" ;
    ns1:definition "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint." ;
    ns1:deletes ns1:File ;
    ns1:may-modify ns1:File ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1070 .

ns1:T1070.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Share Connection Removal" ;
    ns1:attack-id "T1070.005" ;
    ns1:definition "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command. (Citation: Technet Net Use)" ;
    ns1:unmounts ns1:NetworkFileShareResource ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Timestomp" ;
    ns1:attack-id "T1070.006" ;
    ns1:definition "Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools." ;
    ns1:forges ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1070 .

ns1:T1070.007 a owl:Class ;
    rdfs:label "Clear Network Connection History and Configurations" ;
    ns1:attack-id "T1070.007" ;
    ns1:definition "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries." ;
    rdfs:subClassOf ns1:T1070 .

ns1:T1070.008 a owl:Class ;
    rdfs:label "Clear Mailbox Data" ;
    ns1:attack-id "T1070.008" ;
    ns1:definition "Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests." ;
    rdfs:subClassOf ns1:T1070 .

ns1:T1070.009 a owl:Class ;
    rdfs:label "Clear Persistence" ;
    ns1:attack-id "T1070.009" ;
    ns1:definition "Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry](https://attack.mitre.org/techniques/T1112), [Plist File Modification](https://attack.mitre.org/techniques/T1647), or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.(Citation: Cylance Dust Storm) Adversaries may also delete accounts previously created to maintain persistence (i.e. [Create Account](https://attack.mitre.org/techniques/T1136)).(Citation: Talos - Cisco Attack 2022)" ;
    rdfs:subClassOf ns1:T1070 .

ns1:T1070.010 a owl:Class ;
    rdfs:label "Relocate Malware" ;
    ns1:attack-id "T1070.010" ;
    ns1:definition "Once a payload is delivered, adversaries may reproduce copies of the same malware on the victim system to remove evidence of their presence and/or avoid defenses. Copying malware payloads to new locations may also be combined with [File Deletion](https://attack.mitre.org/techniques/T1070/004) to cleanup older artifacts." ;
    rdfs:subClassOf ns1:T1070 .

ns1:T1071.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Protocols" ;
    ns1:attack-id "T1071.001" ;
    ns1:definition "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server." ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1071 .

ns1:T1071.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Transfer Protocols" ;
    ns1:attack-id "T1071.002" ;
    ns1:definition "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server." ;
    ns1:produces ns1:OutboundInternetFileTransferTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1071 .

ns1:T1071.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mail Protocols" ;
    ns1:attack-id "T1071.003" ;
    ns1:definition "Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server." ;
    ns1:produces ns1:OutboundInternetMailTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1071 .

ns1:T1071.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS" ;
    ns1:attack-id "T1071.004" ;
    ns1:definition "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server." ;
    ns1:produces ns1:OutboundInternetDNSLookupTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1071 .

ns1:T1071.005 a owl:Class ;
    rdfs:label "Publish/Subscribe Protocols" ;
    ns1:attack-id "T1071.005" ;
    ns1:definition "Adversaries may communicate using publish/subscribe (pub/sub) application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server." ;
    rdfs:subClassOf ns1:T1071 .

ns1:T1072 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Deployment Tools" ;
    ns1:adds ns1:File ;
    ns1:attack-id "T1072" ;
    ns1:definition "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager." ;
    ns1:executes ns1:SoftwareDeploymentTool ;
    ns1:installs ns1:Software ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:ExecutionTechnique,
        ns1:LateralMovementTechnique .

ns1:T1073 a owl:Class ;
    rdfs:label "DLL Side-Loading" ;
    ns1:attack-id "T1073" ;
    ns1:definition "Programs may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests (Citation: MSDN Manifests) are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable to side-loading to load a malicious DLL. (Citation: Stewart 2014)" ;
    rdfs:comment "This technique has been revoked by T1574.002" ;
    rdfs:seeAlso "T1574.002" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1074.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Data Staging" ;
    ns1:attack-id "T1074.001" ;
    ns1:definition "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location." ;
    ns1:may-create ns1:File ;
    ns1:may-invoke ns1:CreateFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1074 .

ns1:T1074.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Data Staging" ;
    ns1:attack-id "T1074.002" ;
    ns1:definition "Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location." ;
    ns1:modifies ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:T1074 .

ns1:T1075 a owl:Class ;
    rdfs:label "Pass the Hash" ;
    ns1:attack-id "T1075" ;
    ns1:definition "Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems." ;
    rdfs:comment "This technique has been revoked by T1550.002" ;
    rdfs:seeAlso "T1550.002" ;
    rdfs:subClassOf ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1076 a owl:Class ;
    rdfs:label "Remote Desktop Protocol" ;
    ns1:attack-id "T1076" ;
    ns1:definition "Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). (Citation: TechNet Remote Desktop Services) There are other implementations and third-party tools that provide graphical access [Remote Services](https://attack.mitre.org/techniques/T1021) similar to RDS." ;
    rdfs:comment "This technique has been revoked by T1021.001" ;
    rdfs:seeAlso "T1021.001" ;
    rdfs:subClassOf ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1077 a owl:Class ;
    rdfs:label "Windows Admin Shares" ;
    ns1:attack-id "T1077" ;
    ns1:definition "Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include <code>C$</code>, <code>ADMIN$</code>, and <code>IPC$</code>." ;
    rdfs:comment "This technique has been revoked by T1021.002" ;
    rdfs:seeAlso "T1021.002" ;
    rdfs:subClassOf ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1078.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Default Accounts" ;
    ns1:attack-id "T1078.001" ;
    ns1:definition "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)" ;
    ns1:uses ns1:DefaultUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1078.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Accounts" ;
    ns1:attack-id "T1078.002" ;
    ns1:definition "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)" ;
    ns1:uses ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1078.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Accounts" ;
    ns1:attack-id "T1078.003" ;
    ns1:definition "Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service." ;
    ns1:uses ns1:LocalUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1078.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Accounts" ;
    ns1:attack-id "T1078.004" ;
    ns1:definition "Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory. (Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)" ;
    ns1:uses ns1:CloudUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1078 .

ns1:T1079 a owl:Class ;
    rdfs:label "Multilayer Encryption" ;
    ns1:attack-id "T1079" ;
    ns1:definition "An adversary performs C2 communications using multiple layers of encryption, typically (but not exclusively) tunneling a custom encryption scheme within a protocol encryption scheme such as HTTPS or SMTPS." ;
    rdfs:comment "This technique has been revoked by T1573" ;
    rdfs:seeAlso "T1573" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1080 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Taint Shared Content" ;
    ns1:attack-id "T1080" ;
    ns1:definition "" ;
    ns1:modifies ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1081 a owl:Class ;
    rdfs:label "Credentials in Files" ;
    ns1:attack-id "T1081" ;
    ns1:definition "Adversaries may search local file systems and remote file shares for files containing passwords. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords." ;
    rdfs:comment "This technique has been revoked by T1552.001" ;
    rdfs:seeAlso "T1552.001" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1082 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Information Discovery" ;
    ns1:attack-id "T1082" ;
    ns1:definition "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions." ;
    ns1:may-access ns1:DecoyArtifact ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1083 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File and Directory Discovery" ;
    ns1:accesses ns1:Directory,
        ns1:File ;
    ns1:attack-id "T1083" ;
    ns1:definition "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions." ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1084 a owl:Class ;
    rdfs:label "Windows Management Instrumentation Event Subscription" ;
    ns1:attack-id "T1084" ;
    ns1:definition "Windows Management Instrumentation (WMI) can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may attempt to evade detection of this technique by compiling WMI scripts into Windows Management Object (MOF) files (.mof extension). (Citation: Dell WMI Persistence) Examples of events that may be subscribed to are the wall clock time or the computer's uptime. (Citation: Kazanciyan 2014) Several threat groups have reportedly used this technique to maintain persistence. (Citation: Mandiant M-Trends 2015)" ;
    rdfs:comment "This technique has been revoked by T1546.003" ;
    rdfs:seeAlso "T1546.003" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1085 a owl:Class ;
    rdfs:label "Rundll32" ;
    ns1:attack-id "T1085" ;
    ns1:definition "The rundll32.exe program can be called to execute an arbitrary binary. Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of the rundll32.exe process because of whitelists or false positives from Windows using rundll32.exe for normal operations." ;
    rdfs:comment "This technique has been revoked by T1218.011" ;
    rdfs:seeAlso "T1218.011" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1086 a owl:Class ;
    rdfs:label "PowerShell" ;
    ns1:attack-id "T1086" ;
    ns1:definition "PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer." ;
    rdfs:comment "This technique has been revoked by T1059.001" ;
    rdfs:seeAlso "T1059.001" ;
    rdfs:subClassOf ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1087.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Account" ;
    ns1:attack-id "T1087.001" ;
    ns1:definition "Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior." ;
    ns1:enumerates ns1:LocalUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1087 .

ns1:T1087.003 a owl:Class ;
    rdfs:label "Email Account" ;
    ns1:attack-id "T1087.003" ;
    ns1:definition "Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)" ;
    rdfs:subClassOf ns1:T1087 .

ns1:T1087.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Account" ;
    ns1:attack-id "T1087.004" ;
    ns1:definition "Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application." ;
    ns1:enumerates ns1:CloudUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1087 .

ns1:T1088 a owl:Class ;
    rdfs:label "Bypass User Account Control" ;
    ns1:attack-id "T1088" ;
    ns1:definition "Windows User Account Control (UAC) allows a program to elevate its privileges to perform a task under administrator-level permissions by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. (Citation: TechNet How UAC Works)" ;
    rdfs:comment "This technique has been revoked by T1548.002" ;
    rdfs:seeAlso "T1548.002" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1089 a owl:Class ;
    rdfs:label "Disabling Security Tools" ;
    ns1:attack-id "T1089" ;
    ns1:definition "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting." ;
    rdfs:comment "This technique has been revoked by T1562.001" ;
    rdfs:seeAlso "T1562.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1090.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internal Proxy" ;
    ns1:attack-id "T1090.001" ;
    ns1:definition "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment." ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1090.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Proxy" ;
    ns1:attack-id "T1090.002" ;
    ns1:definition "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1090.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multi-hop Proxy" ;
    ns1:attack-id "T1090.003" ;
    ns1:definition "Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1090.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Fronting" ;
    ns1:attack-id "T1090.004" ;
    ns1:definition "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored)." ;
    ns1:produces ns1:OutboundInternetEncryptedWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1090 .

ns1:T1091 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Replication Through Removable Media" ;
    ns1:attack-id "T1091" ;
    ns1:definition "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself." ;
    ns1:executes ns1:RemovableMediaDevice ;
    rdfs:subClassOf [ ],
        ns1:InitialAccessTechnique,
        ns1:LateralMovementTechnique .

ns1:T1092 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Communication Through Removable Media" ;
    ns1:attack-id "T1092" ;
    ns1:definition "Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system.(Citation: ESET Sednit USBStealer 2014) Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access." ;
    ns1:modifies ns1:RemovableMediaDevice ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1093 a owl:Class ;
    rdfs:label "Process Hollowing" ;
    ns1:attack-id "T1093" ;
    ns1:definition "Process hollowing occurs when a process is created in a suspended state then its memory is unmapped and replaced with malicious code. Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis. (Citation: Leitch Hollowing) (Citation: Elastic Process Injection July 2017)" ;
    rdfs:comment "This technique has been revoked by T1055.012" ;
    rdfs:seeAlso "T1055.012" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1094 a owl:Class ;
    rdfs:label "Custom Command and Control Protocol" ;
    ns1:attack-id "T1094" ;
    ns1:definition "Adversaries may communicate using a custom command and control protocol instead of encapsulating commands/data in an existing [Application Layer Protocol](https://attack.mitre.org/techniques/T1071). Implementations include mimicking well-known protocols or developing custom protocols (including raw sockets) on top of fundamental protocols provided by TCP/IP/another standard network stack." ;
    rdfs:comment "This technique has been revoked by T1095" ;
    rdfs:seeAlso "T1095" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1095 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Non-Application Layer Protocol" ;
    ns1:attack-id "T1095" ;
    ns1:definition "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL)." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1096 a owl:Class ;
    rdfs:label "NTFS File Attributes" ;
    ns1:attack-id "T1096" ;
    ns1:definition "Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)" ;
    rdfs:comment "This technique has been revoked by T1564.004" ;
    rdfs:seeAlso "T1564.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1097 a owl:Class ;
    rdfs:label "Pass the Ticket" ;
    ns1:attack-id "T1097" ;
    ns1:definition "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system." ;
    rdfs:comment "This technique has been revoked by T1550.003" ;
    rdfs:seeAlso "T1550.003" ;
    rdfs:subClassOf ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1098.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Additional Cloud Credentials" ;
    ns1:attack-id "T1098.001" ;
    ns1:creates ns1:Credential ;
    ns1:definition "Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment." ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1098 .

ns1:T1098.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Additional Email Delegate Permissions" ;
    ns1:attack-id "T1098.002" ;
    ns1:definition "Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account." ;
    ns1:modifies ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1098 .

ns1:T1098.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Additional Cloud Roles" ;
    ns1:attack-id "T1098.003" ;
    ns1:definition "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)" ;
    ns1:modifies ns1:GlobalUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1098 .

ns1:T1098.004 a owl:Class ;
    rdfs:label "SSH Authorized Keys" ;
    ns1:attack-id "T1098.004" ;
    ns1:definition "Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>.(Citation: SSH Authorized Keys) Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>." ;
    rdfs:subClassOf ns1:T1098 .

ns1:T1098.005 a owl:Class ;
    rdfs:label "Device Registration" ;
    ns1:attack-id "T1098.005" ;
    ns1:definition "Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance." ;
    rdfs:subClassOf ns1:T1098 .

ns1:T1098.006 a owl:Class ;
    rdfs:label "Additional Container Cluster Roles" ;
    ns1:attack-id "T1098.006" ;
    ns1:definition "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)" ;
    rdfs:subClassOf ns1:T1098 .

ns1:T1098.007 a owl:Class ;
    rdfs:label "Additional Local or Domain Groups" ;
    ns1:attack-id "T1098.007" ;
    ns1:definition "An adversary may add additional local or domain groups to an adversary-controlled account to maintain persistent access to a system or domain." ;
    rdfs:subClassOf ns1:T1098 .

ns1:T1099 a owl:Class ;
    rdfs:label "Timestomp" ;
    ns1:attack-id "T1099" ;
    ns1:definition "Adversaries may take actions to hide the deployment of new, or modification of existing files to obfuscate their activities. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools. (Citation: WindowsIR Anti-Forensic Techniques)" ;
    rdfs:comment "This technique has been revoked by T1070.006" ;
    rdfs:seeAlso "T1070.006" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1100 a owl:Class ;
    rdfs:label "Web Shell" ;
    ns1:attack-id "T1100" ;
    ns1:definition "A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server. In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (see, for example, China Chopper Web shell client). (Citation: Lee 2013)" ;
    rdfs:comment "This technique has been revoked by T1505.003" ;
    rdfs:seeAlso "T1505.003" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1101 a owl:Class ;
    rdfs:label "Security Support Provider" ;
    ns1:attack-id "T1101" ;
    ns1:definition "Windows Security Support Provider (SSP) DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called." ;
    rdfs:comment "This technique has been revoked by T1547.005" ;
    rdfs:seeAlso "T1547.005" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1102.001 a owl:Class ;
    rdfs:label "Dead Drop Resolver" ;
    ns1:attack-id "T1102.001" ;
    ns1:definition "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers." ;
    rdfs:subClassOf ns1:T1102 .

ns1:T1102.002 a owl:Class ;
    rdfs:label "Bidirectional Communication" ;
    ns1:attack-id "T1102.002" ;
    ns1:definition "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet." ;
    rdfs:subClassOf ns1:T1102 .

ns1:T1102.003 a owl:Class ;
    rdfs:label "One-Way Communication" ;
    ns1:attack-id "T1102.003" ;
    ns1:definition "Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response." ;
    rdfs:subClassOf ns1:T1102 .

ns1:T1103 a owl:Class ;
    rdfs:label "AppInit DLLs" ;
    ns1:attack-id "T1103" ;
    ns1:definition "Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017) Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry)" ;
    rdfs:comment "This technique has been revoked by T1546.010" ;
    rdfs:seeAlso "T1546.010" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1104 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multi-Stage Channels" ;
    ns1:attack-id "T1104" ;
    ns1:definition "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1105 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Ingress Tool Transfer" ;
    ns1:attack-id "T1105" ;
    ns1:definition "Session is initiated by the client, and may be a custom protocol which is why it is related to generic network traffic instead of file transfer network traffic." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1106 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Native API" ;
    ns1:attack-id "T1106" ;
    ns1:definition "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations." ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        ns1:ExecutionTechnique .

ns1:T1107 a owl:Class ;
    rdfs:label "File Deletion" ;
    ns1:attack-id "T1107" ;
    ns1:definition "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint." ;
    rdfs:comment "This technique has been revoked by T1070.004" ;
    rdfs:seeAlso "T1070.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1108 a owl:Class ;
    rdfs:label "Redundant Access" ;
    ns1:attack-id "T1108" ;
    ns1:definition "**This technique has been deprecated. Please use [Create Account](https://attack.mitre.org/techniques/T1136), [Web Shell](https://attack.mitre.org/techniques/T1505/003), and [External Remote Services](https://attack.mitre.org/techniques/T1133) where appropriate.**" ;
    rdfs:comment "**This technique has been deprecated. Please use [Create Account](https://attack.mitre.org/techniques/T1136), [Web Shell](https://attack.mitre.org/techniques/T1505/003), and [External Remote Services](https://attack.mitre.org/techniques/T1133) where appropriate.**" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1109 a owl:Class ;
    rdfs:label "Component Firmware" ;
    ns1:attack-id "T1109" ;
    ns1:definition "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks." ;
    rdfs:comment "This technique has been revoked by T1542.002" ;
    rdfs:seeAlso "T1542.002" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1110.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Guessing" ;
    ns1:accesses ns1:Password ;
    ns1:attack-id "T1110.001" ;
    ns1:definition "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts." ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1110 .

ns1:T1110.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Cracking" ;
    ns1:accesses ns1:Password ;
    ns1:attack-id "T1110.002" ;
    ns1:definition "Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A)" ;
    rdfs:subClassOf [ ],
        ns1:T1110 .

ns1:T1110.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Spraying" ;
    ns1:accesses ns1:Password ;
    ns1:attack-id "T1110.003" ;
    ns1:definition "Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)" ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1110 .

ns1:T1110.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Stuffing" ;
    ns1:attack-id "T1110.004" ;
    ns1:definition "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts." ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1110 .

ns1:T1111 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multi-Factor Authentication Interception" ;
    ns1:attack-id "T1111" ;
    ns1:definition "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms." ;
    ns1:may-access ns1:SecurityToken ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1112 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Modify Registry" ;
    ns1:attack-id "T1112" ;
    ns1:definition "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution." ;
    ns1:modifies ns1:WindowsRegistry ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1113 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Screen Capture" ;
    ns1:attack-id "T1113" ;
    ns1:definition "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)" ;
    ns1:may-access ns1:DisplayServer ;
    ns1:may-invoke ns1:GetScreenCapture ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CollectionTechnique .

ns1:T1114.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Email Collection" ;
    ns1:attack-id "T1114.001" ;
    ns1:definition "Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files." ;
    ns1:reads ns1:Email ;
    rdfs:subClassOf [ ],
        ns1:T1114 .

ns1:T1114.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Email Collection" ;
    ns1:accesses ns1:MailServer ;
    ns1:attack-id "T1114.002" ;
    ns1:definition "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords." ;
    rdfs:subClassOf [ ],
        ns1:T1114 .

ns1:T1114.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Forwarding Rule" ;
    ns1:attack-id "T1114.003" ;
    ns1:definition "Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)" ;
    ns1:modifies ns1:ApplicationConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1114 .

ns1:T1115 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clipboard Data" ;
    ns1:attack-id "T1115" ;
    ns1:definition "Adversaries may collect data stored in the clipboard from users copying information within or between applications." ;
    ns1:reads ns1:Clipboard ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1116 a owl:Class ;
    rdfs:label "Code Signing" ;
    ns1:attack-id "T1116" ;
    ns1:definition "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)" ;
    rdfs:comment "This technique has been revoked by T1553.002" ;
    rdfs:seeAlso "T1553.002" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1117 a owl:Class ;
    rdfs:label "Regsvr32" ;
    ns1:attack-id "T1117" ;
    ns1:definition "Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe can be used to execute arbitrary binaries. (Citation: Microsoft Regsvr32)" ;
    rdfs:comment "This technique has been revoked by T1218.010" ;
    rdfs:seeAlso "T1218.010" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1118 a owl:Class ;
    rdfs:label "InstallUtil" ;
    ns1:attack-id "T1118" ;
    ns1:definition "InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) InstallUtil is located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>. InstallUtil.exe is digitally signed by Microsoft." ;
    rdfs:comment "This technique has been revoked by T1218.004" ;
    rdfs:seeAlso "T1218.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1119 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Automated Collection" ;
    ns1:accesses ns1:File ;
    ns1:attack-id "T1119" ;
    ns1:definition "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals." ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1120 a owl:Class ;
    rdfs:label "Peripheral Device Discovery" ;
    ns1:attack-id "T1120" ;
    ns1:definition "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1121 a owl:Class ;
    rdfs:label "Regsvcs/Regasm" ;
    ns1:attack-id "T1121" ;
    ns1:definition "Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)" ;
    rdfs:comment "This technique has been revoked by T1218.009" ;
    rdfs:seeAlso "T1218.009" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1122 a owl:Class ;
    rdfs:label "Component Object Model Hijacking" ;
    ns1:attack-id "T1122" ;
    ns1:definition "The Component Object Model (COM) is a system within Windows to enable interaction between software components through the operating system. (Citation: Microsoft Component Object Model) Adversaries can use this system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Windows Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead. (Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection." ;
    rdfs:comment "This technique has been revoked by T1546.015" ;
    rdfs:seeAlso "T1546.015" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1123 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Audio Capture" ;
    ns1:accesses ns1:AudioInputDevice ;
    ns1:attack-id "T1123" ;
    ns1:definition "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)" ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1124 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Time Discovery" ;
    ns1:attack-id "T1124" ;
    ns1:definition "An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows or <code>systemsetup</code> on macOS.(Citation: MSDN System Time)(Citation: Technet Windows Time Service)(Citation: systemsetup mac time) These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain.(Citation: Mac Time Sync)(Citation: linux system time)" ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetSystemTime ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1125 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Video Capture" ;
    ns1:accesses ns1:VideoInputDevice ;
    ns1:attack-id "T1125" ;
    ns1:definition "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files." ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1126 a owl:Class ;
    rdfs:label "Network Share Connection Removal" ;
    ns1:attack-id "T1126" ;
    ns1:definition "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [Windows Admin Shares](https://attack.mitre.org/techniques/T1077) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command. (Citation: Technet Net Use)" ;
    rdfs:comment "This technique has been revoked by T1070.005" ;
    rdfs:seeAlso "T1070.005" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1127.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "MSBuild" ;
    ns1:attack-id "T1127.001" ;
    ns1:definition "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)" ;
    ns1:modifies ns1:CompilerConfigurationFile ;
    ns1:runs ns1:Compiler ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1127 .

ns1:T1127.002 a owl:Class ;
    rdfs:label "ClickOnce" ;
    ns1:attack-id "T1127.002" ;
    ns1:definition "Adversaries may use ClickOnce applications (.appref-ms and .application files) to proxy execution of code through a trusted Windows utility.(Citation: Burke/CISA ClickOnce BlackHat) ClickOnce is a deployment that enables a user to create self-updating Windows-based .NET applications (i.e, .XBAP, .EXE, or .DLL) that install and run from a file share or web page with minimal user interaction. The application launches as a child process of DFSVC.EXE, which is responsible for installing, launching, and updating the application.(Citation: SpectorOps Medium ClickOnce)" ;
    rdfs:subClassOf ns1:T1127 .

ns1:T1128 a owl:Class ;
    rdfs:label "Netsh Helper DLL" ;
    ns1:attack-id "T1128" ;
    ns1:definition "Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. (Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>." ;
    rdfs:comment "This technique has been revoked by T1546.007" ;
    rdfs:seeAlso "T1546.007" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1129 a owl:Class ;
    rdfs:label "Shared Modules" ;
    ns1:attack-id "T1129" ;
    ns1:definition "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106))." ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1130 a owl:Class ;
    rdfs:label "Install Root Certificate" ;
    ns1:attack-id "T1130" ;
    ns1:definition "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website." ;
    rdfs:comment "This technique has been revoked by T1553.004" ;
    rdfs:seeAlso "T1553.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1131 a owl:Class ;
    rdfs:label "Authentication Package" ;
    ns1:attack-id "T1131" ;
    ns1:definition "Windows Authentication Package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. (Citation: MSDN Authentication Packages)" ;
    rdfs:comment "This technique has been revoked by T1547.002" ;
    rdfs:seeAlso "T1547.002" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1132.001 a owl:Class ;
    rdfs:label "Standard Encoding" ;
    ns1:attack-id "T1132.001" ;
    ns1:definition "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding)(Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip." ;
    rdfs:subClassOf ns1:T1132 .

ns1:T1132.002 a owl:Class ;
    rdfs:label "Non-Standard Encoding" ;
    ns1:attack-id "T1132.002" ;
    ns1:definition "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding)" ;
    rdfs:subClassOf ns1:T1132 .

ns1:T1133 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Remote Services" ;
    ns1:attack-id "T1133" ;
    ns1:definition "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)" ;
    ns1:produces ns1:Authentication,
        ns1:Authorization,
        ns1:NetworkSession ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:InitialAccessTechnique,
        ns1:PersistenceTechnique .

ns1:T1134.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Token Impersonation/Theft" ;
    ns1:attack-id "T1134.001" ;
    ns1:copies ns1:AccessToken ;
    ns1:definition "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`.(Citation: DuplicateToken function) The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread." ;
    rdfs:subClassOf [ ],
        ns1:T1134 .

ns1:T1134.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Process with Token" ;
    ns1:attack-id "T1134.002" ;
    ns1:copies ns1:AccessToken ;
    ns1:definition "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)" ;
    ns1:may-modify ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1134 .

ns1:T1134.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Make and Impersonate Token" ;
    ns1:attack-id "T1134.003" ;
    ns1:copies ns1:AccessToken ;
    ns1:creates ns1:LoginSession ;
    ns1:definition "Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function.(Citation: LogonUserW function) The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread." ;
    ns1:may-modify ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1134 .

ns1:T1134.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Parent PID Spoofing" ;
    ns1:attack-id "T1134.004" ;
    ns1:definition "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)" ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:T1134 .

ns1:T1134.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SID-History Injection" ;
    ns1:attack-id "T1134.005" ;
    ns1:definition "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens)." ;
    ns1:modifies ns1:AccessControlConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1134 .

ns1:T1135 a owl:Class ;
    rdfs:label "Network Share Discovery" ;
    ns1:attack-id "T1135" ;
    ns1:definition "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1136.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Account" ;
    ns1:attack-id "T1136.001" ;
    ns1:creates ns1:LocalUserAccount ;
    ns1:definition "Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service." ;
    rdfs:subClassOf [ ],
        ns1:T1136 .

ns1:T1136.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Account" ;
    ns1:attack-id "T1136.002" ;
    ns1:creates ns1:DomainUserAccount ;
    ns1:definition "Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.(Citation: Savill 1999)" ;
    rdfs:subClassOf [ ],
        ns1:T1136 .

ns1:T1136.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Account" ;
    ns1:attack-id "T1136.003" ;
    ns1:creates ns1:CloudUserAccount ;
    ns1:definition "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)" ;
    rdfs:subClassOf [ ],
        ns1:T1136 .

ns1:T1137.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Template Macros" ;
    ns1:attack-id "T1137.001" ;
    ns1:definition "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)" ;
    ns1:may-add ns1:ExecutableScript ;
    ns1:may-modify ns1:ExecutableScript,
        ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1137 .

ns1:T1137.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Test" ;
    ns1:attack-id "T1137.002" ;
    ns1:definition "Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outlook Forms" ;
    ns1:adds ns1:OfficeApplicationFile ;
    ns1:attack-id "T1137.003" ;
    ns1:definition "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)" ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outlook Home Page" ;
    ns1:attack-id "T1137.004" ;
    ns1:definition "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)" ;
    ns1:modifies ns1:ApplicationConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outlook Rules" ;
    ns1:attack-id "T1137.005" ;
    ns1:definition "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)" ;
    ns1:modifies ns1:ApplicationConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1137 .

ns1:T1137.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Add-ins" ;
    ns1:adds ns1:Software ;
    ns1:attack-id "T1137.006" ;
    ns1:definition "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)" ;
    ns1:may-modify ns1:SystemConfigurationDatabase ;
    ns1:modifies ns1:OfficeApplication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1137 .

ns1:T1138 a owl:Class ;
    rdfs:label "Application Shimming" ;
    ns1:attack-id "T1138" ;
    ns1:definition "The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017) Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses [Hooking](https://attack.mitre.org/techniques/T1179) to redirect the code as necessary in order to communicate with the OS." ;
    rdfs:comment "This technique has been revoked by T1546.011" ;
    rdfs:seeAlso "T1546.011" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1139 a owl:Class ;
    rdfs:label "Bash History" ;
    ns1:attack-id "T1139" ;
    ns1:definition "Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)" ;
    rdfs:comment "This technique has been revoked by T1552.003" ;
    rdfs:seeAlso "T1552.003" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1140 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Deobfuscate/Decode Files or Information" ;
    ns1:attack-id "T1140" ;
    ns1:definition "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system." ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-add ns1:ExecutableFile ;
    ns1:may-modify ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1141 a owl:Class ;
    rdfs:label "Input Prompt" ;
    ns1:attack-id "T1141" ;
    ns1:definition "When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1088))." ;
    rdfs:comment "This technique has been revoked by T1056.002" ;
    rdfs:seeAlso "T1056.002" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1142 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keychain" ;
    ns1:accesses ns1:EncryptedCredential ;
    ns1:attack-id "T1142" ;
    ns1:definition "Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in <code>~/Library/Keychains/</code>,<code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>. (Citation: Wikipedia keychain) The <code>security</code> command-line utility, which is built into macOS by default, provides a useful way to manage these credentials." ;
    rdfs:comment "This technique has been revoked by T1555.001" ;
    rdfs:seeAlso "T1555.001" ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1143 a owl:Class ;
    rdfs:label "Hidden Window" ;
    ns1:attack-id "T1143" ;
    ns1:definition "Adversaries may implement hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. Adversaries may abuse operating system functionality to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system." ;
    rdfs:comment "This technique has been revoked by T1564.003" ;
    rdfs:seeAlso "T1564.003" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1144 a owl:Class ;
    rdfs:label "Gatekeeper Bypass" ;
    ns1:attack-id "T1144" ;
    ns1:definition "In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called <code>com.apple.quarantine</code>. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution." ;
    rdfs:comment "This technique has been revoked by T1553.001" ;
    rdfs:seeAlso "T1553.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1145 a owl:Class ;
    rdfs:label "Private Keys" ;
    ns1:attack-id "T1145" ;
    ns1:definition "Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. (Citation: Wikipedia Public Key Crypto)" ;
    rdfs:comment "This technique has been revoked by T1552.004" ;
    rdfs:seeAlso "T1552.004" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1146 a owl:Class ;
    rdfs:label "Clear Command History" ;
    ns1:attack-id "T1146" ;
    ns1:definition "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. macOS and Linux both keep track of the commands users type in their terminal so that users can retrace what they've done. These logs can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Since everything typed on the command-line is saved, passwords passed in on the command line are also saved. Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs such as <code>unset HISTFILE</code>, <code>export HISTFILESIZE=0</code>, <code>history -c</code>, <code>rm ~/.bash_history</code>." ;
    rdfs:comment "This technique has been revoked by T1070.003" ;
    rdfs:seeAlso "T1070.003" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1147 a owl:Class ;
    rdfs:label "Hidden Users" ;
    ns1:attack-id "T1147" ;
    ns1:definition "Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account. There is a property value in <code>/Library/Preferences/com.apple.loginwindow</code> called <code>Hide500Users</code> that prevents users with userIDs 500 and lower from appearing at the login screen. By using the [Create Account](https://attack.mitre.org/techniques/T1136) technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily: <code>sudo dscl . -create /Users/username UniqueID 401</code> (Citation: Cybereason OSX Pirrit)." ;
    rdfs:comment "This technique has been revoked by T1564.002" ;
    rdfs:seeAlso "T1564.002" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1148 a owl:Class ;
    rdfs:label "HISTCONTROL" ;
    ns1:attack-id "T1148" ;
    ns1:definition "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands." ;
    rdfs:comment "This technique has been revoked by T1562.003" ;
    rdfs:seeAlso "T1562.003" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1149 a owl:Class ;
    rdfs:label "LC_MAIN Hijacking" ;
    ns1:attack-id "T1149" ;
    ns1:definition "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:comment "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1150 a owl:Class ;
    rdfs:label "Plist Modification" ;
    ns1:attack-id "T1150" ;
    ns1:definition "Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as <code>/Library/Preferences</code> (which execute with elevated privileges) and <code>~/Library/Preferences</code> (which execute with a user's privileges)." ;
    rdfs:comment "This technique has been revoked by T1547.011" ;
    rdfs:seeAlso "T1547.011" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1151 a owl:Class ;
    rdfs:label "Space after Filename" ;
    ns1:attack-id "T1151" ;
    ns1:definition "Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system. For example, if there is a Mach-O executable file called evil.bin, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to evil.txt, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to \"evil.txt \" (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back)." ;
    rdfs:comment "This technique has been revoked by T1036.006" ;
    rdfs:seeAlso "T1036.006" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1152 a owl:Class ;
    rdfs:label "Launchctl" ;
    ns1:attack-id "T1152" ;
    ns1:definition "Launchctl controls the macOS launchd process which handles things like launch agents and launch daemons, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input. By loading or reloading launch agents or launch daemons, adversaries can install persistence or execute changes they made  (Citation: Sofacy Komplex Trojan). Running a command from launchctl is as simple as <code>launchctl submit -l <labelName> -- /Path/to/thing/to/execute \"arg\" \"arg\" \"arg\"</code>. Loading, unloading, or reloading launch agents or launch daemons can require elevated privileges." ;
    rdfs:comment "This technique has been revoked by T1569.001" ;
    rdfs:seeAlso "T1569.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1153 a owl:Class ;
    rdfs:label "Source" ;
    ns1:attack-id "T1153" ;
    ns1:definition "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:comment "**This technique has been deprecated and should no longer be used.**" ;
    rdfs:subClassOf ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1154 a owl:Class ;
    rdfs:label "Trap" ;
    ns1:attack-id "T1154" ;
    ns1:definition "The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common  keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>. Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where \"command list\" will be executed when \"signals\" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)" ;
    rdfs:comment "This technique has been revoked by T1546.005" ;
    rdfs:seeAlso "T1546.005" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1155 a owl:Class ;
    rdfs:label "AppleScript" ;
    ns1:attack-id "T1155" ;
    ns1:definition "macOS and OS X applications send AppleEvent messages to each other for interprocess communications (IPC). These messages can be easily scripted with AppleScript for local or remote IPC. Osascript executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the <code>osalang</code> program." ;
    rdfs:comment "This technique has been revoked by T1059.002" ;
    rdfs:seeAlso "T1059.002" ;
    rdfs:subClassOf ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1156 a owl:Class ;
    rdfs:label "Malicious Shell Modification" ;
    ns1:attack-id "T1156" ;
    ns1:definition "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user’s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately." ;
    rdfs:comment "This technique has been revoked by T1546.004" ;
    rdfs:seeAlso "T1546.004" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1157 a owl:Class ;
    rdfs:label "Dylib Hijacking" ;
    ns1:attack-id "T1157" ;
    ns1:definition "macOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths. Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence." ;
    rdfs:comment "This technique has been revoked by T1574.004" ;
    rdfs:seeAlso "T1574.004" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1158 a owl:Class ;
    rdfs:label "Hidden Files and Directories" ;
    ns1:attack-id "T1158" ;
    ns1:definition "To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS)." ;
    rdfs:comment "This technique has been revoked by T1564.001" ;
    rdfs:seeAlso "T1564.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1159 a owl:Class ;
    rdfs:label "Launch Agent" ;
    ns1:attack-id "T1159" ;
    ns1:definition "Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>$HOME/Library/LaunchAgents</code> (Citation: AppleDocs Launch Agent Daemons) (Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware). These launch agents have property list files which point to the executables that will be launched (Citation: OSX.Dok Malware)." ;
    rdfs:comment "This technique has been revoked by T1543.001" ;
    rdfs:seeAlso "T1543.001" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1160 a owl:Class ;
    rdfs:label "Launch Daemon" ;
    ns1:attack-id "T1160" ;
    ns1:definition "Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in <code>/System/Library/LaunchDaemons</code> and <code>/Library/LaunchDaemons</code> (Citation: AppleDocs Launch Agent Daemons). These LaunchDaemons have property list files which point to the executables that will be launched (Citation: Methods of Mac Malware Persistence)." ;
    rdfs:comment "This technique has been revoked by T1543.004" ;
    rdfs:seeAlso "T1543.004" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1161 a owl:Class ;
    rdfs:label "LC_LOAD_DYLIB Addition" ;
    ns1:attack-id "T1161" ;
    ns1:definition "Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long adjustments are made to the rest of the fields and dependencies (Citation: Writing Bad Malware for OSX). There are tools available to perform these changes. Any changes will invalidate digital signatures on binaries because the binary is being modified. Adversaries can remediate this issue by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time (Citation: Malware Persistence on OS X)." ;
    rdfs:comment "This technique has been revoked by T1546.006" ;
    rdfs:seeAlso "T1546.006" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1162 a owl:Class ;
    rdfs:label "Login Item" ;
    ns1:attack-id "T1162" ;
    ns1:definition "MacOS provides the option to list specific applications to run when a user logs in. These applications run under the logged in user's context, and will be started every time the user logs in. Login items installed using the Service Management Framework are not visible in the System Preferences and can only be removed by the application that created them (Citation: Adding Login Items). Users have direct control over login items installed using a shared file list which are also visible in System Preferences (Citation: Adding Login Items). These login items are stored in the user's <code>~/Library/Preferences/</code> directory in a plist file called <code>com.apple.loginitems.plist</code> (Citation: Methods of Mac Malware Persistence). Some of these applications can open visible dialogs to the user, but they don’t all have to since there is an option to ‘Hide’ the window. If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in (Citation: Malware Persistence on OS X) (Citation: OSX.Dok Malware). The API method <code> SMLoginItemSetEnabled </code> can be used to set Login Items, but scripting languages like [AppleScript](https://attack.mitre.org/techniques/T1155) can do this as well  (Citation: Adding Login Items)." ;
    rdfs:comment "This technique has been revoked by T1547.011" ;
    rdfs:seeAlso "T1547.011" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1163 a owl:Class ;
    rdfs:label "Rc.common" ;
    ns1:attack-id "T1163" ;
    ns1:definition "During the boot process, macOS executes <code>source /etc/rc.common</code>, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings, and is thus recommended to include in the start of Startup Item Scripts (Citation: Startup Items). In macOS and OS X, this is now a deprecated technique in favor of launch agents and launch daemons, but is currently still used." ;
    rdfs:comment "This technique has been revoked by T1037.004" ;
    rdfs:seeAlso "T1037.004" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1164 a owl:Class ;
    rdfs:label "Re-opened Applications" ;
    ns1:attack-id "T1164" ;
    ns1:definition "Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user reboots their machine. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at <code>~/Library/Preferences/com.apple.loginwindow.plist</code> and <code>~/Library/Preferences/ByHost/com.apple.loginwindow.* .plist</code>." ;
    rdfs:comment "This technique has been revoked by T1547.007" ;
    rdfs:seeAlso "T1547.007" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1165 a owl:Class ;
    rdfs:label "Startup Items" ;
    ns1:attack-id "T1165" ;
    ns1:definition "Per Apple’s documentation, startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items (Citation: Startup Items). This is technically a deprecated version (superseded by Launch Daemons), and thus the appropriate folder, <code>/Library/StartupItems</code> isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory." ;
    rdfs:comment "This technique has been revoked by T1037.005" ;
    rdfs:seeAlso "T1037.005" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1166 a owl:Class ;
    rdfs:label "Setuid and Setgid" ;
    ns1:attack-id "T1166" ;
    ns1:definition "When the setuid or setgid bits are set on Linux or macOS for an application, this means that the application will run with the privileges of the owning user or group respectively  (Citation: setuid man page). Normally an application is run in the current user’s context, regardless of which user or group owns the application. There are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges. Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via <code>ls -l</code>. The <code>chmod</code> program can set these bits with via bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>." ;
    rdfs:comment "This technique has been revoked by T1548.001" ;
    rdfs:seeAlso "T1548.001" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1167 a owl:Class ;
    rdfs:label "Securityd Memory" ;
    ns1:attack-id "T1167" ;
    ns1:definition "In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. (Citation: OS X Keychain) (Citation: External to DA, the OS X Way) Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an attacker need only iterate over the other values to unlock the final password. (Citation: OS X Keychain)" ;
    rdfs:comment "This technique has been revoked by T1555.002" ;
    rdfs:seeAlso "T1555.002" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1168 a owl:Class ;
    rdfs:label "Local Job Scheduling" ;
    ns1:attack-id "T1168" ;
    ns1:definition "On Linux and macOS systems, multiple methods are supported for creating pre-scheduled and periodic background jobs: cron, (Citation: Die.net Linux crontab Man Page) at, (Citation: Die.net Linux at Man Page) and launchd. (Citation: AppleDocs Scheduling Timed Jobs) Unlike [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) on Windows systems, job scheduling on Linux-based systems cannot be done remotely unless used in conjunction within an established remote session, like secure shell (SSH)." ;
    rdfs:comment "This technique has been revoked by T1053" ;
    rdfs:seeAlso "T1053" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1169 a owl:Class ;
    rdfs:label "Sudo" ;
    ns1:attack-id "T1169" ;
    ns1:definition "The sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the idea of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code> (Citation: OSX.Dok Malware)." ;
    rdfs:comment "This technique has been revoked by T1548.003" ;
    rdfs:seeAlso "T1548.003" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1170 a owl:Class ;
    rdfs:label "Mshta" ;
    ns1:attack-id "T1170" ;
    ns1:definition "Mshta.exe is a utility that executes Microsoft HTML Applications (HTA). HTA files have the file extension <code>.hta</code>. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)" ;
    rdfs:comment "This technique has been revoked by T1218.005" ;
    rdfs:seeAlso "T1218.005" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1171 a owl:Class ;
    rdfs:label "LLMNR/NBT-NS Poisoning and Relay" ;
    ns1:attack-id "T1171" ;
    ns1:definition "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)" ;
    rdfs:comment "This technique has been revoked by T1557.001" ;
    rdfs:seeAlso "T1557.001" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1172 a owl:Class ;
    rdfs:label "Domain Fronting" ;
    ns1:attack-id "T1172" ;
    ns1:definition "Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) The technique involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored)." ;
    rdfs:comment "This technique has been revoked by T1090.004" ;
    rdfs:seeAlso "T1090.004" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1173 a owl:Class ;
    rdfs:label "Dynamic Data Exchange" ;
    ns1:attack-id "T1173" ;
    ns1:definition "Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution." ;
    rdfs:comment "This technique has been revoked by T1559.002" ;
    rdfs:seeAlso "T1559.002" ;
    rdfs:subClassOf ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1174 a owl:Class ;
    rdfs:label "Password Filter DLL" ;
    ns1:attack-id "T1174" ;
    ns1:definition "Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as dynamic link libraries (DLLs) containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts." ;
    rdfs:comment "This technique has been revoked by T1556.002" ;
    rdfs:seeAlso "T1556.002" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1175 a owl:Class ;
    rdfs:label "Component Object Model and Distributed COM" ;
    ns1:attack-id "T1175" ;
    ns1:definition "**This technique has been deprecated. Please use [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Component Object Model](https://attack.mitre.org/techniques/T1559/001).**" ;
    rdfs:comment "**This technique has been deprecated. Please use [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Component Object Model](https://attack.mitre.org/techniques/T1559/001).**" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1176 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Browser Extensions" ;
    ns1:attack-id "T1176" ;
    ns1:definition "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)" ;
    ns1:modifies ns1:BrowserExtension ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1177 a owl:Class ;
    rdfs:label "LSASS Driver" ;
    ns1:attack-id "T1177" ;
    ns1:definition "The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process. (Citation: Microsoft Security Subsystem)" ;
    rdfs:comment "This technique has been revoked by T1547.008" ;
    rdfs:seeAlso "T1547.008" ;
    rdfs:subClassOf ns1:ExecutionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1178 a owl:Class ;
    rdfs:label "SID-History Injection" ;
    ns1:attack-id "T1178" ;
    ns1:definition "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens)." ;
    rdfs:comment "This technique has been revoked by T1134.005" ;
    rdfs:seeAlso "T1134.005" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1179 a owl:Class ;
    rdfs:label "Hooking" ;
    ns1:attack-id "T1179" ;
    ns1:definition "Windows processes often leverage application programming interface (API) functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions." ;
    rdfs:comment "This technique has been revoked by T1056.004" ;
    rdfs:seeAlso "T1056.004" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1180 a owl:Class ;
    rdfs:label "Screensaver" ;
    ns1:attack-id "T1180" ;
    ns1:definition "Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\\Windows\\System32\\</code>, and <code>C:\\Windows\\sysWOW64\\</code> on 64-bit Windows systems, along with screensavers included with base Windows installations." ;
    rdfs:comment "This technique has been revoked by T1546.002" ;
    rdfs:seeAlso "T1546.002" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1181 a owl:Class ;
    rdfs:label "Extra Window Memory Injection" ;
    ns1:attack-id "T1181" ;
    ns1:definition "Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). (Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of extra window memory (EWM) to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)" ;
    rdfs:comment "This technique has been revoked by T1055.011" ;
    rdfs:seeAlso "T1055.011" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1182 a owl:Class ;
    rdfs:label "AppCert DLLs" ;
    ns1:attack-id "T1182" ;
    ns1:definition "Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec. (Citation: Elastic Process Injection July 2017)" ;
    rdfs:comment "This technique has been revoked by T1546.009" ;
    rdfs:seeAlso "T1546.009" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1183 a owl:Class ;
    rdfs:label "Image File Execution Options Injection" ;
    ns1:attack-id "T1183" ;
    ns1:definition "Image File Execution Options (IFEO) enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., “C:\\dbg\\ntsd.exe -g  notepad.exe”). (Citation: Microsoft Dev Blog IFEO Mar 2010)" ;
    rdfs:comment "This technique has been revoked by T1546.012" ;
    rdfs:seeAlso "T1546.012" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1184 a owl:Class ;
    rdfs:label "SSH Hijacking" ;
    ns1:attack-id "T1184" ;
    ns1:definition "Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair." ;
    rdfs:comment "This technique has been revoked by T1563.001" ;
    rdfs:seeAlso "T1563.001" ;
    rdfs:subClassOf ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1185 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Browser Session Hijacking" ;
    ns1:attack-id "T1185" ;
    ns1:definition "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)" ;
    ns1:produces ns1:WebNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1186 a owl:Class ;
    rdfs:label "Process Doppelgänging" ;
    ns1:attack-id "T1186" ;
    ns1:definition "Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)" ;
    rdfs:comment "This technique has been revoked by T1055.013" ;
    rdfs:seeAlso "T1055.013" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1187 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Forced Authentication" ;
    ns1:attack-id "T1187" ;
    ns1:definition "Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept." ;
    ns1:may-modify ns1:WindowsShortcutFile ;
    ns1:modifies ns1:AuthenticationLog ;
    ns1:produces ns1:Authentication ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1188 a owl:Class ;
    rdfs:label "Multi-hop Proxy" ;
    ns1:attack-id "T1188" ;
    ns1:definition "To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source." ;
    rdfs:comment "This technique has been revoked by T1090.003" ;
    rdfs:seeAlso "T1090.003" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1189 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Drive-by Compromise" ;
    ns1:attack-id "T1189" ;
    ns1:definition "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001)." ;
    ns1:modifies ns1:ProcessSegment ;
    ns1:produces ns1:OutboundInternetNetworkTraffic,
        ns1:URL ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:InitialAccessTechnique .

ns1:T1190 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploit Public-Facing Application" ;
    ns1:attack-id "T1190" ;
    ns1:definition "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration." ;
    ns1:injects ns1:DatabaseQuery ;
    ns1:modifies ns1:ProcessSegment ;
    ns1:produces ns1:InboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:InitialAccessTechnique .

ns1:T1191 a owl:Class ;
    rdfs:label "CMSTP" ;
    ns1:attack-id "T1191" ;
    ns1:definition "The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections." ;
    rdfs:comment "This technique has been revoked by T1218.003" ;
    rdfs:seeAlso "T1218.003" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1192 a owl:Class ;
    rdfs:label "Spearphishing Link" ;
    ns1:attack-id "T1192" ;
    ns1:definition "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments." ;
    rdfs:comment "This technique has been revoked by T1566.002" ;
    rdfs:seeAlso "T1566.002" ;
    rdfs:subClassOf ns1:InitialAccessTechnique ;
    owl:deprecated true .

ns1:T1193 a owl:Class ;
    rdfs:label "Spearphishing Attachment" ;
    ns1:attack-id "T1193" ;
    ns1:definition "Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution." ;
    rdfs:comment "This technique has been revoked by T1566.001" ;
    rdfs:seeAlso "T1566.001" ;
    rdfs:subClassOf ns1:InitialAccessTechnique ;
    owl:deprecated true .

ns1:T1194 a owl:Class ;
    rdfs:label "Spearphishing via Service" ;
    ns1:attack-id "T1194" ;
    ns1:definition "Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels." ;
    rdfs:comment "This technique has been revoked by T1566.003" ;
    rdfs:seeAlso "T1566.003" ;
    rdfs:subClassOf ns1:InitialAccessTechnique ;
    owl:deprecated true .

ns1:T1195.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Software Dependencies and Development Tools" ;
    ns1:attack-id "T1195.001" ;
    ns1:definition "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)" ;
    ns1:modifies ns1:Software ;
    rdfs:subClassOf [ ],
        ns1:T1195 .

ns1:T1195.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Software Supply Chain" ;
    ns1:attack-id "T1195.002" ;
    ns1:definition "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version." ;
    ns1:modifies ns1:Software ;
    rdfs:subClassOf [ ],
        ns1:T1195 .

ns1:T1195.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Hardware Supply Chain" ;
    ns1:attack-id "T1195.003" ;
    ns1:definition "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals." ;
    ns1:modifies ns1:HardwareDevice ;
    rdfs:subClassOf [ ],
        ns1:T1195 .

ns1:T1196 a owl:Class ;
    rdfs:label "Control Panel Items" ;
    ns1:attack-id "T1196" ;
    ns1:definition "Windows Control Panel items are utilities that allow users to view and adjust computer settings. Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a CPlApplet function. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) (Citation: TrendMicro CPL Malware Dec 2013)" ;
    rdfs:comment "This technique has been revoked by T1218.002" ;
    rdfs:seeAlso "T1218.002" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1197 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "BITS Jobs" ;
    ns1:attack-id "T1197" ;
    ns1:definition "Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations." ;
    ns1:may-produce ns1:IntranetIPCNetworkTraffic,
        ns1:IntranetWebNetworkTraffic,
        ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1198 a owl:Class ;
    rdfs:label "SIP and Trust Provider Hijacking" ;
    ns1:attack-id "T1198" ;
    ns1:definition "In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)" ;
    rdfs:comment "This technique has been revoked by T1553.003" ;
    rdfs:seeAlso "T1553.003" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1199 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trusted Relationship" ;
    ns1:attack-id "T1199" ;
    ns1:creates ns1:LoginSession ;
    ns1:definition "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network." ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:InitialAccessTechnique .

ns1:T1200 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Additions" ;
    ns1:attack-id "T1200" ;
    ns1:connects ns1:HardwareDevice ;
    ns1:definition "Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused." ;
    rdfs:subClassOf [ ],
        ns1:InitialAccessTechnique .

ns1:T1201 a owl:Class ;
    rdfs:label "Password Policy Discovery" ;
    ns1:attack-id "T1201" ;
    ns1:definition "Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts)." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1202 a owl:Class ;
    rdfs:label "Indirect Command Execution" ;
    ns1:attack-id "T1202" ;
    ns1:definition "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1203 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Client Execution" ;
    ns1:attack-id "T1203" ;
    ns1:definition "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility." ;
    ns1:modifies ns1:ProcessCodeSegment,
        ns1:StackFrame ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionTechnique .

ns1:T1204.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Malicious Link" ;
    ns1:accesses ns1:URL ;
    ns1:attack-id "T1204.001" ;
    ns1:definition "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002)." ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1204 .

ns1:T1204.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Malicious File" ;
    ns1:attack-id "T1204.002" ;
    ns1:definition "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl." ;
    ns1:executes ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1204 .

ns1:T1204.003 a owl:Class ;
    rdfs:label "Malicious Image" ;
    ns1:attack-id "T1204.003" ;
    ns1:definition "Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.(Citation: Summit Route Malicious AMIs)" ;
    rdfs:subClassOf ns1:T1204 .

ns1:T1205.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Port Knocking" ;
    ns1:attack-id "T1205.001" ;
    ns1:definition "Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software." ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1205 .

ns1:T1205.002 a owl:Class ;
    rdfs:label "Socket Filters" ;
    ns1:attack-id "T1205.002" ;
    ns1:definition "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell." ;
    rdfs:subClassOf ns1:T1205 .

ns1:T1206 a owl:Class ;
    rdfs:label "Sudo Caching" ;
    ns1:attack-id "T1206" ;
    ns1:definition "The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\" (Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code> that is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again)." ;
    rdfs:comment "This technique has been revoked by T1548.003" ;
    rdfs:seeAlso "T1548.003" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1207 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rogue Domain Controller" ;
    ns1:attack-id "T1207" ;
    ns1:definition "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys." ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1208 a owl:Class ;
    rdfs:label "Kerberoasting" ;
    ns1:attack-id "T1208" ;
    ns1:definition "Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service (Citation: Microsoft Detecting Kerberoasting Feb 2018)). (Citation: Microsoft SPN) (Citation: Microsoft SetSPN) (Citation: SANS Attacking Kerberos Nov 2014) (Citation: Harmj0y Kerberoast Nov 2016)" ;
    rdfs:comment "This technique has been revoked by T1558.003" ;
    rdfs:seeAlso "T1558.003" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1209 a owl:Class ;
    rdfs:label "Time Providers" ;
    ns1:attack-id "T1209" ;
    ns1:definition "The Windows Time service (W32Time) enables time synchronization across and within domains. (Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients. (Citation: Microsoft TimeProvider)" ;
    rdfs:comment "This technique has been revoked by T1547.003" ;
    rdfs:seeAlso "T1547.003" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1210 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation of Remote Services" ;
    ns1:attack-id "T1210" ;
    ns1:definition "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system." ;
    ns1:may-modify ns1:ProcessCodeSegment,
        ns1:ProcessSegment,
        ns1:StackFrame ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:LateralMovementTechnique .

ns1:T1211 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Defense Evasion" ;
    ns1:attack-id "T1211" ;
    ns1:definition "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them." ;
    ns1:may-modify ns1:ProcessCodeSegment,
        ns1:StackFrame ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1212 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exploitation for Credential Access" ;
    ns1:attack-id "T1212" ;
    ns1:definition "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. " ;
    ns1:may-access ns1:AuthenticationService,
        ns1:CredentialManagementSystem ;
    ns1:may-modify ns1:ProcessCodeSegment,
        ns1:StackFrame ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1213.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Confluence" ;
    ns1:accesses ns1:WebFileResource ;
    ns1:attack-id "T1213.001" ;
    ns1:definition "" ;
    rdfs:subClassOf [ ],
        ns1:T1213 .

ns1:T1213.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sharepoint" ;
    ns1:accesses ns1:WebFileResource ;
    ns1:attack-id "T1213.002" ;
    ns1:definition "Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:" ;
    rdfs:subClassOf [ ],
        ns1:T1213 .

ns1:T1213.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Code Repositories" ;
    ns1:attack-id "T1213.003" ;
    ns1:definition "Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git." ;
    ns1:reads ns1:CodeRepository ;
    rdfs:subClassOf [ ],
        ns1:T1213 .

ns1:T1213.004 a owl:Class ;
    rdfs:label "Customer Relationship Management Software" ;
    ns1:attack-id "T1213.004" ;
    ns1:definition "Adversaries may leverage Customer Relationship Management (CRM) software to mine valuable information. CRM software is used to assist organizations in tracking and managing customer interactions, as well as storing customer data." ;
    rdfs:subClassOf ns1:T1213 .

ns1:T1213.005 a owl:Class ;
    rdfs:label "Messaging Applications" ;
    ns1:attack-id "T1213.005" ;
    ns1:definition "Adversaries may leverage chat and messaging applications, such as Microsoft Teams, Google Chat, and Slack, to mine valuable information." ;
    rdfs:subClassOf ns1:T1213 .

ns1:T1214 a owl:Class ;
    rdfs:label "Credentials in Registry" ;
    ns1:attack-id "T1214" ;
    ns1:definition "The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons." ;
    rdfs:comment "This technique has been revoked by T1552.002" ;
    rdfs:seeAlso "T1552.002" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1215 a owl:Class ;
    rdfs:label "Kernel Modules and Extensions" ;
    ns1:attack-id "T1215" ;
    ns1:definition "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming) When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide) Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)" ;
    rdfs:comment "This technique has been revoked by T1547.006" ;
    rdfs:seeAlso "T1547.006" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1216.001 a owl:Class ;
    rdfs:label "PubPrn" ;
    ns1:attack-id "T1216.001" ;
    ns1:definition "Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn)" ;
    rdfs:subClassOf ns1:T1216 .

ns1:T1216.002 a owl:Class ;
    rdfs:label "SyncAppvPublishingServer" ;
    ns1:attack-id "T1216.002" ;
    ns1:definition "Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V).(Citation: 1 - appv) For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally.(Citation: 2 - appv)(Citation: 3 - appv)" ;
    rdfs:subClassOf ns1:T1216 .

ns1:T1217 a owl:Class ;
    rdfs:label "Browser Information Discovery" ;
    ns1:attack-id "T1217" ;
    ns1:definition "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1218.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compiled HTML File" ;
    ns1:attack-id "T1218.001" ;
    ns1:definition "Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)" ;
    ns1:invokes ns1:CreateFile,
        ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Control Panel" ;
    ns1:attack-id "T1218.002" ;
    ns1:definition "Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings." ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-modify ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "CMSTP" ;
    ns1:attack-id "T1218.003" ;
    ns1:definition "Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections." ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-produce ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.004 a owl:Class ;
    rdfs:label "InstallUtil" ;
    ns1:attack-id "T1218.004" ;
    ns1:definition "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>." ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mshta" ;
    ns1:attack-id "T1218.005" ;
    ns1:definition "Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017)" ;
    ns1:interprets ns1:MicrosoftHTMLApplication ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.007 a owl:Class ;
    rdfs:label "Msiexec" ;
    ns1:attack-id "T1218.007" ;
    ns1:definition "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) The Msiexec.exe binary may also be digitally signed by Microsoft." ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.008 a owl:Class ;
    rdfs:label "Odbcconf" ;
    ns1:attack-id "T1218.008" ;
    ns1:definition "Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) The Odbcconf.exe binary may be digitally signed by Microsoft." ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.009 a owl:Class ;
    rdfs:label "Regsvcs/Regasm" ;
    ns1:attack-id "T1218.009" ;
    ns1:definition "Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.010 a owl:Class ;
    rdfs:label "Regsvr32" ;
    ns1:attack-id "T1218.010" ;
    ns1:definition "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. (Citation: Microsoft Regsvr32)" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Rundll32" ;
    ns1:attack-id "T1218.011" ;
    ns1:definition "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>)." ;
    ns1:invokes ns1:CreateProcess ;
    ns1:loads ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.012 a owl:Class ;
    rdfs:label "Verclsid" ;
    ns1:attack-id "T1218.012" ;
    ns1:definition "Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.(Citation: WinOSBite verclsid.exe)" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1218.013 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mavinject" ;
    ns1:attack-id "T1218.013" ;
    ns1:definition "Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)" ;
    ns1:invokes ns1:CreateThread ;
    ns1:modifies ns1:ProcessSegment ;
    rdfs:seeAlso <https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "MMC" ;
    ns1:attack-id "T1218.014" ;
    ns1:definition "Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)" ;
    ns1:executes ns1:Command ;
    ns1:may-add ns1:Software ;
    ns1:may-modify ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1218 .

ns1:T1218.015 a owl:Class ;
    rdfs:label "Electron Applications" ;
    ns1:attack-id "T1218.015" ;
    ns1:definition "Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams.(Citation: Electron 2) Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS.(Citation: Electron 3) The Chromium engine is used to display web content and Node.js runs the backend code.(Citation: Electron 1)" ;
    rdfs:subClassOf ns1:T1218 .

ns1:T1219 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Access Software" ;
    ns1:attack-id "T1219" ;
    ns1:definition "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1220 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "XSL Script Processing" ;
    ns1:adds ns1:File ;
    ns1:attack-id "T1220" ;
    ns1:definition "Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)" ;
    ns1:interprets ns1:ExecutableScript ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1221 a owl:Class ;
    rdfs:label "Template Injection" ;
    ns1:attack-id "T1221" ;
    ns1:definition "Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.(Citation: Microsoft Open XML July 2017)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1222.001 a owl:Class ;
    rdfs:label "Windows File and Directory Permissions Modification" ;
    ns1:attack-id "T1222.001" ;
    ns1:definition "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)." ;
    rdfs:subClassOf ns1:T1222 .

ns1:T1222.002 a owl:Class ;
    rdfs:label "Linux and Mac File and Directory Permissions Modification" ;
    ns1:attack-id "T1222.002" ;
    ns1:definition "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)." ;
    rdfs:subClassOf ns1:T1222 .

ns1:T1223 a owl:Class ;
    rdfs:label "Compiled HTML File" ;
    ns1:attack-id "T1223" ;
    ns1:definition "Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)" ;
    rdfs:comment "This technique has been revoked by T1218.001" ;
    rdfs:seeAlso "T1218.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique ;
    owl:deprecated true .

ns1:T1480.001 a owl:Class ;
    rdfs:label "Environmental Keying" ;
    ns1:attack-id "T1480.001" ;
    ns1:definition "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)" ;
    rdfs:subClassOf ns1:T1480 .

ns1:T1480.002 a owl:Class ;
    rdfs:label "Mutual Exclusion" ;
    ns1:attack-id "T1480.002" ;
    ns1:definition "Adversaries may constrain execution or actions based on the presence of a mutex associated with malware. A mutex is a locking mechanism used to synchronize access to a resource. Only one thread or process can acquire a mutex at a given time.(Citation: Microsoft Mutexes)" ;
    rdfs:subClassOf ns1:T1480 .

ns1:T1482 a owl:Class ;
    rdfs:label "Domain Trust Discovery" ;
    ns1:attack-id "T1482" ;
    ns1:definition "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)" ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1483 a owl:Class ;
    rdfs:label "Domain Generation Algorithms" ;
    ns1:attack-id "T1483" ;
    ns1:definition "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)" ;
    rdfs:comment "This technique has been revoked by T1568.002" ;
    rdfs:seeAlso "T1568.002" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique ;
    owl:deprecated true .

ns1:T1484.001 a owl:Class ;
    rdfs:label "Group Policy Modification" ;
    ns1:attack-id "T1484.001" ;
    ns1:definition "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)" ;
    rdfs:subClassOf ns1:T1484 .

ns1:T1484.002 a owl:Class ;
    rdfs:label "Trust Modification" ;
    ns1:attack-id "T1484.002" ;
    ns1:definition "Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains." ;
    rdfs:subClassOf ns1:T1484 .

ns1:T1485.001 a owl:Class ;
    rdfs:label "Lifecycle-Triggered Deletion" ;
    ns1:attack-id "T1485.001" ;
    ns1:definition "Adversaries may modify the lifecycle policies of a cloud storage bucket to destroy all objects stored within." ;
    rdfs:subClassOf ns1:T1485 .

ns1:T1486 a owl:Class ;
    rdfs:label "Data Encrypted for Impact" ;
    ns1:attack-id "T1486" ;
    ns1:definition "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1487 a owl:Class ;
    rdfs:label "Disk Structure Wipe" ;
    ns1:attack-id "T1487" ;
    ns1:definition "Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources." ;
    rdfs:comment "This technique has been revoked by T1561.002" ;
    rdfs:seeAlso "T1561.002" ;
    rdfs:subClassOf ns1:ImpactTechnique ;
    owl:deprecated true .

ns1:T1488 a owl:Class ;
    rdfs:label "Disk Content Wipe" ;
    ns1:attack-id "T1488" ;
    ns1:definition "Adversaries may erase the contents of storage devices on specific systems as well as large numbers of systems in a network to interrupt availability to system and network resources." ;
    rdfs:comment "This technique has been revoked by T1561.001" ;
    rdfs:seeAlso "T1561.001" ;
    rdfs:subClassOf ns1:ImpactTechnique ;
    owl:deprecated true .

ns1:T1489 a owl:Class ;
    rdfs:label "Service Stop" ;
    ns1:attack-id "T1489" ;
    ns1:definition "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster)" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1490 a owl:Class ;
    rdfs:label "Inhibit System Recovery" ;
    ns1:attack-id "T1490" ;
    ns1:definition "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options." ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1491.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internal Defacement" ;
    ns1:attack-id "T1491.001" ;
    ns1:definition "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)" ;
    ns1:modifies ns1:Resource ;
    rdfs:subClassOf [ ],
        ns1:T1491 .

ns1:T1491.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "External Defacement" ;
    ns1:attack-id "T1491.002" ;
    ns1:definition "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)" ;
    ns1:modifies ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:T1491 .

ns1:T1492 a owl:Class ;
    rdfs:label "Stored Data Manipulation" ;
    ns1:attack-id "T1492" ;
    ns1:definition "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making." ;
    rdfs:comment "This technique has been revoked by T1565.001" ;
    rdfs:seeAlso "T1565.001" ;
    rdfs:subClassOf ns1:ImpactTechnique ;
    owl:deprecated true .

ns1:T1493 a owl:Class ;
    rdfs:label "Transmitted Data Manipulation" ;
    ns1:attack-id "T1493" ;
    ns1:definition "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making." ;
    rdfs:comment "This technique has been revoked by T1565.002" ;
    rdfs:seeAlso "T1565.002" ;
    rdfs:subClassOf ns1:ImpactTechnique ;
    owl:deprecated true .

ns1:T1494 a owl:Class ;
    rdfs:label "Runtime Data Manipulation" ;
    ns1:attack-id "T1494" ;
    ns1:definition "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making." ;
    rdfs:comment "This technique has been revoked by T1565.003" ;
    rdfs:seeAlso "T1565.003" ;
    rdfs:subClassOf ns1:ImpactTechnique ;
    owl:deprecated true .

ns1:T1495 a owl:Class ;
    rdfs:label "Firmware Corruption" ;
    ns1:attack-id "T1495" ;
    ns1:definition "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards." ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1496.001 a owl:Class ;
    rdfs:label "Compute Hijacking" ;
    ns1:attack-id "T1496.001" ;
    ns1:definition "Adversaries may leverage the compute resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability." ;
    rdfs:subClassOf ns1:T1496 .

ns1:T1496.002 a owl:Class ;
    rdfs:label "Bandwidth Hijacking" ;
    ns1:attack-id "T1496.002" ;
    ns1:definition "Adversaries may leverage the network bandwidth resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability." ;
    rdfs:subClassOf ns1:T1496 .

ns1:T1496.003 a owl:Class ;
    rdfs:label "SMS Pumping" ;
    ns1:attack-id "T1496.003" ;
    ns1:definition "Adversaries may leverage messaging services for SMS pumping, which may impact system and/or hosted service availability.(Citation: Twilio SMS Pumping) SMS pumping is a type of telecommunications fraud whereby a threat actor first obtains a set of phone numbers from a telecommunications provider, then leverages a victim’s messaging infrastructure to send large amounts of SMS messages to numbers in that set. By generating SMS traffic to their phone number set, a threat actor may earn payments from the telecommunications provider.(Citation: Twilio SMS Pumping Fraud)" ;
    rdfs:subClassOf ns1:T1496 .

ns1:T1496.004 a owl:Class ;
    rdfs:label "Cloud Service Hijacking" ;
    ns1:attack-id "T1496.004" ;
    ns1:definition "Adversaries may leverage compromised software-as-a-service (SaaS) applications to complete resource-intensive tasks, which may impact hosted service availability." ;
    rdfs:subClassOf ns1:T1496 .

ns1:T1497.001 a owl:Class ;
    rdfs:label "System Checks" ;
    ns1:attack-id "T1497.001" ;
    ns1:definition "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)" ;
    rdfs:subClassOf ns1:T1497 .

ns1:T1497.002 a owl:Class ;
    rdfs:label "User Activity Based Checks" ;
    ns1:attack-id "T1497.002" ;
    ns1:definition "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)" ;
    rdfs:subClassOf ns1:T1497 .

ns1:T1497.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Time Based Evasion" ;
    ns1:attack-id "T1497.003" ;
    ns1:definition "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time." ;
    ns1:may-invoke ns1:GetSystemTime ;
    ns1:may-run ns1:SystemTimeApplication ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1497 .

ns1:T1498.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Direct Network Flood" ;
    ns1:attack-id "T1498.001" ;
    ns1:creates ns1:InboundInternetNetworkTraffic ;
    ns1:definition "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well." ;
    rdfs:subClassOf [ ],
        ns1:T1498 .

ns1:T1498.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reflection Amplification" ;
    ns1:attack-id "T1498.002" ;
    ns1:definition "Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network." ;
    ns1:produces ns1:InboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1498 .

ns1:T1499.001 a owl:Class ;
    rdfs:label "OS Exhaustion Flood" ;
    ns1:attack-id "T1499.001" ;
    ns1:definition "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes." ;
    rdfs:subClassOf ns1:T1499 .

ns1:T1499.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Exhaustion Flood" ;
    ns1:attack-id "T1499.002" ;
    ns1:definition "Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service." ;
    ns1:produces ns1:InboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1498 .

ns1:T1499.003 a owl:Class ;
    rdfs:label "Application Exhaustion Flood" ;
    ns1:attack-id "T1499.003" ;
    ns1:definition "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)" ;
    rdfs:subClassOf ns1:T1499 .

ns1:T1499.004 a owl:Class ;
    rdfs:label "Application or System Exploitation" ;
    ns1:attack-id "T1499.004" ;
    ns1:definition "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition." ;
    rdfs:subClassOf ns1:T1499 .

ns1:T1500 a owl:Class ;
    rdfs:label "Compile After Delivery" ;
    ns1:attack-id "T1500" ;
    ns1:definition "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Similar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)" ;
    rdfs:comment "This technique has been revoked by T1027.004" ;
    rdfs:seeAlso "T1027.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1501 a owl:Class ;
    rdfs:label "Systemd Service" ;
    ns1:attack-id "T1501" ;
    ns1:definition "Systemd services can be used to establish persistence on a Linux system. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems." ;
    rdfs:comment "This technique has been revoked by T1543.002" ;
    rdfs:seeAlso "T1543.002" ;
    rdfs:subClassOf ns1:PersistenceTechnique ;
    owl:deprecated true .

ns1:T1502 a owl:Class ;
    rdfs:label "Parent PID Spoofing" ;
    ns1:attack-id "T1502" ;
    ns1:definition "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)" ;
    rdfs:comment "This technique has been revoked by T1134.004" ;
    rdfs:seeAlso "T1134.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1503 a owl:Class ;
    rdfs:label "Credentials from Web Browsers" ;
    ns1:attack-id "T1503" ;
    ns1:definition "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.  (Citation: Talos Olympic Destroyer 2018)" ;
    rdfs:comment "This technique has been revoked by T1555.003" ;
    rdfs:seeAlso "T1555.003" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1504 a owl:Class ;
    rdfs:label "PowerShell Profile" ;
    ns1:attack-id "T1504" ;
    ns1:definition "Adversaries may gain persistence and elevate privileges in certain situations by abusing [PowerShell](https://attack.mitre.org/techniques/T1086) profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments. PowerShell supports several profiles depending on the user or host program. For example, there can be different profiles for PowerShell host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles)" ;
    rdfs:comment "This technique has been revoked by T1546.013" ;
    rdfs:seeAlso "T1546.013" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1505.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SQL Stored Procedures" ;
    ns1:attack-id "T1505.001" ;
    ns1:creates ns1:StoredProcedure ;
    ns1:definition "Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted)." ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1505 .

ns1:T1505.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Transport Agent" ;
    ns1:adds ns1:MessageTransferAgent ;
    ns1:attack-id "T1505.002" ;
    ns1:definition "Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks." ;
    ns1:modifies ns1:MailServer ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1505 .

ns1:T1505.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Shell" ;
    ns1:adds ns1:WebScriptFile ;
    ns1:attack-id "T1505.003" ;
    ns1:definition "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)" ;
    ns1:modifies ns1:WebServer ;
    ns1:produces ns1:Process ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1505 .

ns1:T1505.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IIS Components" ;
    ns1:adds ns1:Software ;
    ns1:attack-id "T1505.004" ;
    ns1:definition "Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: IIS Backdoor 2011)(Citation: Trustwave IIS Module 2013)" ;
    rdfs:subClassOf [ ],
        ns1:T1505 .

ns1:T1505.005 a owl:Class ;
    rdfs:label "Terminal Services DLL" ;
    ns1:attack-id "T1505.005" ;
    ns1:definition "Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.(Citation: Microsoft Remote Desktop Services)" ;
    rdfs:subClassOf ns1:T1505 .

ns1:T1506 a owl:Class ;
    rdfs:label "Web Session Cookie" ;
    ns1:attack-id "T1506" ;
    ns1:definition "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)" ;
    rdfs:comment "This technique has been revoked by T1550.004" ;
    rdfs:seeAlso "T1550.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1514 a owl:Class ;
    rdfs:label "Elevated Execution with Prompt" ;
    ns1:attack-id "T1514" ;
    ns1:definition "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges." ;
    rdfs:comment "This technique has been revoked by T1548.004" ;
    rdfs:seeAlso "T1548.004" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1518.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Software Discovery" ;
    ns1:attack-id "T1518.001" ;
    ns1:definition "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions." ;
    ns1:may-access ns1:FileSystemMetadata,
        ns1:KernelProcessTable,
        ns1:SystemConfigurationDatabaseRecord,
        ns1:SystemFirewallConfiguration ;
    ns1:may-invoke ns1:GetRunningProcesses ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1518 .

ns1:T1519 a owl:Class ;
    rdfs:label "Emond" ;
    ns1:attack-id "T1519" ;
    ns1:definition "Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers. Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1160) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place. The rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1160) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)" ;
    rdfs:comment "This technique has been revoked by T1546.014" ;
    rdfs:seeAlso "T1546.014" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique ;
    owl:deprecated true .

ns1:T1522 a owl:Class ;
    rdfs:label "Cloud Instance Metadata API" ;
    ns1:attack-id "T1522" ;
    ns1:definition "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data." ;
    rdfs:comment "This technique has been revoked by T1552.005" ;
    rdfs:seeAlso "T1552.005" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique ;
    owl:deprecated true .

ns1:T1525 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Implant Internal Image" ;
    ns1:adds ns1:ContainerImage ;
    ns1:attack-id "T1525" ;
    ns1:definition "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)" ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1526 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Discovery" ;
    ns1:attack-id "T1526" ;
    ns1:definition "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs." ;
    ns1:reads ns1:CloudConfiguration ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1527 a owl:Class ;
    rdfs:label "Application Access Token" ;
    ns1:attack-id "T1527" ;
    ns1:definition "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials." ;
    rdfs:comment "This technique has been revoked by T1550.001" ;
    rdfs:seeAlso "T1550.001" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:LateralMovementTechnique ;
    owl:deprecated true .

ns1:T1528 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Steal Application Access Token" ;
    ns1:accesses ns1:AccessToken ;
    ns1:attack-id "T1528" ;
    ns1:definition "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources." ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1529 a owl:Class ;
    rdfs:label "System Shutdown/Reboot" ;
    ns1:attack-id "T1529" ;
    ns1:definition "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. <code>reload</code>).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A)" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1530 a owl:Class ;
    rdfs:label "Data from Cloud Storage" ;
    ns1:attack-id "T1530" ;
    ns1:definition "Adversaries may access data from cloud storage." ;
    rdfs:subClassOf ns1:CollectionTechnique .

ns1:T1531 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Account Access Removal" ;
    ns1:attack-id "T1531" ;
    ns1:definition "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)" ;
    ns1:modifies ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:ImpactTechnique .

ns1:T1534 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internal Spearphishing" ;
    ns1:attack-id "T1534" ;
    ns1:definition "After they already have access to accounts or systems within the environment, adversaries may use internal spearphishing to gain access to additional information or compromise other users within the same organization. Internal spearphishing is multi-staged campaign where a legitimate account is initially compromised either by controlling the user's device or by compromising the account credentials of the user. Adversaries may then attempt to take advantage of the trusted internal account to increase the likelihood of tricking more victims into falling for phish attempts, often incorporating [Impersonation](https://attack.mitre.org/techniques/T1656).(Citation: Trend Micro - Int SP)" ;
    ns1:produces ns1:Email ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1535 a owl:Class ;
    rdfs:label "Unused/Unsupported Cloud Regions" ;
    ns1:attack-id "T1535" ;
    ns1:definition "Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1536 a owl:Class ;
    rdfs:label "Revert Cloud Instance" ;
    ns1:attack-id "T1536" ;
    ns1:definition "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs." ;
    rdfs:comment "This technique has been revoked by T1578.004" ;
    rdfs:seeAlso "T1578.004" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique ;
    owl:deprecated true .

ns1:T1537 a owl:Class ;
    rdfs:label "Transfer Data to Cloud Account" ;
    ns1:attack-id "T1537" ;
    ns1:definition "Adversaries may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service." ;
    rdfs:subClassOf ns1:ExfiltrationTechnique .

ns1:T1538 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Service Dashboard" ;
    ns1:accesses ns1:CloudConfiguration ;
    ns1:attack-id "T1538" ;
    ns1:definition "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)" ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1539 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Steal Web Session Cookie" ;
    ns1:accesses ns1:SessionCookie ;
    ns1:attack-id "T1539" ;
    ns1:definition "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website." ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1542.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firmware" ;
    ns1:attack-id "T1542.001" ;
    ns1:definition "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)" ;
    ns1:modifies ns1:SystemFirmware ;
    rdfs:subClassOf [ ],
        ns1:T1542 .

ns1:T1542.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Component Firmware" ;
    ns1:attack-id "T1542.002" ;
    ns1:definition "Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking." ;
    ns1:modifies ns1:Firmware ;
    rdfs:subClassOf [ ],
        ns1:T1542 .

ns1:T1542.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bootkit" ;
    ns1:attack-id "T1542.003" ;
    ns1:definition "Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly." ;
    ns1:may-modify ns1:BootLoader,
        ns1:BootSector,
        ns1:VolumeBootRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1542 .

ns1:T1542.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "ROMMONkit" ;
    ns1:attack-id "T1542.004" ;
    ns1:definition "Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)" ;
    ns1:modifies ns1:SystemFirmware ;
    rdfs:subClassOf [ ],
        ns1:T1542 .

ns1:T1542.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "TFTP Boot" ;
    ns1:attack-id "T1542.005" ;
    ns1:creates ns1:TFTPNetworkTraffic ;
    ns1:definition "Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images." ;
    rdfs:subClassOf [ ],
        ns1:T1542 .

ns1:T1543.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Launch Agent" ;
    ns1:attack-id "T1543.001" ;
    ns1:creates ns1:PropertyListFile ;
    ns1:definition "Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>~/Library/LaunchAgents</code>.(Citation: AppleDocs Launch Agent Daemons)(Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware) Property list files use the <code>Label</code>, <code>ProgramArguments </code>, and <code>RunAtLoad</code> keys to identify the Launch Agent's name, executable location, and execution time.(Citation: OSX.Dok Malware) Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks." ;
    rdfs:subClassOf [ ],
        ns1:T1543 .

ns1:T1543.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Systemd Service" ;
    ns1:attack-id "T1543.002" ;
    ns1:definition "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014) Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible." ;
    ns1:may-create ns1:OperatingSystemConfigurationFile ;
    ns1:may-modify ns1:OperatingSystemConfigurationFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1543 .

ns1:T1543.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Service" ;
    ns1:attack-id "T1543.003" ;
    ns1:definition "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry." ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1543 .

ns1:T1543.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Launch Daemon" ;
    ns1:attack-id "T1543.004" ;
    ns1:definition "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)" ;
    ns1:modifies ns1:PropertyListFile ;
    rdfs:subClassOf [ ],
        ns1:T1543 .

ns1:T1543.005 a owl:Class ;
    rdfs:label "Container Service" ;
    ns1:attack-id "T1543.005" ;
    ns1:definition "Adversaries may create or modify container or container cluster management tools that run as daemons, agents, or services on individual hosts. These include software for creating and managing individual containers, such as Docker and Podman, as well as container cluster node-level agents such as kubelet. By modifying these services, an adversary may be able to achieve persistence or escalate their privileges on a host." ;
    rdfs:subClassOf ns1:T1543 .

ns1:T1546.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Change Default File Association" ;
    ns1:attack-id "T1546.001" ;
    ns1:definition "Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened." ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Screensaver" ;
    ns1:attack-id "T1546.002" ;
    ns1:creates ns1:ExecutableFile ;
    ns1:definition "Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\\Windows\\System32\\</code>, and <code>C:\\Windows\\sysWOW64\\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations." ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Management Instrumentation Event Subscription" ;
    ns1:attack-id "T1546.003" ;
    ns1:definition "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user login, or the computer's uptime.(Citation: Mandiant M-Trends 2015)" ;
    ns1:modifies ns1:EventLog ;
    ns1:produces ns1:IntranetAdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Unix Shell Configuration Modification" ;
    ns1:attack-id "T1546.004" ;
    ns1:definition "Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (<code>/etc</code>) and the user’s home directory (<code>~/</code>) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately." ;
    ns1:modifies ns1:UserInitConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trap" ;
    ns1:attack-id "T1546.005" ;
    ns1:definition "Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>." ;
    ns1:executes ns1:Command ;
    ns1:may-create ns1:ExecutableScript ;
    ns1:may-modify ns1:ExecutableScript ;
    ns1:modifies ns1:EventLog ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LC_LOAD_DYLIB Addition" ;
    ns1:attack-id "T1546.006" ;
    ns1:definition "Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes." ;
    ns1:modifies ns1:ExecutableBinary ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Netsh Helper DLL" ;
    ns1:attack-id "T1546.007" ;
    ns1:definition "Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.(Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>." ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    ns1:produces ns1:Process ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Accessibility Features" ;
    ns1:attack-id "T1546.008" ;
    ns1:definition "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system." ;
    ns1:may-create ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:may-modify ns1:ExecutableBinary,
        ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "AppCert DLLs" ;
    ns1:attack-id "T1546.009" ;
    ns1:definition "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Elastic Process Injection July 2017)" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:loads ns1:SharedLibraryFile ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "AppInit DLLs" ;
    ns1:attack-id "T1546.010" ;
    ns1:definition "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)" ;
    ns1:invokes ns1:CreateProcess ;
    ns1:loads ns1:SharedLibraryFile ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Shimming" ;
    ns1:attack-id "T1546.011" ;
    ns1:creates ns1:Shim ;
    ns1:definition "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)" ;
    ns1:modifies ns1:ShimDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Image File Execution Options Injection" ;
    ns1:attack-id "T1546.012" ;
    ns1:definition "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)" ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.013 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "PowerShell Profile" ;
    ns1:attack-id "T1546.013" ;
    ns1:definition "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments." ;
    ns1:modifies ns1:PowerShellProfileScript ;
    rdfs:subClassOf [ ],
        ns1:T1546 .

ns1:T1546.014 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Emond" ;
    ns1:attack-id "T1546.014" ;
    ns1:definition "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place." ;
    ns1:may-create ns1:PropertyListFile ;
    ns1:may-modify ns1:PropertyListFile ;
    ns1:modifies ns1:ConfigurationResource ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.015 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Component Object Model Hijacking" ;
    ns1:attack-id "T1546.015" ;
    ns1:definition "Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry." ;
    ns1:loads ns1:ExecutableBinary ;
    ns1:modifies ns1:SystemConfigurationDatabase ;
    rdfs:seeAlso <http://dbpedia.org/resource/Component_Object_Model> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1546 .

ns1:T1546.016 a owl:Class ;
    rdfs:label "Installer Packages" ;
    ns1:attack-id "T1546.016" ;
    ns1:definition "Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.(Citation: Installer Package Scripting Rich Trouton)" ;
    rdfs:subClassOf ns1:T1546 .

ns1:T1546.017 a owl:Class ;
    rdfs:label "Udev Rules" ;
    ns1:attack-id "T1546.017" ;
    ns1:definition "Adversaries may maintain persistence through executing malicious content triggered using udev rules. Udev is the Linux kernel device manager that dynamically manages device nodes, handles access to pseudo-device files in the `/dev` directory, and responds to hardware events, such as when external devices like hard drives or keyboards are plugged in or removed. Udev uses rule files with `match keys` to specify the conditions a hardware event must meet and `action keys` to define the actions that should follow. Root permissions are required to create, modify, or delete rule files located in `/etc/udev/rules.d/`, `/run/udev/rules.d/`, `/usr/lib/udev/rules.d/`, `/usr/local/lib/udev/rules.d/`, and `/lib/udev/rules.d/`. Rule priority is determined by both directory and by the digit prefix in the rule filename.(Citation: Ignacio Udev research 2024)(Citation: Elastic Linux Persistence 2024)" ;
    rdfs:subClassOf ns1:T1546 .

ns1:T1547.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Registry Run Keys / Startup Folder" ;
    ns1:attack-id "T1547.001" ;
    ns1:definition "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level." ;
    ns1:may-modify ns1:SystemConfigurationInitDatabaseRecord,
        ns1:UserStartupScriptFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1547 .

ns1:T1547.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Package" ;
    ns1:attack-id "T1547.002" ;
    ns1:definition "Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.(Citation: MSDN Authentication Packages)" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Time Providers" ;
    ns1:attack-id "T1547.003" ;
    ns1:definition "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Winlogon Helper DLL" ;
    ns1:attack-id "T1547.004" ;
    ns1:definition "Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> and <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> are used to manage additional helper programs and functionalities that support Winlogon.(Citation: Cylance Reg Persistence Sept 2013)" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Support Provider" ;
    ns1:attack-id "T1547.005" ;
    ns1:definition "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs." ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel Modules and Extensions" ;
    ns1:attack-id "T1547.006" ;
    ns1:definition "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming) " ;
    ns1:modifies ns1:KernelModule ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Re-opened Applications" ;
    ns1:attack-id "T1547.007" ;
    ns1:definition "Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\".(Citation: Re-Open windows on Mac) When selected, all applications currently open are added to a property list file named <code>com.apple.loginwindow.[UUID].plist</code> within the <code>~/Library/Preferences/ByHost</code> directory.(Citation: Methods of Mac Malware Persistence)(Citation: Wardle Persistence Chapter) Applications listed in this file are automatically reopened upon the user’s next logon." ;
    ns1:modifies ns1:ApplicationConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LSASS Driver" ;
    ns1:attack-id "T1547.008" ;
    ns1:definition "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)" ;
    ns1:may-create ns1:SharedLibraryFile ;
    ns1:modifies ns1:SystemServiceSoftware ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1547 .

ns1:T1547.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shortcut Modification" ;
    ns1:attack-id "T1547.009" ;
    ns1:definition "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process." ;
    ns1:may-modify ns1:SymbolicLink,
        ns1:UserStartupScriptFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1547 .

ns1:T1547.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Port Monitors" ;
    ns1:attack-id "T1547.010" ;
    ns1:definition "Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded and run by the print spooler service, `spoolsv.exe`, under SYSTEM level permissions on boot.(Citation: Bloxham)" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1547.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Plist Modification" ;
    ns1:attack-id "T1547.011" ;
    ns1:definition "Adversaries can modify property list files (plist files) to execute their code as part of establishing persistence. Plist files are used by macOS applications to store properties and configuration settings for applications and services. Applications use information plist files, <code>Info.plist</code>, to tell the operating system how to handle the application at runtime using structured metadata in the form of keys and values. Plist files are formatted in XML and based on Apple's Core Foundation DTD and can be saved in text or binary format.(Citation: fileinfo plist file description)" ;
    ns1:modifies ns1:ApplicationConfigurationFile ;
    rdfs:comment "This technique has been revoked by T1647" ;
    rdfs:seeAlso "T1647" ;
    rdfs:subClassOf [ ],
        ns1:T1547 ;
    owl:deprecated true .

ns1:T1547.012 a owl:Class ;
    rdfs:label "Print Processors" ;
    ns1:attack-id "T1547.012" ;
    ns1:definition "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)" ;
    rdfs:subClassOf ns1:T1547 .

ns1:T1547.013 a owl:Class ;
    rdfs:label "XDG Autostart Entries" ;
    ns1:attack-id "T1547.013" ;
    ns1:definition "Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a user’s desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (`.desktop`) to configure the user’s desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media.(Citation: Free Desktop Application Autostart Feb 2006)(Citation: Free Desktop Entry Keys)" ;
    rdfs:subClassOf ns1:T1547 .

ns1:T1547.014 a owl:Class ;
    rdfs:label "Active Setup" ;
    ns1:attack-id "T1547.014" ;
    ns1:definition "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level." ;
    rdfs:subClassOf ns1:T1547 .

ns1:T1547.015 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Login Items" ;
    ns1:attack-id "T1547.015" ;
    ns1:definition "Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.(Citation: Open Login Items Apple) Login items can be added via a shared file list or Service Management Framework.(Citation: Adding Login Items) Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call <code>SMLoginItemSetEnabled</code>." ;
    ns1:modifies ns1:UserLogonInitResource ;
    rdfs:subClassOf [ ],
        ns1:T1547 .

ns1:T1548.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Setuid and Setgid" ;
    ns1:attack-id "T1548.001" ;
    ns1:definition "An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges." ;
    ns1:modifies ns1:AccessControlConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1548 .

ns1:T1548.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bypass User Account Control" ;
    ns1:attack-id "T1548.002" ;
    ns1:definition "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)" ;
    ns1:executes ns1:ExecutableFile ;
    ns1:invokes ns1:CreateProcess ;
    ns1:may-modify ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1548 .

ns1:T1548.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sudo and Sudo Caching" ;
    ns1:attack-id "T1548.003" ;
    ns1:definition "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges." ;
    ns1:may-modify ns1:EventLog ;
    ns1:modifies ns1:OperatingSystemConfigurationFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1548 .

ns1:T1548.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Elevated Execution with Prompt" ;
    ns1:attack-id "T1548.004" ;
    ns1:creates ns1:SystemConfigurationDatabase ;
    ns1:definition "Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified." ;
    ns1:invokes ns1:SystemCall ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1548 .

ns1:T1548.005 a owl:Class ;
    rdfs:label "Temporary Elevated Cloud Access" ;
    ns1:attack-id "T1548.005" ;
    ns1:definition "Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own." ;
    rdfs:subClassOf ns1:T1548 .

ns1:T1548.006 a owl:Class ;
    rdfs:label "TCC Manipulation" ;
    ns1:attack-id "T1548.006" ;
    ns1:definition "Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to execute malicious applications with elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA)." ;
    rdfs:subClassOf ns1:T1548 .

ns1:T1550.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Access Token" ;
    ns1:attack-id "T1550.001" ;
    ns1:definition "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials." ;
    ns1:may-produce ns1:NetworkTraffic ;
    ns1:uses ns1:AccessToken ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1550 .

ns1:T1550.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pass the Hash" ;
    ns1:attack-id "T1550.002" ;
    ns1:creates ns1:Authentication ;
    ns1:definition "Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash." ;
    rdfs:subClassOf [ ],
        ns1:T1550 .

ns1:T1550.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pass the Ticket" ;
    ns1:attack-id "T1550.003" ;
    ns1:creates ns1:Authentication ;
    ns1:definition "Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system." ;
    rdfs:subClassOf [ ],
        ns1:T1550 .

ns1:T1550.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Session Cookie" ;
    ns1:adds ns1:SessionCookie ;
    ns1:attack-id "T1550.004" ;
    ns1:definition "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)" ;
    ns1:produces ns1:WebNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1550 .

ns1:T1552.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials In Files" ;
    ns1:accesses ns1:File ;
    ns1:attack-id "T1552.001" ;
    ns1:definition "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords." ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials in Registry" ;
    ns1:accesses ns1:SystemConfigurationDatabase ;
    ns1:attack-id "T1552.002" ;
    ns1:definition "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons." ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bash History" ;
    ns1:accesses ns1:CommandHistoryLogFile ;
    ns1:attack-id "T1552.003" ;
    ns1:definition "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Private Keys" ;
    ns1:accesses ns1:PrivateKey ;
    ns1:attack-id "T1552.004" ;
    ns1:definition "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc." ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Instance Metadata API" ;
    ns1:accesses ns1:CloudInstanceMetadata ;
    ns1:attack-id "T1552.005" ;
    ns1:definition "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data." ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Group Policy Preferences" ;
    ns1:accesses ns1:GroupPolicy ;
    ns1:attack-id "T1552.006" ;
    ns1:definition "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)" ;
    rdfs:subClassOf [ ],
        ns1:T1552 .

ns1:T1552.007 a owl:Class ;
    rdfs:label "Container API" ;
    ns1:attack-id "T1552.007" ;
    ns1:definition "Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)" ;
    rdfs:subClassOf ns1:T1552 .

ns1:T1552.008 a owl:Class ;
    rdfs:label "Chat Messages" ;
    ns1:attack-id "T1552.008" ;
    ns1:definition "Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels." ;
    rdfs:subClassOf ns1:T1552 .

ns1:T1553.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Gatekeeper Bypass" ;
    ns1:attack-id "T1553.001" ;
    ns1:definition "Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.(Citation: TheEclecticLightCompany Quarantine and the flag)(Citation: TheEclecticLightCompany apple notarization )" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Code Signing" ;
    ns1:attack-id "T1553.002" ;
    ns1:definition "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature." ;
    ns1:enables ns1:TA0005 ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SIP and Trust Provider Hijacking" ;
    ns1:attack-id "T1553.003" ;
    ns1:definition "Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Install Root Certificate" ;
    ns1:attack-id "T1553.004" ;
    ns1:definition "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website." ;
    ns1:modifies ns1:CertificateTrustStore ;
    rdfs:subClassOf [ ],
        ns1:T1553 .

ns1:T1553.005 a owl:Class ;
    rdfs:label "Mark-of-the-Web Bypass" ;
    ns1:attack-id "T1553.005" ;
    ns1:definition "Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)" ;
    rdfs:subClassOf ns1:T1553 .

ns1:T1553.006 a owl:Class ;
    rdfs:label "Code Signing Policy Modification" ;
    ns1:attack-id "T1553.006" ;
    ns1:definition "Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system." ;
    rdfs:subClassOf ns1:T1553 .

ns1:T1555.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keychain" ;
    ns1:accesses ns1:MacOSKeychain ;
    ns1:attack-id "T1555.001" ;
    ns1:definition "Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service." ;
    rdfs:subClassOf [ ],
        ns1:T1555 .

ns1:T1555.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Securityd Memory" ;
    ns1:accesses ns1:In-memoryPasswordStore ;
    ns1:attack-id "T1555.002" ;
    ns1:definition "An adversary with root access may gather credentials by reading `securityd`’s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user’s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)" ;
    rdfs:subClassOf [ ],
        ns1:T1555 .

ns1:T1555.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials from Web Browsers" ;
    ns1:accesses ns1:DatabaseFile ;
    ns1:attack-id "T1555.003" ;
    ns1:definition "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers." ;
    ns1:may-access ns1:In-memoryPasswordStore ;
    ns1:may-invoke ns1:ReadFile ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1555 .

ns1:T1555.004 a owl:Class ;
    rdfs:label "Windows Credential Manager" ;
    ns1:attack-id "T1555.004" ;
    ns1:definition "Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)" ;
    rdfs:subClassOf ns1:T1555 .

ns1:T1555.005 a owl:Class ;
    rdfs:label "Password Managers" ;
    ns1:attack-id "T1555.005" ;
    ns1:definition "Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)" ;
    rdfs:subClassOf ns1:T1555 .

ns1:T1555.006 a owl:Class ;
    rdfs:label "Cloud Secrets Management Stores" ;
    ns1:attack-id "T1555.006" ;
    ns1:definition "Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault." ;
    rdfs:subClassOf ns1:T1555 .

ns1:T1556.001 a owl:Class ;
    rdfs:label "Domain Controller Authentication" ;
    ns1:attack-id "T1556.001" ;
    ns1:definition "Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts." ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Filter DLL" ;
    ns1:attack-id "T1556.002" ;
    ns1:creates ns1:SharedLibraryFile ;
    ns1:definition "Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated." ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1556 .

ns1:T1556.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pluggable Authentication Modules" ;
    ns1:attack-id "T1556.003" ;
    ns1:definition "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)" ;
    ns1:may-modify ns1:OperatingSystemConfigurationFile,
        ns1:OperatingSystemSharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1556 .

ns1:T1556.004 a owl:Class ;
    rdfs:label "Network Device Authentication" ;
    ns1:attack-id "T1556.004" ;
    ns1:definition "Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices." ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.005 a owl:Class ;
    rdfs:label "Reversible Encryption" ;
    ns1:attack-id "T1556.005" ;
    ns1:definition "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The <code>AllowReversiblePasswordEncryption</code> property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.(Citation: store_pwd_rev_enc)" ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.006 a owl:Class ;
    rdfs:label "Multi-Factor Authentication" ;
    ns1:attack-id "T1556.006" ;
    ns1:definition "Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts." ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.007 a owl:Class ;
    rdfs:label "Hybrid Identity" ;
    ns1:attack-id "T1556.007" ;
    ns1:definition "Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts." ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.008 a owl:Class ;
    rdfs:label "Network Provider DLL" ;
    ns1:attack-id "T1556.008" ;
    ns1:definition "Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions.(Citation: Network Provider API) During the logon process, Winlogon (the interactive logon module) sends credentials to the local `mpnotify.exe` process via RPC. The `mpnotify.exe` process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.(Citation: NPPSPY - Huntress)(Citation: NPPSPY Video)(Citation: NPLogonNotify)" ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1556.009 a owl:Class ;
    rdfs:label "Conditional Access Policies" ;
    ns1:attack-id "T1556.009" ;
    ns1:definition "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource." ;
    rdfs:subClassOf ns1:T1556 .

ns1:T1557.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LLMNR/NBT-NS Poisoning and SMB Relay" ;
    ns1:attack-id "T1557.001" ;
    ns1:definition "By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials." ;
    ns1:produces ns1:IntranetMulticastNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1557 .

ns1:T1557.002 a owl:Class ;
    rdfs:label "ARP Cache Poisoning" ;
    ns1:attack-id "T1557.002" ;
    ns1:definition "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002)." ;
    rdfs:subClassOf ns1:T1557 .

ns1:T1557.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DHCP Spoofing" ;
    ns1:attack-id "T1557.003" ;
    ns1:creates ns1:DHCPNetworkTraffic ;
    ns1:definition "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002)." ;
    rdfs:subClassOf [ ],
        ns1:T1557 .

ns1:T1557.004 a owl:Class ;
    rdfs:label "Evil Twin" ;
    ns1:attack-id "T1557.004" ;
    ns1:definition "Adversaries may host seemingly genuine Wi-Fi access points to deceive users into connecting to malicious networks as a way of supporting follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or [Input Capture](https://attack.mitre.org/techniques/T1056).(Citation: Australia ‘Evil Twin’)" ;
    rdfs:subClassOf ns1:T1557 .

ns1:T1558.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Golden Ticket" ;
    ns1:attack-id "T1558.001" ;
    ns1:definition "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection)" ;
    ns1:forges ns1:KerberosTicketGrantingTicket ;
    rdfs:subClassOf [ ],
        ns1:T1558 .

ns1:T1558.002 a owl:Class ;
    rdfs:label "Silver Ticket" ;
    ns1:attack-id "T1558.002" ;
    ns1:definition "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)" ;
    rdfs:subClassOf ns1:T1558 .

ns1:T1558.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kerberoasting" ;
    ns1:attack-id "T1558.003" ;
    ns1:definition "Service Provider Name (SPN) scanning is one way to gather hashes, which results in RPC calls conforming to the NSPI protocol." ;
    ns1:may-produce ns1:RPCNetworkTraffic ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nspi/6dd0a3ea-b4d4-4a73-a857-add03a89a543> ;
    rdfs:subClassOf [ ],
        ns1:T1558 .

ns1:T1558.004 a owl:Class ;
    rdfs:label "AS-REP Roasting" ;
    ns1:attack-id "T1558.004" ;
    ns1:definition "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017)" ;
    rdfs:subClassOf ns1:T1558 .

ns1:T1558.005 a owl:Class ;
    rdfs:label "Ccache Files" ;
    ns1:attack-id "T1558.005" ;
    ns1:definition "Adversaries may attempt to steal Kerberos tickets stored in credential cache files (or ccache). These files are used for short term storage of a user's active session credentials. The ccache file is created upon user authentication and allows for access to multiple services without the user having to re-enter credentials." ;
    rdfs:subClassOf ns1:T1558 .

ns1:T1559.001 a owl:Class ;
    rdfs:label "Component Object Model" ;
    ns1:attack-id "T1559.001" ;
    ns1:definition "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)" ;
    rdfs:subClassOf ns1:T1559 .

ns1:T1559.002 a owl:Class ;
    rdfs:label "Dynamic Data Exchange" ;
    ns1:attack-id "T1559.002" ;
    ns1:definition "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution." ;
    rdfs:subClassOf ns1:T1559 .

ns1:T1559.003 a owl:Class ;
    rdfs:label "XPC Services" ;
    ns1:attack-id "T1559.003" ;
    ns1:definition "Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.(Citation: creatingXPCservices)(Citation: Designing Daemons Apple Dev)" ;
    rdfs:subClassOf ns1:T1559 .

ns1:T1560.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive via Utility" ;
    ns1:attack-id "T1560.001" ;
    ns1:creates ns1:ArchiveFile ;
    ns1:definition "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport." ;
    rdfs:subClassOf [ ],
        ns1:T1560 .

ns1:T1560.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive via Library" ;
    ns1:attack-id "T1560.002" ;
    ns1:creates ns1:ArchiveFile ;
    ns1:definition "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data." ;
    rdfs:subClassOf [ ],
        ns1:T1560 .

ns1:T1560.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive via Custom Method" ;
    ns1:attack-id "T1560.003" ;
    ns1:creates ns1:CustomArchiveFile ;
    ns1:definition "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)" ;
    rdfs:subClassOf [ ],
        ns1:T1560 .

ns1:T1561.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Content Wipe" ;
    ns1:attack-id "T1561.001" ;
    ns1:definition "Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources." ;
    ns1:may-modify ns1:BootSector,
        ns1:Partition,
        ns1:PartitionTable,
        ns1:Volume ;
    ns1:modifies ns1:BlockDevice ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1561 .

ns1:T1561.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Structure Wipe" ;
    ns1:attack-id "T1561.002" ;
    ns1:definition "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources." ;
    ns1:may-modify ns1:BootSector,
        ns1:PartitionTable ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1561 .

ns1:T1562.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disable or Modify Tools" ;
    ns1:attack-id "T1562.001" ;
    ns1:definition "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)" ;
    ns1:disables ns1:OperatingSystemProcess ;
    rdfs:subClassOf [ ],
        ns1:T1562 .

ns1:T1562.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disable Windows Event Logging" ;
    ns1:attack-id "T1562.002" ;
    ns1:definition "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections." ;
    ns1:may-modify ns1:ApplicationConfiguration,
        ns1:OperatingSystemConfigurationComponent ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1562 .

ns1:T1562.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Impair Command History Logging" ;
    ns1:attack-id "T1562.003" ;
    ns1:definition "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done." ;
    ns1:may-modify ns1:UserInitScript,
        ns1:WindowsRegistryKey ;
    ns1:modifies ns1:ProcessEnvironmentVariable ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1562 .

ns1:T1562.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disable or Modify System Firewall" ;
    ns1:attack-id "T1562.004" ;
    ns1:definition "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel." ;
    ns1:modifies ns1:SystemFirewallConfiguration ;
    rdfs:subClassOf [ ],
        ns1:T1562 .

ns1:T1562.006 a owl:Class ;
    rdfs:label "Indicator Blocking" ;
    ns1:attack-id "T1562.006" ;
    ns1:definition "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047)." ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1562.007 a owl:Class ;
    rdfs:label "Disable or Modify Cloud Firewall" ;
    ns1:attack-id "T1562.007" ;
    ns1:definition "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004)." ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1562.008 a owl:Class ;
    rdfs:label "Disable or Modify Cloud Logs" ;
    ns1:attack-id "T1562.008" ;
    ns1:definition "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities." ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1562.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Safe Mode Boot" ;
    ns1:attack-id "T1562.009" ;
    ns1:definition "Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)" ;
    ns1:disables ns1:EndpointSensor,
        ns1:SystemConfigurationInitDatabaseRecord ;
    ns1:may-modify ns1:EndpointHealthBeacon ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1562 .

ns1:T1562.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Downgrade Attack" ;
    ns1:accesses ns1:LegacySystem ;
    ns1:attack-id "T1562.010" ;
    ns1:definition "Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system’s backward compatibility to force it into less secure modes of operation." ;
    rdfs:subClassOf [ ],
        ns1:T1562 .

ns1:T1562.011 a owl:Class ;
    rdfs:label "Spoof Security Alerting" ;
    ns1:attack-id "T1562.011" ;
    ns1:definition "Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders’ awareness of malicious activity.(Citation: BlackBasta) Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident." ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1562.012 a owl:Class ;
    rdfs:label "Disable or Modify Linux Audit System" ;
    ns1:attack-id "T1562.012" ;
    ns1:definition "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules." ;
    rdfs:subClassOf ns1:T1562 .

ns1:T1563.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SSH Hijacking" ;
    ns1:accesses ns1:SSHSession ;
    ns1:attack-id "T1563.001" ;
    ns1:definition "Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair." ;
    rdfs:subClassOf [ ],
        ns1:T1563 .

ns1:T1563.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RDP Hijacking" ;
    ns1:accesses ns1:RDPSession ;
    ns1:attack-id "T1563.002" ;
    ns1:definition "Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)" ;
    rdfs:subClassOf [ ],
        ns1:T1563 .

ns1:T1564.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden Files and Directories" ;
    ns1:attack-id "T1564.001" ;
    ns1:definition "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS)." ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden Users" ;
    ns1:attack-id "T1564.002" ;
    ns1:definition "Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users." ;
    ns1:modifies ns1:UserInitConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden Window" ;
    ns1:attack-id "T1564.003" ;
    ns1:definition "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks." ;
    ns1:may-modify ns1:PropertyListFile,
        ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "NTFS File Attributes" ;
    ns1:attack-id "T1564.004" ;
    ns1:definition "Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)" ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hidden File System" ;
    ns1:attack-id "T1564.005" ;
    ns1:definition "Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)" ;
    ns1:may-modify ns1:SystemConfigurationDatabase ;
    ns1:modifies ns1:Storage ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Run Virtual Instance" ;
    ns1:attack-id "T1564.006" ;
    ns1:creates ns1:File ;
    ns1:definition "Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)" ;
    ns1:executes ns1:VirtualizationSoftware ;
    ns1:may-add ns1:VirtualizationSoftware ;
    ns1:may-create ns1:Directory ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "VBA Stomping" ;
    ns1:attack-id "T1564.007" ;
    ns1:definition "Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)" ;
    ns1:modifies ns1:OfficeApplicationFile ;
    rdfs:subClassOf [ ],
        ns1:T1564 .

ns1:T1564.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Hiding Rules" ;
    ns1:attack-id "T1564.008" ;
    ns1:definition "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)" ;
    ns1:may-create ns1:EmailRule ;
    ns1:may-modify ns1:EmailRule ;
    ns1:modifies ns1:ApplicationConfiguration ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Forking" ;
    ns1:attack-id "T1564.009" ;
    ns1:definition "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file’s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)" ;
    ns1:may-create ns1:ResourceFork ;
    ns1:may-modify ns1:ResourceFork ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1564 .

ns1:T1564.010 a owl:Class ;
    rdfs:label "Process Argument Spoofing" ;
    ns1:attack-id "T1564.010" ;
    ns1:definition "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)" ;
    rdfs:subClassOf ns1:T1564 .

ns1:T1564.011 a owl:Class ;
    rdfs:label "Ignore Process Interrupts" ;
    ns1:attack-id "T1564.011" ;
    ns1:definition "Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.(Citation: Linux Signal Man)  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes." ;
    rdfs:subClassOf ns1:T1564 .

ns1:T1564.012 a owl:Class ;
    rdfs:label "File/Path Exclusions" ;
    ns1:attack-id "T1564.012" ;
    ns1:definition "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)" ;
    rdfs:subClassOf ns1:T1564 .

ns1:T1565.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stored Data Manipulation" ;
    ns1:attack-id "T1565.001" ;
    ns1:definition "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making." ;
    ns1:modifies ns1:File ;
    rdfs:subClassOf [ ],
        ns1:T1565 .

ns1:T1565.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Transmitted Data Manipulation" ;
    ns1:attack-id "T1565.002" ;
    ns1:definition "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making." ;
    ns1:may-modify ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1565 .

ns1:T1565.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Runtime Data Manipulation" ;
    ns1:attack-id "T1565.003" ;
    ns1:definition "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making." ;
    ns1:may-modify ns1:ExecutableFile ;
    rdfs:subClassOf [ ],
        ns1:T1565 .

ns1:T1566.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Spearphishing Attachment" ;
    ns1:attack-id "T1566.001" ;
    ns1:definition "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source." ;
    ns1:produces ns1:Email,
        ns1:InboundInternetMailTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1566 .

ns1:T1566.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Spearphishing Link" ;
    ns1:attack-id "T1566.002" ;
    ns1:definition "Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source." ;
    ns1:produces ns1:Email,
        ns1:InboundInternetMailTraffic,
        ns1:URL ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:T1566 .

ns1:T1566.003 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Spearphishing via Service" ;
    ns1:attack-id "T1566.003" ;
    ns1:definition "Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels." ;
    ns1:produces ns1:File,
        ns1:URL ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1566 .

ns1:T1566.004 a owl:Class ;
    rdfs:label "Spearphishing Voice" ;
    ns1:attack-id "T1566.004" ;
    ns1:definition "Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient." ;
    rdfs:subClassOf ns1:T1566 .

ns1:T1567.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration to Code Repository" ;
    ns1:attack-id "T1567.001" ;
    ns1:definition "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection." ;
    ns1:may-produce ns1:OutboundInternetEncryptedRemoteTerminalTraffic,
        ns1:OutboundInternetEncryptedWebTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1567 .

ns1:T1567.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration to Cloud Storage" ;
    ns1:attack-id "T1567.002" ;
    ns1:definition "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet." ;
    ns1:produces ns1:OutboundInternetEncryptedWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:T1567 .

ns1:T1567.003 a owl:Class ;
    rdfs:label "Exfiltration to Text Storage Sites" ;
    ns1:attack-id "T1567.003" ;
    ns1:definition "Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as <code>pastebin[.]com</code>, are commonly used by developers to share code and other information." ;
    rdfs:subClassOf ns1:T1567 .

ns1:T1567.004 a owl:Class ;
    rdfs:label "Exfiltration Over Webhook" ;
    ns1:attack-id "T1567.004" ;
    ns1:definition "Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server.(Citation: RedHat Webhooks) Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello.(Citation: Discord Intro to Webhooks) When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application." ;
    rdfs:subClassOf ns1:T1567 .

ns1:T1568.001 a owl:Class ;
    rdfs:label "Fast Flux DNS" ;
    ns1:attack-id "T1568.001" ;
    ns1:definition "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)" ;
    rdfs:subClassOf ns1:T1568 .

ns1:T1568.002 a owl:Class ;
    rdfs:label "Domain Generation Algorithms" ;
    ns1:attack-id "T1568.002" ;
    ns1:definition "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)" ;
    rdfs:subClassOf ns1:T1568 .

ns1:T1568.003 a owl:Class ;
    rdfs:label "DNS Calculation" ;
    ns1:attack-id "T1568.003" ;
    ns1:definition "Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)" ;
    rdfs:subClassOf ns1:T1568 .

ns1:T1569.001 a owl:Class ;
    rdfs:label "Launchctl" ;
    ns1:attack-id "T1569.001" ;
    ns1:definition "Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)" ;
    rdfs:subClassOf ns1:T1569 .

ns1:T1569.002 a owl:Class ;
    rdfs:label "Service Execution" ;
    ns1:attack-id "T1569.002" ;
    ns1:definition "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039)." ;
    rdfs:subClassOf ns1:T1569 .

ns1:T1570 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Lateral Tool Transfer" ;
    ns1:attack-id "T1570" ;
    ns1:definition "Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation." ;
    ns1:produces ns1:IntranetFileTransferTraffic ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1571 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Non-Standard Port" ;
    ns1:attack-id "T1571" ;
    ns1:definition "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1572 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Protocol Tunneling" ;
    ns1:attack-id "T1572" ;
    ns1:definition "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1573.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Symmetric Cryptography" ;
    ns1:attack-id "T1573.001" ;
    ns1:creates ns1:OutboundInternetEncryptedTraffic ;
    ns1:definition "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4." ;
    rdfs:subClassOf [ ],
        ns1:T1573 .

ns1:T1573.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asymmetric Cryptography" ;
    ns1:attack-id "T1573.002" ;
    ns1:creates ns1:OutboundInternetEncryptedTraffic ;
    ns1:definition "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal." ;
    ns1:may-transfer ns1:CertificateFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1573 .

ns1:T1574.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DLL Search Order Hijacking" ;
    ns1:attack-id "T1574.001" ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution." ;
    ns1:may-create ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DLL Side-Loading" ;
    ns1:attack-id "T1574.002" ;
    ns1:definition "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s)." ;
    ns1:may-create ns1:SharedLibraryFile ;
    ns1:may-modify ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1574 .

ns1:T1574.004 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dylib Hijacking" ;
    ns1:attack-id "T1574.004" ;
    ns1:definition "Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added." ;
    ns1:may-create ns1:SharedLibraryFile ;
    ns1:may-modify ns1:SharedLibraryFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1574 .

ns1:T1574.005 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Installer File Permissions Weakness" ;
    ns1:attack-id "T1574.005" ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM." ;
    ns1:modifies ns1:ServiceApplication ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.006 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dynamic Linker Hijacking" ;
    ns1:attack-id "T1574.006" ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)" ;
    ns1:modifies ns1:OperatingSystemConfigurationFile ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.007 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Path Interception by PATH Environment Variable" ;
    ns1:attack-id "T1574.007" ;
    ns1:creates ns1:ExecutableFile ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line." ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.008 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Path Interception by Search Order Hijacking" ;
    ns1:attack-id "T1574.008" ;
    ns1:creates ns1:ExecutableFile ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program." ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.009 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Path Interception by Unquoted Path" ;
    ns1:attack-id "T1574.009" ;
    ns1:creates ns1:ExecutableFile ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch." ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.010 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Services File Permissions Weakness" ;
    ns1:attack-id "T1574.010" ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM." ;
    ns1:modifies ns1:ServiceApplication ;
    rdfs:subClassOf [ ],
        ns1:T1574 ;
    skos:altLabel "Service Registry Permissions Weakness" .

ns1:T1574.011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Services Registry Permissions Weakness" ;
    ns1:attack-id "T1574.011" ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)" ;
    ns1:modifies ns1:SystemConfigurationInitDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:T1574 .

ns1:T1574.012 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "COR_PROFILER" ;
    ns1:adds ns1:SharedLibraryFile ;
    ns1:attack-id "T1574.012" ;
    ns1:definition "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)" ;
    ns1:modifies ns1:SystemConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:T1574 .

ns1:T1574.013 a owl:Class ;
    rdfs:label "KernelCallbackTable" ;
    ns1:attack-id "T1574.013" ;
    ns1:definition "Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.(Citation: Windows Process Injection KernelCallbackTable)" ;
    rdfs:subClassOf ns1:T1574 .

ns1:T1574.014 a owl:Class ;
    rdfs:label "AppDomainManager" ;
    ns1:attack-id "T1574.014" ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking how the .NET `AppDomainManager` loads assemblies. The .NET framework uses the `AppDomainManager` class to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (`.exe` or `.dll` binaries compiled to run as .NET code) may be loaded into an application domain as executable code.(Citation: Microsoft App Domains)" ;
    rdfs:subClassOf ns1:T1574 .

ns1:T1578.001 a owl:Class ;
    rdfs:label "Create Snapshot" ;
    ns1:attack-id "T1578.001" ;
    ns1:definition "An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence." ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1578.002 a owl:Class ;
    rdfs:label "Create Cloud Instance" ;
    ns1:attack-id "T1578.002" ;
    ns1:definition "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)" ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1578.003 a owl:Class ;
    rdfs:label "Delete Cloud Instance" ;
    ns1:attack-id "T1578.003" ;
    ns1:definition "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable." ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1578.004 a owl:Class ;
    rdfs:label "Revert Cloud Instance" ;
    ns1:attack-id "T1578.004" ;
    ns1:definition "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs." ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1578.005 a owl:Class ;
    rdfs:label "Modify Cloud Compute Configurations" ;
    ns1:attack-id "T1578.005" ;
    ns1:definition "Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim’s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim." ;
    rdfs:subClassOf ns1:T1578 .

ns1:T1580 a owl:Class ;
    rdfs:label "Cloud Infrastructure Discovery" ;
    ns1:attack-id "T1580" ;
    ns1:definition "An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1583.001 a owl:Class ;
    rdfs:label "Domains" ;
    ns1:attack-id "T1583.001" ;
    ns1:definition "Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free." ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.002 a owl:Class ;
    rdfs:label "DNS Server" ;
    ns1:attack-id "T1583.002" ;
    ns1:definition "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations." ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.003 a owl:Class ;
    rdfs:label "Virtual Private Server" ;
    ns1:attack-id "T1583.003" ;
    ns1:definition "Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure." ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.004 a owl:Class ;
    rdfs:label "Server" ;
    ns1:attack-id "T1583.004" ;
    ns1:definition "Adversaries may buy, lease, rent, or obtain physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), enabling [Phishing](https://attack.mitre.org/techniques/T1566) operations, or facilitating [Command and Control](https://attack.mitre.org/tactics/TA0011). Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused.(Citation: Free Trial PurpleUrchin)(Citation: Freejacked)" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.005 a owl:Class ;
    rdfs:label "Botnet" ;
    ns1:attack-id "T1583.005" ;
    ns1:definition "Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter)" ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.006 a owl:Class ;
    rdfs:label "Web Services" ;
    ns1:attack-id "T1583.006" ;
    ns1:definition "Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise.(Citation: FireEye APT29) By utilizing a web service, adversaries can make it difficult to physically tie back operations to them." ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.007 a owl:Class ;
    rdfs:label "Serverless" ;
    ns1:attack-id "T1583.007" ;
    ns1:definition "Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them." ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1583.008 a owl:Class ;
    rdfs:label "Malvertising" ;
    ns1:attack-id "T1583.008" ;
    ns1:definition "Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.(Citation: spamhaus-malvertising) Purchased ads may also target specific audiences using the advertising network’s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites." ;
    rdfs:subClassOf ns1:T1583 .

ns1:T1584.001 a owl:Class ;
    rdfs:label "Domains" ;
    ns1:attack-id "T1584.001" ;
    ns1:definition "Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.(Citation: ICANNDomainNameHijacking) Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.(Citation: Krebs DNS Hijack 2019)" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.002 a owl:Class ;
    rdfs:label "DNS Server" ;
    ns1:attack-id "T1584.002" ;
    ns1:definition "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations." ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.003 a owl:Class ;
    rdfs:label "Virtual Private Server" ;
    ns1:attack-id "T1584.003" ;
    ns1:definition "Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)" ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.004 a owl:Class ;
    rdfs:label "Server" ;
    ns1:attack-id "T1584.004" ;
    ns1:definition "Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control.(Citation: TrendMicro EarthLusca 2022) Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations." ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.005 a owl:Class ;
    rdfs:label "Botnet" ;
    ns1:attack-id "T1584.005" ;
    ns1:definition "Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS)." ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.006 a owl:Class ;
    rdfs:label "Web Services" ;
    ns1:attack-id "T1584.006" ;
    ns1:definition "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Recorded Future Turla Infra 2020) Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains." ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.007 a owl:Class ;
    rdfs:label "Serverless" ;
    ns1:attack-id "T1584.007" ;
    ns1:definition "Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them." ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1584.008 a owl:Class ;
    rdfs:label "Network Devices" ;
    ns1:attack-id "T1584.008" ;
    ns1:definition "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting." ;
    rdfs:subClassOf ns1:T1584 .

ns1:T1585.001 a owl:Class ;
    rdfs:label "Social Media Accounts" ;
    ns1:attack-id "T1585.001" ;
    ns1:definition "Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)" ;
    rdfs:subClassOf ns1:T1585 .

ns1:T1585.002 a owl:Class ;
    rdfs:label "Email Accounts" ;
    ns1:attack-id "T1585.002" ;
    ns1:definition "Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Establishing email accounts may also allow adversaries to abuse free services – such as trial periods – to [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) for follow-on purposes.(Citation: Free Trial PurpleUrchin)" ;
    rdfs:subClassOf ns1:T1585 .

ns1:T1585.003 a owl:Class ;
    rdfs:label "Cloud Accounts" ;
    ns1:attack-id "T1585.003" ;
    ns1:definition "Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)" ;
    rdfs:subClassOf ns1:T1585 .

ns1:T1586.001 a owl:Class ;
    rdfs:label "Social Media Accounts" ;
    ns1:attack-id "T1586.001" ;
    ns1:definition "Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona." ;
    rdfs:subClassOf ns1:T1586 .

ns1:T1586.002 a owl:Class ;
    rdfs:label "Email Accounts" ;
    ns1:attack-id "T1586.002" ;
    ns1:definition "Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001))." ;
    rdfs:subClassOf ns1:T1586 .

ns1:T1586.003 a owl:Class ;
    rdfs:label "Cloud Accounts" ;
    ns1:attack-id "T1586.003" ;
    ns1:definition "Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)" ;
    rdfs:subClassOf ns1:T1586 .

ns1:T1587.001 a owl:Class ;
    rdfs:label "Malware" ;
    ns1:attack-id "T1587.001" ;
    ns1:definition "Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)" ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1587.002 a owl:Class ;
    rdfs:label "Code Signing Certificates" ;
    ns1:attack-id "T1587.002" ;
    ns1:definition "Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is." ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1587.003 a owl:Class ;
    rdfs:label "Digital Certificates" ;
    ns1:attack-id "T1587.003" ;
    ns1:definition "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA)." ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1587.004 a owl:Class ;
    rdfs:label "Exploits" ;
    ns1:attack-id "T1587.004" ;
    ns1:definition "Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)" ;
    rdfs:subClassOf ns1:T1587 .

ns1:T1588.001 a owl:Class ;
    rdfs:label "Malware" ;
    ns1:attack-id "T1588.001" ;
    ns1:definition "Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors." ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.002 a owl:Class ;
    rdfs:label "Tool" ;
    ns1:attack-id "T1588.002" ;
    ns1:definition "Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.003 a owl:Class ;
    rdfs:label "Code Signing Certificates" ;
    ns1:attack-id "T1588.003" ;
    ns1:definition "Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is." ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.004 a owl:Class ;
    rdfs:label "Digital Certificates" ;
    ns1:attack-id "T1588.004" ;
    ns1:definition "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner." ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.005 a owl:Class ;
    rdfs:label "Exploits" ;
    ns1:attack-id "T1588.005" ;
    ns1:definition "Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.006 a owl:Class ;
    rdfs:label "Vulnerabilities" ;
    ns1:attack-id "T1588.006" ;
    ns1:definition "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1588.007 a owl:Class ;
    rdfs:label "Artificial Intelligence" ;
    ns1:attack-id "T1588.007" ;
    ns1:definition "Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043), creating basic scripts, assisting social engineering, and even developing payloads.(Citation: MSFT-AI)" ;
    rdfs:subClassOf ns1:T1588 .

ns1:T1589.001 a owl:Class ;
    rdfs:label "Credentials" ;
    ns1:attack-id "T1589.001" ;
    ns1:definition "Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts." ;
    rdfs:subClassOf ns1:T1589 .

ns1:T1589.002 a owl:Class ;
    rdfs:label "Email Addresses" ;
    ns1:attack-id "T1589.002" ;
    ns1:definition "Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees." ;
    rdfs:subClassOf ns1:T1589 .

ns1:T1589.003 a owl:Class ;
    rdfs:label "Employee Names" ;
    ns1:attack-id "T1589.003" ;
    ns1:definition "Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures." ;
    rdfs:subClassOf ns1:T1589 .

ns1:T1590.001 a owl:Class ;
    rdfs:label "Domain Properties" ;
    ns1:attack-id "T1590.001" ;
    ns1:definition "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers." ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.002 a owl:Class ;
    rdfs:label "DNS" ;
    ns1:attack-id "T1590.002" ;
    ns1:definition "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)" ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.003 a owl:Class ;
    rdfs:label "Network Trust Dependencies" ;
    ns1:attack-id "T1590.003" ;
    ns1:definition "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access." ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.004 a owl:Class ;
    rdfs:label "Network Topology" ;
    ns1:attack-id "T1590.004" ;
    ns1:definition "Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure." ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.005 a owl:Class ;
    rdfs:label "IP Addresses" ;
    ns1:attack-id "T1590.005" ;
    ns1:definition "Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted." ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1590.006 a owl:Class ;
    rdfs:label "Network Security Appliances" ;
    ns1:attack-id "T1590.006" ;
    ns1:definition "Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations." ;
    rdfs:subClassOf ns1:T1590 .

ns1:T1591.001 a owl:Class ;
    rdfs:label "Determine Physical Locations" ;
    ns1:attack-id "T1591.001" ;
    ns1:definition "Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within." ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1591.002 a owl:Class ;
    rdfs:label "Business Relationships" ;
    ns1:attack-id "T1591.002" ;
    ns1:definition "Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources." ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1591.003 a owl:Class ;
    rdfs:label "Identify Business Tempo" ;
    ns1:attack-id "T1591.003" ;
    ns1:definition "Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources." ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1591.004 a owl:Class ;
    rdfs:label "Identify Roles" ;
    ns1:attack-id "T1591.004" ;
    ns1:definition "Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to." ;
    rdfs:subClassOf ns1:T1591 .

ns1:T1592.001 a owl:Class ;
    rdfs:label "Hardware" ;
    ns1:attack-id "T1592.001" ;
    ns1:definition "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.)." ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1592.002 a owl:Class ;
    rdfs:label "Software" ;
    ns1:attack-id "T1592.002" ;
    ns1:definition "Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.)." ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1592.003 a owl:Class ;
    rdfs:label "Firmware" ;
    ns1:attack-id "T1592.003" ;
    ns1:definition "Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.)." ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1592.004 a owl:Class ;
    rdfs:label "Client Configurations" ;
    ns1:attack-id "T1592.004" ;
    ns1:definition "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone." ;
    rdfs:subClassOf ns1:T1592 .

ns1:T1593.001 a owl:Class ;
    rdfs:label "Social Media" ;
    ns1:attack-id "T1593.001" ;
    ns1:definition "Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff." ;
    rdfs:subClassOf ns1:T1593 .

ns1:T1593.002 a owl:Class ;
    rdfs:label "Search Engines" ;
    ns1:attack-id "T1593.002" ;
    ns1:definition "Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)" ;
    rdfs:subClassOf ns1:T1593 .

ns1:T1593.003 a owl:Class ;
    rdfs:label "Code Repositories" ;
    ns1:attack-id "T1593.003" ;
    ns1:definition "Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git." ;
    rdfs:subClassOf ns1:T1593 .

ns1:T1594 a owl:Class ;
    rdfs:label "Search Victim-Owned Websites" ;
    ns1:attack-id "T1594" ;
    ns1:definition "Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.(Citation: Comparitech Leak)" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1595.001 a owl:Class ;
    rdfs:label "Scanning IP Blocks" ;
    ns1:attack-id "T1595.001" ;
    ns1:definition "Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses." ;
    rdfs:subClassOf ns1:T1595 .

ns1:T1595.002 a owl:Class ;
    rdfs:label "Vulnerability Scanning" ;
    ns1:attack-id "T1595.002" ;
    ns1:definition "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use." ;
    rdfs:subClassOf ns1:T1595 .

ns1:T1595.003 a owl:Class ;
    rdfs:label "Wordlist Scanning" ;
    ns1:attack-id "T1595.003" ;
    ns1:definition "Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594))." ;
    rdfs:subClassOf ns1:T1595 .

ns1:T1596.001 a owl:Class ;
    rdfs:label "DNS/Passive DNS" ;
    ns1:attack-id "T1596.001" ;
    ns1:definition "Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts." ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.002 a owl:Class ;
    rdfs:label "WHOIS" ;
    ns1:attack-id "T1596.002" ;
    ns1:definition "Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)" ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.003 a owl:Class ;
    rdfs:label "Digital Certificates" ;
    ns1:attack-id "T1596.003" ;
    ns1:definition "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location." ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.004 a owl:Class ;
    rdfs:label "CDNs" ;
    ns1:attack-id "T1596.004" ;
    ns1:definition "Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region." ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1596.005 a owl:Class ;
    rdfs:label "Scan Databases" ;
    ns1:attack-id "T1596.005" ;
    ns1:definition "Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.(Citation: Shodan)" ;
    rdfs:subClassOf ns1:T1596 .

ns1:T1597.001 a owl:Class ;
    rdfs:label "Threat Intel Vendors" ;
    ns1:attack-id "T1597.001" ;
    ns1:definition "Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.(Citation: D3Secutrity CTI Feeds)" ;
    rdfs:subClassOf ns1:T1597 .

ns1:T1597.002 a owl:Class ;
    rdfs:label "Purchase Technical Data" ;
    ns1:attack-id "T1597.002" ;
    ns1:definition "Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets." ;
    rdfs:subClassOf ns1:T1597 .

ns1:T1598.001 a owl:Class ;
    rdfs:label "Spearphishing Service" ;
    ns1:attack-id "T1598.001" ;
    ns1:definition "Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages." ;
    rdfs:subClassOf ns1:T1598 .

ns1:T1598.002 a owl:Class ;
    rdfs:label "Spearphishing Attachment" ;
    ns1:attack-id "T1598.002" ;
    ns1:definition "Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages." ;
    rdfs:subClassOf ns1:T1598 .

ns1:T1598.003 a owl:Class ;
    rdfs:label "Spearphishing Link" ;
    ns1:attack-id "T1598.003" ;
    ns1:definition "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages." ;
    rdfs:subClassOf ns1:T1598 .

ns1:T1598.004 a owl:Class ;
    rdfs:label "Spearphishing Voice" ;
    ns1:attack-id "T1598.004" ;
    ns1:definition "Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient." ;
    rdfs:subClassOf ns1:T1598 .

ns1:T1599.001 a owl:Class ;
    rdfs:label "Network Address Translation Traversal" ;
    ns1:attack-id "T1599.001" ;
    ns1:definition "Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks." ;
    rdfs:subClassOf ns1:T1599 .

ns1:T1600.001 a owl:Class ;
    rdfs:label "Reduce Key Space" ;
    ns1:attack-id "T1600.001" ;
    ns1:definition "Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.(Citation: Cisco Synful Knock Evolution)" ;
    rdfs:subClassOf ns1:T1600 .

ns1:T1600.002 a owl:Class ;
    rdfs:label "Disable Crypto Hardware" ;
    ns1:attack-id "T1600.002" ;
    ns1:definition "Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data." ;
    rdfs:subClassOf ns1:T1600 .

ns1:T1601.001 a owl:Class ;
    rdfs:label "Patch System Image" ;
    ns1:attack-id "T1601.001" ;
    ns1:definition "Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.(Citation: Killing the myth of Cisco IOS rootkits) (Citation: Killing IOS diversity myth) (Citation: Cisco IOS Shellcode) (Citation: Cisco IOS Forensics Developments) (Citation: Juniper Netscreen of the Dead) Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime." ;
    rdfs:subClassOf ns1:T1601 .

ns1:T1601.002 a owl:Class ;
    rdfs:label "Downgrade System Image" ;
    ns1:attack-id "T1601.002" ;
    ns1:definition "Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. (Citation: Cisco Synful Knock Evolution)" ;
    rdfs:subClassOf ns1:T1601 .

ns1:T1602.001 a owl:Class ;
    rdfs:label "SNMP (MIB Dump)" ;
    ns1:attack-id "T1602.001" ;
    ns1:definition "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP)." ;
    rdfs:subClassOf ns1:T1602 .

ns1:T1602.002 a owl:Class ;
    rdfs:label "Network Device Configuration Dump" ;
    ns1:attack-id "T1602.002" ;
    ns1:definition "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use." ;
    rdfs:subClassOf ns1:T1602 .

ns1:T1606.001 a owl:Class ;
    rdfs:label "Web Cookies" ;
    ns1:attack-id "T1606.001" ;
    ns1:definition "Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access." ;
    rdfs:subClassOf ns1:T1606 .

ns1:T1606.002 a owl:Class ;
    rdfs:label "SAML Tokens" ;
    ns1:attack-id "T1606.002" ;
    ns1:definition "An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)" ;
    rdfs:subClassOf ns1:T1606 .

ns1:T1608.001 a owl:Class ;
    rdfs:label "Upload Malware" ;
    ns1:attack-id "T1608.001" ;
    ns1:definition "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server." ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.002 a owl:Class ;
    rdfs:label "Upload Tool" ;
    ns1:attack-id "T1608.002" ;
    ns1:definition "Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server." ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.003 a owl:Class ;
    rdfs:label "Install Digital Certificate" ;
    ns1:attack-id "T1608.003" ;
    ns1:definition "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.(Citation: DigiCert Install SSL Cert)" ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.004 a owl:Class ;
    rdfs:label "Drive-by Target" ;
    ns1:attack-id "T1608.004" ;
    ns1:definition "Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584))." ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.005 a owl:Class ;
    rdfs:label "Link Target" ;
    ns1:attack-id "T1608.005" ;
    ns1:definition "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link." ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1608.006 a owl:Class ;
    rdfs:label "SEO Poisoning" ;
    ns1:attack-id "T1608.006" ;
    ns1:definition "Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms.(Citation: Atlas SEO)(Citation: MalwareBytes SEO)" ;
    rdfs:subClassOf ns1:T1608 .

ns1:T1609 a owl:Class ;
    rdfs:label "Container Administration Command" ;
    ns1:attack-id "T1609" ;
    ns1:definition "Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.(Citation: Docker Daemon CLI)(Citation: Kubernetes API)(Citation: Kubernetes Kubelet)" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1610 a owl:Class ;
    rdfs:label "Deploy Container" ;
    ns1:attack-id "T1610" ;
    ns1:definition "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to [Escape to Host](https://attack.mitre.org/techniques/T1611) and access other containers running on the node. (Citation: AppSecco Kubernetes Namespace Breakout 2020)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1611 a owl:Class ;
    rdfs:label "Escape to Host" ;
    ns1:attack-id "T1611" ;
    ns1:definition "Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)" ;
    rdfs:subClassOf ns1:PrivilegeEscalationTechnique .

ns1:T1612 a owl:Class ;
    rdfs:label "Build Image on Host" ;
    ns1:attack-id "T1612" ;
    ns1:definition "Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote <code>build</code> request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.(Citation: Docker Build Image)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1613 a owl:Class ;
    rdfs:label "Container and Resource Discovery" ;
    ns1:attack-id "T1613" ;
    ns1:definition "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1614.001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Language Discovery" ;
    ns1:attack-id "T1614.001" ;
    ns1:definition "Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.(Citation: Malware System Language Check)" ;
    ns1:queries ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:T1614 .

ns1:T1615 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Group Policy Discovery" ;
    ns1:attack-id "T1615" ;
    ns1:definition "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)" ;
    ns1:reads ns1:GroupPolicy ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1619 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Storage Object Discovery" ;
    ns1:accesses ns1:CloudStorage ;
    ns1:attack-id "T1619" ;
    ns1:definition "Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580)) adversaries may access the contents/objects stored in cloud infrastructure." ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:T1620 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reflective Code Loading" ;
    ns1:attack-id "T1620" ;
    ns1:definition "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129))." ;
    ns1:modifies ns1:ProcessSegment ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1621 a owl:Class ;
    rdfs:label "Multi-Factor Authentication Request Generation" ;
    ns1:attack-id "T1621" ;
    ns1:definition "Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users." ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1622 a owl:Class ;
    rdfs:label "Debugger Evasion" ;
    ns1:attack-id "T1622" ;
    ns1:definition "Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:DiscoveryTechnique .

ns1:T1647 a owl:Class ;
    rdfs:label "Plist File Modification" ;
    ns1:attack-id "T1647" ;
    ns1:definition "Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the <code>info.plist</code> file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.(Citation: fileinfo plist file description)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1648 a owl:Class ;
    rdfs:label "Serverless Execution" ;
    ns1:attack-id "T1648" ;
    ns1:definition "Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers." ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1649 a owl:Class ;
    rdfs:label "Steal or Forge Authentication Certificates" ;
    ns1:attack-id "T1649" ;
    ns1:definition "Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.(Citation: O365 Blog Azure AD Device IDs)(Citation: Microsoft AD CS Overview)" ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1650 a owl:Class ;
    rdfs:label "Acquire Access" ;
    ns1:attack-id "T1650" ;
    ns1:definition "Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)(Citation: Krebs Access Brokers Fortune 500) In some cases, adversary groups may form partnerships to share compromised systems with each other.(Citation: CISA Karakurt 2022)" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1651 a owl:Class ;
    rdfs:label "Cloud Administration Command" ;
    ns1:attack-id "T1651" ;
    ns1:definition "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)" ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1652 a owl:Class ;
    rdfs:label "Device Driver Discovery" ;
    ns1:attack-id "T1652" ;
    ns1:definition "Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e. [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) or other defenses (e.g., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)), as well as potential exploitable vulnerabilities (e.g., [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068))." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1653 a owl:Class ;
    rdfs:label "Power Settings" ;
    ns1:attack-id "T1653" ;
    ns1:definition "Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.(Citation: Sleep, shut down, hibernate)" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1654 a owl:Class ;
    rdfs:label "Log Enumeration" ;
    ns1:attack-id "T1654" ;
    ns1:definition "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018))." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1656 a owl:Class ;
    rdfs:label "Impersonation" ;
    ns1:attack-id "T1656" ;
    ns1:definition "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary’s ultimate goals, possibly against multiple victims." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1657 a owl:Class ;
    rdfs:label "Financial Theft" ;
    ns1:attack-id "T1657" ;
    ns1:definition "Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware,(Citation: FBI-ransomware) business email compromise (BEC) and fraud,(Citation: FBI-BEC) \"pig butchering,\"(Citation: wired-pig butchering) bank hacking,(Citation: DOJ-DPRK Heist) and exploiting cryptocurrency networks.(Citation: BBC-Ronin)" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1659 a owl:Class ;
    rdfs:label "Content Injection" ;
    ns1:attack-id "T1659" ;
    ns1:definition "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)" ;
    rdfs:subClassOf ns1:CommandAndControlTechnique,
        ns1:InitialAccessTechnique .

ns1:T1665 a owl:Class ;
    rdfs:label "Hide Infrastructure" ;
    ns1:attack-id "T1665" ;
    ns1:definition "Adversaries may manipulate network traffic in order to hide and evade detection of their C2 infrastructure. This can be accomplished in various ways including by identifying and filtering traffic from defensive tools,(Citation: TA571) masking malicious domains to obfuscate the true destination from both automated scanning tools and security researchers,(Citation: Schema-abuse)(Citation: Facad1ng)(Citation: Browser-updates) and otherwise hiding malicious artifacts to delay discovery and prolong the effectiveness of adversary infrastructure that could otherwise be identified, blocked, or taken down entirely." ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1666 a owl:Class ;
    rdfs:label "Modify Cloud Resource Hierarchy" ;
    ns1:attack-id "T1666" ;
    ns1:definition "Adversaries may attempt to modify hierarchical structures in infrastructure-as-a-service (IaaS) environments in order to evade defenses." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:TFTPServer a owl:Class ;
    rdfs:label "TFTP Server" ;
    ns1:definition "Trivial File Transfer Protocol (TFTP) is a simple file transfer protocol, typically used to automatically transfer configuration or boot files between machines.  It is used where user authentication and directory visibility are not required." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Trivial_File_Transfer_Protocol> ;
    rdfs:subClassOf ns1:Server .

ns1:TabletComputer a owl:Class ;
    rdfs:label "Tablet Computer" ;
    ns1:definition "A tablet computer, commonly shortened to tablet, is a mobile device, typically with a mobile operating system and touchscreen display processing circuitry, and a rechargeable battery in a single, thin and flat package. Tablets, being computers, do what other personal computers do, but lack some input/output (I/O) abilities that others have. Modern tablets largely resemble modern smartphones, the only differences being that tablets are relatively larger than smartphones, with screens 7 inches (18 cm) or larger, measured diagonally, and may not support access to a cellular network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Tablet_computer> ;
    rdfs:subClassOf ns1:PersonalComputer ;
    skos:altLabel "Tablet" .

ns1:TertiaryStorage a owl:Class ;
    rdfs:label "Tertiary Storage" ;
    ns1:definition "Tertiary storage or tertiary memory is memory primarily used for archiving rarely accessed information. It is primarily useful for extraordinarily large data stores. Typical examples include tape libraries and optical jukeboxes." ;
    rdfs:isDefinedBy <https://en.wikipedia.org/wiki/Computer_data_storage#Tertiary_storage> ;
    rdfs:subClassOf ns1:HardwareDevice,
        ns1:MemoryBlock,
        ns1:SecondaryStorage .

ns1:ThreadStartFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread Start Function" ;
    ns1:definition "A function which invokes a create thread system call." ;
    ns1:executes ns1:Thread ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:TransducerSensor a owl:Class ;
    rdfs:label "Transducer Sensor" ;
    rdfs:subClassOf ns1:Sensor .

ns1:TransportLink a owl:Class ;
    rdfs:label "Transport Link" ;
    rdfs:subClassOf ns1:LogicalLink .

ns1:TrustedLibrary a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trusted Library" ;
    ns1:d3fend-id "D3-TL" ;
    ns1:definition "A trusted library is a collection of pre-verified and secure code modules or components that are used within software applications to perform specific functions. These libraries are considered reliable and have been vetted for security vulnerabilities, ensuring they do not introduce risks into the application." ;
    ns1:hardens ns1:Subroutine ;
    ns1:kb-article """## How it Works
Using a trusted library can reduce the chances of introducing errors compared to writing code from scratch.



## Considerations

Note: This resource should not be considered a definitive or exhaustive coding guideline.""" ;
    ns1:kb-reference ns1:Reference-LeverageSecurityFrameworksLibraries_OWASP ;
    rdfs:subClassOf [ ],
        ns1:SourceCodeHardening .

ns1:UnitTestExecutionTool a owl:Class ;
    rdfs:label "Unit Test Execution Tool" ;
    ns1:definition "An unit test execution tool automatically performs unit testing.  Unit testing is a software testing method by which individual units of source code are tested to determine whether they are fit for use.  Unit test execution tools work with sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures. This contrasts with integration testing, which tests inter-unit dependencies and the modules as a group." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Unit_testing> ;
    rdfs:subClassOf ns1:TestExecutionTool .

ns1:UnixHardLink a owl:Class ;
    rdfs:label "Unix Hard Link" ;
    ns1:definition "A Unix hard link is a hard link on a Unix file system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:HardLink,
        ns1:UnixLink .

ns1:UserBehavior a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Behavior" ;
    ns1:contains ns1:UserAction ;
    ns1:definition "A user behavior is a pattern of user actions, or set of such patterns. Modeling and analyzing these patterns and monitoring a users actions for meaningful anomalies is known as user behavior analytics (UBA)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/User_behavior_analytics> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:UserInputFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Input Function" ;
    ns1:definition "Generic function that receives direct user input from an untrusted source." ;
    rdfs:subClassOf ns1:InputFunction .

ns1:UserProfile a owl:Class ;
    rdfs:label "User Profile" ;
    ns1:definition "A user profile is a collection of settings and information associated with a user. It contains critical information that is used to identify an individual, such as their name, age, portrait photograph and individual characteristics such as knowledge or expertise." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_profile> ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/User_profile> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:UserStartupDirectory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Startup Directory" ;
    ns1:contains ns1:UserStartupScriptFile ;
    ns1:definition "A user startup directory holds information necessary to start the users session with the system." ;
    rdfs:subClassOf [ ],
        ns1:UserLogonInitResource .

ns1:VMImage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Virtual Machine Image" ;
    ns1:contains ns1:SystemStateImage ;
    ns1:definition "A Virtual Machine Image (VMI) is a file that encapsulates the entire state of a virtual machine at a given point in time. This includes the operating system, applications, data, and configurations. VMIs are used to create and replicate virtual machines, ensuring consistency and reliability across different environments." ;
    rdfs:isDefinedBy <https://www.ituonline.com/tech-definitions/what-is-a-virtual-machine-image/> ;
    rdfs:seeAlso <https://dbpedia.org/resource/Virtual_machine_image> ;
    rdfs:subClassOf [ ],
        ns1:StorageImage ;
    skos:altLabel "VM Image" .

ns1:VPNServer a owl:Class ;
    rdfs:label "VPN Server" ;
    ns1:definition """A VPN server is a type of server that enables hosting and delivery of VPN services.

It is a combination of VPN hardware and software technologies that provides VPN clients with connectivity to a secure and/or private network, or rather, the VPN.""" ;
    rdfs:isDefinedBy <https://www.techopedia.com/definition/30750/vpn-server> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Virtual_private_network> ;
    rdfs:subClassOf ns1:Server .

ns1:VariableInitialization a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Variable Initialization" ;
    ns1:d3fend-id "D3-VI" ;
    ns1:definition "Setting variables to a known value before use." ;
    ns1:hardens ns1:Subroutine ;
    ns1:kb-article """## How it Works
Initializing variables upon declaration ensures that the variable has a known quantity before use.

## Considerations
* Default behavior when declaring variables varies by language.
* This is particularly important in programming languages that do not initialize variables to a default value upon declaration. In these instances, the value that a variable will contain after declaration is indeterminate which can cause issues. In fact, that value could be different each time the program is ran.
* Note: This resource should not be considered a definitive or exhaustive coding guideline.""" ;
    ns1:kb-reference ns1:Reference-CManualIntegerInitialization_GNU,
        ns1:Reference-VariableInitialization_CWE ;
    rdfs:subClassOf [ ],
        ns1:SourceCodeHardening .

ns1:VariableTypeValidation a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Variable Type Validation" ;
    ns1:d3fend-id "D3-VTV" ;
    ns1:definition "Ensuring that a variable has the correct type." ;
    ns1:hardens ns1:PointerDereferencingFunction ;
    ns1:kb-article """## How it Works
A developer should consider how the variable will be used throughout the program and choose the correct variable type.
A developer should programmatically check if a variable has the correct (expected) type before using that variable.

## Considerations
* The result of an operation on an unexpected variable type will vary based on the language.
* Note: This resource should not be considered a definitive or exhaustive coding guideline.""" ;
    ns1:kb-reference ns1:Reference-TypeSystems_Princeton ;
    rdfs:subClassOf [ ],
        ns1:SourceCodeHardening .

ns1:VersionControlTool a owl:Class ;
    rdfs:label "Version Control Tool" ;
    ns1:definition "Version control tools are tools that used to conduct version control. A  component of software configuration management, version control, also known as revision control, source control, or source code management systems are systems responsible for the management of changes to documents, computer programs, large web sites, and other collections of information. Changes are usually identified by a number or letter code, termed the \"revision number\", \"revision level\", or simply \"revision\". For example, an initial set of files is \"revision 1\". When the first change is made, the resulting set is \"revision 2\", and so on. Each revision is associated with a timestamp and the person making the change. Revisions can be compared, restored, and with some types of files, merged." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Version_control> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Software_configuration_management> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    skos:altLabel "Revision Control",
        "Source Control" .

ns1:VirtualMemorySpace a owl:Class ;
    rdfs:label "Virtual Memory Space" ;
    ns1:definition "Virtual memory is a memory management technique where secondary memory can be used as if it were a part of the main memory. Virtual memory uses hardware and software to enable a computer to compensate for physical memory shortages" ;
    rdfs:isDefinedBy <https://whatis.techtarget.com/definition/memory> ;
    rdfs:seeAlso <https://dbpedia.org/page/Virtual_memory> ;
    rdfs:subClassOf ns1:MemoryAddressSpace .

ns1:WebAPIResource a owl:Class ;
    rdfs:label "Web API Resource" ;
    ns1:definition "A web API resource is an API resource identified by a Uniform Resource Identifier (URI) and made available from one host to another host via a web protocol and across a network or networks." ;
    rdfs:subClassOf ns1:WebResource .

ns1:WebAccessToken a owl:Class ;
    rdfs:label "Web Access Token" ;
    ns1:definition "A web access token is a credential that allows a web client application to access a specific resource to perform specific actions on behalf of the user." ;
    ns1:synonym "WAT" ;
    rdfs:seeAlso <http://dbpedia.org/resource/JSON_Web_Token>,
        <https://auth0.com/blog/id-token-access-token-what-is-the-difference/> ;
    rdfs:subClassOf ns1:SessionToken .

ns1:WebApplicationFirewall a owl:Class ;
    rdfs:label "Web Application Firewall" ;
    ns1:definition "A web application firewall (or WAF) filters, monitors, and blocks HTTP traffic to and from a web application. A WAF is differentiated from a regular firewall in that a WAF is able to filter the content of specific web applications while regular firewalls serve as a safety gate between servers. By inspecting HTTP traffic, it can prevent attacks stemming from web application security flaws, such as SQL injection, cross-site scripting (XSS), file inclusion, and security misconfigurations." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_application_firewall> ;
    rdfs:subClassOf ns1:ApplicationLayerFirewall ;
    skos:altLabel "WAF" .

ns1:WebApplicationServer a owl:Class ;
    rdfs:label "Web Application Server" ;
    ns1:definition "A web application server is a web server that hosts applications. Application server frameworks are software frameworks for building application servers. An application server framework provides both facilities to create web applications and a server environment to run them. In the case of Java application servers, the server behaves like an extended virtual machine for running applications, transparently handling connections to the database on one side, and, often, connections to the Web client on the other." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Application_server> ;
    rdfs:subClassOf ns1:WebServer .

ns1:WebIdentityToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Identity Token" ;
    ns1:definition "An ID token is an artifact that proves that the user has been authenticated." ;
    ns1:kb-article """## How it works

An ID token is proof of the user's authentication. An ID token is encoded as a JSON Web Token (JWT), a standard format that allows your application to easily inspect its content, and make sure it comes from the expected issuer and that no one else changed it.""" ;
    ns1:signed-by ns1:CryptographicKey ;
    ns1:synonym "Identity Token" ;
    rdfs:isDefinedBy <https://auth0.com/blog/id-token-access-token-what-is-the-difference/> ;
    rdfs:subClassOf [ ],
        ns1:Credential .

ns1:WideAreaNetwork a owl:Class ;
    rdfs:label "Wide Area Network" ;
    ns1:definition "By contrast to a local area network (LAN), a wide area network (WAN), not only covers a larger geographic distance, but also generally involves leased telecommunication circuits or Internet links." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Local_area_network> ;
    rdfs:subClassOf ns1:Network ;
    skos:altLabel "WAN" .

ns1:WindowOpenFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows OpenFile" ;
    ns1:definition "Creates, opens, reopens, or deletes a file." ;
    ns1:invokes ns1:WindowsNtOpenFile ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-openfile> ;
    rdfs:subClassOf [ ],
        ns1:OSAPICreateFile,
        ns1:OSAPIOpenFile .

ns1:WindowsCreateFileA a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows CreateFileA" ;
    ns1:definition "Creates or opens a file or I/O device. The most commonly used I/O devices are as follows: file, file stream, directory, physical disk, volume, console buffer, tape drive, communications resource, mailslot, and pipe. The function returns a handle that can be used to access the file or device for various types of I/O depending on the file or device and the flags and attributes specified." ;
    ns1:invokes ns1:WindowsNtCreateFile,
        ns1:WindowsNtCreateMailslotFile,
        ns1:WindowsNtCreateNamedPipeFile,
        ns1:WindowsNtCreatePagingFile ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:OSAPICreateFile,
        ns1:OSAPIOpenFile .

ns1:WindowsCreateProcessA a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows CreateProcessA" ;
    ns1:definition "Creates a new process and its primary thread. The new process runs in the security context of the calling process." ;
    ns1:invokes ns1:WindowsNtCreateProcess,
        ns1:WindowsNtCreateProcessEx ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OSAPICreateProcess .

ns1:WindowsCreateRemoteThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows CreateRemoteThread" ;
    ns1:invokes ns1:WindowsNtCreateThreadEx ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createremotethread> ;
    rdfs:subClassOf [ ],
        ns1:OSAPICreateThread .

ns1:WindowsCreateThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows CreateThread" ;
    ns1:definition "Creates a thread to execute within the virtual address space of the calling process." ;
    ns1:invokes ns1:WindowsNtCreateThread,
        ns1:WindowsNtCreateThreadEx ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createthread> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OSAPICreateThread .

ns1:WindowsDeleteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows DeleteFile" ;
    ns1:definition "Deletes an existing file." ;
    ns1:invokes ns1:WindowsNtDeleteFile ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-deletefile> ;
    rdfs:subClassOf [ ],
        ns1:OSAPIDeleteFile .

ns1:WindowsDuplicateToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows DuplicateToken" ;
    ns1:definition "The DuplicateToken function creates a new access token that duplicates one already in existence." ;
    ns1:invokes ns1:WindowsNtDuplicateToken ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-duplicatetoken> ;
    rdfs:subClassOf [ ],
        ns1:OSAPICopyToken .

ns1:WindowsGetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows GetThreadContext" ;
    ns1:definition "Retrieves the context of the specified thread." ;
    ns1:invokes ns1:WindowsNTGetThreadContext ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadcontext> ;
    rdfs:subClassOf [ ],
        ns1:OSAPIGetThreadContext .

ns1:WindowsNtAllocateVirtualMemoryEx a owl:Class ;
    rdfs:label "Windows NtAllocateVirtualMemoryEx" ;
    rdfs:subClassOf ns1:OSAPIAllocateMemory .

ns1:WindowsNtSetInformationFileArgumentFileDispositionInformation a owl:Class ;
    rdfs:label "Windows NtSetInformationFile Argument FileDispositionInformation" ;
    ns1:definition "Request to delete the file when it is closed or cancel a previously requested deletion." ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ntsetinformationfile> ;
    rdfs:subClassOf ns1:OSAPIDeleteFile .

ns1:WindowsNtSuspendProcess a owl:Class ;
    rdfs:label "Windows NtSuspendProcess" ;
    rdfs:subClassOf ns1:OSAPISuspendProcess .

ns1:WindowsOpenProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows OpenProcess" ;
    ns1:definition "Opens an existing local process object." ;
    ns1:invokes ns1:WindowsNtOpenProcess ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocess> ;
    rdfs:subClassOf [ ],
        ns1:OSAPITraceProcess .

ns1:WindowsOpenThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows OpenThread" ;
    ns1:definition "Opens an existing thread object." ;
    ns1:invokes ns1:WindowsNtOpenThread ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openthread> ;
    rdfs:subClassOf [ ],
        ns1:OSAPITraceThread .

ns1:WindowsQueryPerformanceCounter a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows QueryPerformanceCounter" ;
    ns1:definition "Retrieves the current value of the performance counter, which is a high resolution (<1us) time stamp that can be used for time-interval measurements." ;
    ns1:invokes ns1:WindowsNtQuerySystemTime ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/profileapi/nf-profileapi-queryperformancecounter> ;
    rdfs:subClassOf [ ],
        ns1:OSAPIGetSystemTime .

ns1:WindowsReadFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows ReadFile" ;
    ns1:definition "Reads data from the specified file or input/output (I/O) device. Reads occur at the position specified by the file pointer if supported by the device." ;
    ns1:invokes ns1:WindowsNtReadFile,
        ns1:WindowsNtReadFileScatter ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-readfile> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OSAPIReadFile .

ns1:WindowsResumeThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows ResumeThread" ;
    ns1:definition "Decrements a thread's suspend count. When the suspend count is decremented to zero, the execution of the thread is resumed." ;
    ns1:invokes ns1:WindowsNtResumeThread ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-resumethread> ;
    rdfs:subClassOf [ ],
        ns1:OSAPIResumeThread .

ns1:WindowsSetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows SetThreadContext" ;
    ns1:definition "Sets the context for the specified thread." ;
    ns1:invokes ns1:WindowsNtSetThreadContext ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadcontext> ;
    rdfs:subClassOf [ ],
        ns1:OSAPISetThreadContext .

ns1:WindowsSuspendThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows SuspendThread" ;
    ns1:definition "Suspends the specified thread." ;
    ns1:invokes ns1:WindowsNtSuspendThread ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-suspendthread> ;
    rdfs:subClassOf [ ],
        ns1:OSAPISuspendThread .

ns1:WindowsTerminateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows TerminateProcess" ;
    ns1:definition "Terminates the specified process and all of its threads." ;
    ns1:invokes ns1:WindowsNtTerminateProcess ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminateprocess> ;
    rdfs:subClassOf [ ],
        ns1:OSAPITerminateProcess .

ns1:WindowsVirtualAllocEx a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows VirtualAllocEx" ;
    ns1:definition "Reserves, commits, or changes the state of a region of memory within the virtual address space of a specified process. The function initializes the memory it allocates to zero." ;
    ns1:invokes ns1:WindowsNtAllocateVirtualMemory,
        ns1:WindowsNtProtectVirtualMemory ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualallocex> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OSAPIAllocateMemory .

ns1:WindowsVirtualFree a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows VirtualFree" ;
    ns1:definition "Releases, decommits, or releases and decommits a region of pages within the virtual address space of the calling process." ;
    ns1:invokes ns1:WindowsNtFreeVirtualMemory ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualfree> ;
    rdfs:subClassOf [ ],
        ns1:OSAPIFreeMemory .

ns1:WindowsVirtualProtectEx a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows VirtualProtectEx" ;
    ns1:definition "Changes the protection on a region of committed pages in the virtual address space of a specified process." ;
    ns1:invokes ns1:WindowsNtAllocateVirtualMemory,
        ns1:WindowsNtProtectVirtualMemory ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualprotectex> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OSAPIAllocateMemory .

ns1:WindowsWriteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows WriteFile" ;
    ns1:definition "Writes data to the specified file or input/output (I/O) device." ;
    ns1:invokes ns1:WindowsNtWriteFile,
        ns1:WindowsNtWriteFileGather ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-writefile> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OSAPIWriteFile .

ns1:WindowsWriteProcessMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows WriteProcessMemory" ;
    ns1:definition "Writes data to an area of memory in a specified process. The entire area to be written to must be accessible or the operation fails." ;
    ns1:invokes ns1:WindowsNtFlushInstructionCache,
        ns1:WindowsNtProtectVirtualMemory,
        ns1:WindowsNtWriteVirtualMemory ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-writeprocessmemory> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:OSAPIWriteMemory .

ns1:WirelessRouter a owl:Class ;
    rdfs:label "Wireless Router" ;
    ns1:definition "A wireless router is a device that performs the functions of a router and also includes the functions of a wireless access point. It is used to provide access to the Internet or a private computer network. Depending on the manufacturer and model, it can function in a wired local area network, in a wireless-only LAN, or in a mixed wired and wireless network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Wireless_router> ;
    rdfs:subClassOf ns1:Router,
        ns1:WirelessAccessPoint .

ns1:ZeroClientComputer a owl:Class ;
    rdfs:label "Zero Client Computer" ;
    ns1:definition "Zero client is also referred as ultra thin client, contains no moving parts but centralizes all processing and storage to just what is running on the server. As a result, it requires no local driver to install, no patch management, and no local operating system licensing fees or updates. The device consumes very little power and is tamper-resistant and completely incapable of storing any data locally, providing a more secure endpoint." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Thin_client#Zero_client> ;
    rdfs:subClassOf ns1:ThinClientComputer .

ns1:AccessModeling a ns1:AccessModeling,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Modeling" ;
    ns1:d3fend-id "D3-AM" ;
    ns1:definition "Access modeling identifies and records the access permissions granted to administrators, users, groups, and systems." ;
    ns1:kb-reference ns1:Reference-RFC7642SystemForCrossDomainIdentityManagementDefinitionsOverviewConceptsAndRequirements ;
    ns1:maps ns1:AccessControlConfiguration,
        ns1:UserAccount ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:AccessProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Process" ;
    ns1:accesses ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:AccountLocking a ns1:AccountLocking,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Account Locking" ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-AL" ;
    ns1:definition "The process of temporarily disabling user accounts on a system or domain." ;
    ns1:disables ns1:UserAccount ;
    ns1:kb-article """## How it works
Management servers with enterprise policies for account management provide the ability to enable and disable account for given rules. The rules may include specific periods of time (eg. weekend, plant shutdown, leave periods), specific user types or groups, or individual users.

## Considerations
* Local accounts caches vs centralized account management
* Single Sign-on
* Role based vs Attribute based systems

## Examples of account configuration stores
* Directory Services
* Active Directory
* RADIUS
* LDAP
* Oracle User Account Management
* JumpCloud""" ;
    ns1:kb-reference ns1:Reference-AccountMonitoring_ForescoutTechnologies,
        ns1:Reference-FrameworkForNotifyingADirectoryServiceOfAuthenticationEventsProcessedOutsideTheDirectoryService_OracleInternationalCorp ;
    rdfs:subClassOf [ ],
        ns1:CredentialEviction .

ns1:ActiveCertificateAnalysis a ns1:ActiveCertificateAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Active Certificate Analysis" ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-ACA" ;
    ns1:definition "Actively collecting PKI certificates by connecting to the server and downloading its server certificates for analysis." ;
    ns1:kb-article """## How it works
Analysis of server certificates using active methods to detect if certificates have been misconfigured or spoofed by using elements of the certificate, certificate authorities and signatures.

### Certificate validity analysis
This can be accomplished by verifying the digital signature on certificate.

### Certificate path analysis
The client's browser can perform path verification to ensure that the server's certificate contains a valid trust anchor.

### Certificate configuration analysis
Some browsers can be configured to implement the key-usage extensions contained certificates. This can help to prevent a certificate from being misused.

### Certificate revocation status analysis
Using either Certificate Revocation Lists (CRLs) or Online Certificate Status Protocol (OCSP) to determine the revocation status. OCSP Stapling, binding the status with the certificate, helps to mitigate potential delay in status verifications.

## Considerations
* Management of the PKI across the enterprise typically requires automation to maintain scalability and flexibility
* If the certificate authority, issuing the certificate, is compromised then all of the certificates issued by the CA are suspect
* There may be delays associated with updates to certificates
* Revoked certificates give the appearance of valid certificates until they are published to a trusted revocation service (OCSP or CRL)
* The revocation service (OCSP or CRL) may be down during our connection and a browser will need to make a decision will need to be made about trusting the connection""" ;
    ns1:kb-reference ns1:Reference-SecuringWebTransactions ;
    rdfs:subClassOf ns1:CertificateAnalysis .

ns1:ActiveLogicalLinkMapping a ns1:ActiveLogicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Active Logical Link Mapping" ;
    ns1:d3fend-id "D3-ALLM" ;
    ns1:definition "Active logical link mapping sends and receives network traffic as a means to map the whole data link layer, where the links represent logical data flows rather than physical connection" ;
    ns1:kb-article """## How it works

Active logical link mapping establishes awareness of logical links in the network by sending data over the network to gather information about logical connections in the network.

Typically this will be achieved through network telemetry coordinated for network management and monitoring and will use a link layer discovery protocol such as LLDP and the information gathered and aggregated a higher levels using an application protocol such as SNMP.  The information may be polled by network management softare or configured once and then pushed from network sensors (or agents.)

Another means of establishing network connectivity is by means of sendingn traffic through the use of a tool such as traceroute, to determine the logical paths through the network architecture.

## Considerations

* Best practice is to encrypte network monitoring data and require authentication for queries or admin/management functions.
* Push notifications reduce bandwidth necessary to capture and maintain information if reliable transport is used.
* Special consideration should be made before using of active scanning in OT networks and OT-safe options chosen where available.""" ;
    ns1:kb-reference ns1:Reference-IdentificationOfTracerouteNodesAndAssociatedDevices,
        ns1:Reference-SNMPNetworkAutoDiscovery ;
    ns1:may-query ns1:CollectorAgent ;
    rdfs:subClassOf [ ],
        ns1:LogicalLinkMapping .

ns1:ActivePhysicalLinkMapping a ns1:ActivePhysicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Active Physical Link Mapping" ;
    ns1:d3fend-id "D3-APLM" ;
    ns1:definition "Active physical link mapping sends and receives network traffic as a means to map the physical layer." ;
    ns1:kb-reference ns1:Reference-IdentificationOfTracerouteNodesAndAssociatedDevices,
        ns1:Reference-UsingSpanningTreeProtocolSTPToEnhanceLayer2NetworkTopologyMaps ;
    ns1:may-query ns1:CollectorAgent ;
    ns1:synonym "Active Physical Layer Mapping" ;
    rdfs:subClassOf [ ],
        ns1:PhysicalLinkMapping ;
    owl:disjointWith ns1:DirectPhysicalLinkMapping .

ns1:Actuator a owl:Class ;
    rdfs:label "Actuator" ;
    ns1:definition "An actuator is a mechanical or electromechanical device that, upon receiving a relatively low-energy control signal (e.g., electrical voltage, fluid pressure, or human force), translates its primary energy source (electric, hydraulic, or pneumatic) into targeted mechanical motion or adjustment. It typically works in conjunction with a control device (like a valve or logic driver) and is central to automation, enabling machines or systems to move, open, close, or otherwise manipulate their components or environment. By amplifying or redirecting energy from one form to another, the actuator executes control commands, thereby automating processes in industrial, automotive, aerospace, and other domains where precise mechanical action is essential." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Actuator> ;
    rdfs:subClassOf ns1:OutputDevice .

ns1:AddressSpace a owl:Class ;
    rdfs:label "Address Space" ;
    ns1:definition "An address space defines a range of discrete addresses, each of which may correspond to a network host, peripheral device, disk sector, a memory cell or other logical or physical entity. For software programs to save and retrieve stored data, each unit of data must have an address where it can be located. The number of address spaces available depends on the underlying address structure, which is usually limited by the computer architecture being used." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Address_space> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:AdministrativeNetworkActivityAnalysis a ns1:AdministrativeNetworkActivityAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Administrative Network Activity Analysis" ;
    ns1:analyzes ns1:IntranetAdministrativeNetworkTraffic ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-ANAA" ;
    ns1:definition "Detection of unauthorized use of administrative network protocols by analyzing network activity against a baseline." ;
    ns1:kb-article """## How it works
Network protocols such as RDP, IPMI, SSH, SNMP, VNC, MOSH, NX, TeamViewer, SPICE, PCoIP, and others are used by system administrators to remotely manage servers. Defenders monitor administrative network activity to determine if the use of remote protocols is malicious. Attackers can abuse administrative protocols and leverage them for initial access to various endpoints. For example, an attacker with valid credentials will remotely SSH or RDP into a server and attempt to blend in with existing traffic from system administrators. By monitoring the traffic activity, it is possible to detect when the protocols are behaving differently from a known baseline of system administration activity.

## Considerations
* Administrative traffic can be encrypted, making network protocol analysis a challenge
* False alarms can be mitigated by integration with inventory management systems""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingSuspiciousAdministrativeActivity_VectraNetworksInc,
        ns1:Reference-RemoteRegistry_MITRE,
        ns1:Reference-WindowsRemoteManagement_WinRM_MITRE ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:Application-basedProcessIsolation a ns1:Application-basedProcessIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application-based Process Isolation" ;
    ns1:d3fend-id "D3-ABPI" ;
    ns1:definition "Application code which prevents its own subroutines from accessing intra-process / internal memory space." ;
    ns1:isolates ns1:Process ;
    ns1:kb-article """## How it works
Some applications implement logic to permit or deny a particular subroutine access to other data within the same applicaition process. This is intended to prevent critical application process data from being tampered with.

### Application-based Process Isolation in web browsers.

Isolation in browsers usually is designed with the following architectural mindset:
* Sandboxes and web resources should not be allowed to access each other because compromise of one should not effect the other.
* The principle of least-privilege should be followed when browsing.
The following aspects help make browser-based process isolation possible:
* Same Origin Policy
* Separate tabs and iframes use their own DOMs (cross-site document object models always run as a different process)
* CORS ensures cross-site data is not delivered to a process unless the server allows it
* Cookie and local data storage is separated by domain/site
* Separate execution environments (threads)

## Considerations
- Using isolation in browsers does mitigate and protect by default some types of attacks (e.g. renderer attacks and access to the filesystem) but it depends on correct configuration of CORS, use of valid/appropriate certificates.
-  Application-based Process Isolation may increase memory footprint.
-  Application-based Process Isolation may decrease application performance.""" ;
    ns1:kb-reference ns1:Reference-PrivateApplicationAccessWithBrowserIsolation,
        ns1:Reference-ProtectingWebApplicationsFromUntrustedEndpointsUsingRemoteBrowserIsolation,
        ns1:Reference-SiteIsolationDesignDocument ;
    ns1:restricts ns1:Subroutine ;
    ns1:synonym "Browser-based Process Isolation",
        "Remote Browser Isolation",
        "Sandbox" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:ApplicationConfigurationDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration Database Record" ;
    ns1:definition "A database record holding information used to configure the parameters and initial settings for an application." ;
    rdfs:subClassOf ns1:ApplicationConfiguration,
        ns1:ConfigurationDatabaseRecord .

ns1:ApplicationConfigurationHardening a ns1:ApplicationConfigurationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration Hardening" ;
    ns1:d3fend-id "D3-ACH" ;
    ns1:definition "Modifying an application's configuration to reduce its attack surface." ;
    ns1:hardens ns1:ApplicationConfiguration ;
    ns1:kb-article """## How it works
Application configuration settings can be configured to limit the permissions on an application or disable certain vulnerable application features.

Hardening an application's configuration involves analyzing not only the application but also the environment in which the application is run in for potential vulnerabilities.""" ;
    ns1:kb-reference ns1:Reference-RedHatEnterpriseLinux8SecurityTechnicalImplementationGuide,
        ns1:Reference-Windows10STIG ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:ApplicationLayerFirewall a owl:Class ;
    rdfs:label "Application Layer Firewall" ;
    ns1:definition "An application firewall is a form of firewall that controls input, output, and/or access from, to, or by an application or service. It operates by monitoring and potentially blocking the input, output, or system service calls that do not meet the configured policy of the firewall. The application firewall is typically built to control all network traffic on any OSI layer up to the application layer. It is able to control applications or services specifically, unlike a stateful network firewall, which is - without additional software - unable to control network traffic regarding a specific application. There are two primary categories of application firewalls, network-based application firewalls and host-based application firewalls." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Application_firewall> ;
    rdfs:subClassOf ns1:Firewall ;
    skos:altLabel "Application Firewall" .

ns1:ApplicationRule a owl:Class ;
    rdfs:label "Application Rule" ;
    ns1:definition "A configuration of an application which is used to apply logical or data processing functions to data processed by the application." ;
    rdfs:subClassOf ns1:ApplicationConfiguration .

ns1:AudioInputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Audio Input Device" ;
    ns1:definition "Audio input devices allow a user to send audio info to a computer for processing, recording, or carrying out commands. Devices such as microphones allow users to speak to the computer in order to record a voice message or navigate software. Aside from recording, audio input devices are also used with speech recognition software." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Input_device#Voice_input_devices> ;
    rdfs:subClassOf ns1:InputDevice .

ns1:AuthenticationCacheInvalidation a ns1:AuthenticationCacheInvalidation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Cache Invalidation" ;
    ns1:d3fend-id "D3-ANCI" ;
    ns1:definition "Removing tokens or credentials from an authentication cache to prevent further user associated account accesses." ;
    ns1:deletes ns1:Credential ;
    ns1:kb-article """## How it works
Applications can locally cache user authentication credentials for certain server connections. An application may attempt to use the cached credential for a connection. If the cached credentials exist then the user will not be typically prompted for new credentials.


## Considerations
Are these cached credentials only on the local host? Can they be persisted to the remote server?

## Examples
Windows Credential Management API""" ;
    ns1:kb-reference ns1:Reference-SecureCachingOfServerCredentials_DellProductsLP,
        ns1:Reference-SystemAndMethodForProvidingAnActivelyInvalidatedClient-sideNetworkResourceCache_IMVU ;
    rdfs:subClassOf [ ],
        ns1:CredentialEviction .

ns1:AuthenticationEventThresholding a ns1:AuthenticationEventThresholding,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Event Thresholding" ;
    ns1:analyzes ns1:Authentication ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-ANET" ;
    ns1:definition "Collecting authentication events, creating a baseline user profile, and determining whether authentication events are consistent with the baseline profile." ;
    ns1:kb-article """## How it works
Authentication event data is collected (logon information such as device id, time of day, day of week, geo-location, etc.) to create an activity baseline. Then, a threshold is determined either through a manually specified configuration, or a statistical analysis of deviations in historical data. New authentication events are evaluated to determine if a threshold is exceeded. Thresholds can be static or dynamic.

### Actions
As a result of the analysis, actions taken could include:

* [Account Locking](/technique/d3f:AccountLocking)
* Raising an alert

### Example data sources
 * Directory server logs
 * VPN Server logs
 * IDAM Capability logs
 * NAC logs
 * Authentication client logs
 * Kerberos network traffic
 * LDAP network traffic

## Considerations

This technique covers statistical outliers. Though depending on the complexity or dimensionality of the data considered, outliers may not be obvious to a human analyst reviewing events in simplistic analytic views. If the malicious activity is not statistically different from benign activity, an alert threshold will not be met.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        ns1:Reference-SimultaneousLoginsOnAHost_MITRE,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc>,
        ns1:Reference-UserLoggedInToMultipleHosts_MITRE,
        ns1:Reference-UserLoginActivityMonitoring_MITRE ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:AuthorizationEventThresholding a ns1:AuthorizationEventThresholding,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authorization Event Thresholding" ;
    ns1:analyzes ns1:Authorization ;
    ns1:created "2020-08-05T00:00:00"^^xsd:dateTime ;
    ns1:d3fend-id "D3-AZET" ;
    ns1:definition "Collecting authorization events, creating a baseline user profile, and determining whether authorization events are consistent with the baseline profile." ;
    ns1:kb-article """## How it works

Authorization event data is collected to create a baseline user profile. Authorization events that deviate from the baseline and exceed a static or dynamic threshold are identified for further action. Authorization events can include successful and failed authorization attempts as well as events related to permissions including viewing, editing, deleting, creating files, databases etc.

## Considerations

Depending on the complexity of the data considered, outliers may not be obvious to a human analyst reviewing events in simplistic analytic views. If malicious activity is not statistically different from benign activity, an alert threshold will not be met.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        ns1:Reference-SMBSessionSetups_MITRE,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc>,
        ns1:Reference-UserLoggedInToMultipleHosts_MITRE ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:BinaryLargeObject a owl:Class ;
    rdfs:label "Binary Large Object" ;
    ns1:definition "A binary large object (BLOB) is a collection of binary data stored as a single entity. Blobs are typically images, audio or other multimedia objects, though sometimes binary executable code is stored as a blob." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Binary_large_object> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "BLOB",
        "Blob" .

ns1:BiometricAuthentication a ns1:BiometricAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Biometric Authentication" ;
    ns1:authenticates ns1:Person ;
    ns1:d3fend-id "D3-BAN" ;
    ns1:definition "Using biological measures in order to authenticate a user." ;
    ns1:kb-reference ns1:Reference-TokenlessBiometricTransactionAuthorizationMethodAndSystem,
        ns1:Reference-www.biometric-solutions.com_keystroke-dynamics ;
    rdfs:subClassOf [ ],
        ns1:AgentAuthentication .

ns1:BlockDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Block Device" ;
    ns1:contains ns1:BootSector,
        ns1:Partition,
        ns1:PartitionTable ;
    ns1:definition """A block device (or block special file) provides buffered access to hardware devices, and provides some abstraction from their specifics.

IEEE Std 1003.1-2017: A file that refers to a device. A block special file is normally distinguished from a character special file by providing access to the device in a manner such that the hardware characteristics of the device are not visible.""" ;
    ns1:may-contain ns1:Volume ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Device_file#BLOCKDEV> ;
    rdfs:seeAlso <https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_79> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Block Special File" .

ns1:BootloaderAuthentication a ns1:BootloaderAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Bootloader Authentication" ;
    ns1:authenticates ns1:BootLoader ;
    ns1:d3fend-id "D3-BA" ;
    ns1:definition "Cryptographically authenticating the bootloader software before system boot." ;
    ns1:kb-reference ns1:Reference-UEFIPlatformInitialization-Specification ;
    ns1:synonym "Secure Boot" ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:BroadcastDomainIsolation a ns1:BroadcastDomainIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Broadcast Domain Isolation" ;
    ns1:d3fend-id "D3-BDI" ;
    ns1:definition "Broadcast isolation restricts the number of computers a host can contact on their LAN." ;
    ns1:filters ns1:LocalAreaNetworkTraffic ;
    ns1:kb-article """## How it works
Software Defined Networking, or other network encapsulation technologies intercept host broadcast traffic then route it to a specified destination per a configured policy.

This can be implemented within hypervisors, networking hardware (WAPs, switches, routers), or virutal hardware.

## Considerations
This technique is highly dependent on network infrastructure and networking requirements.""" ;
    ns1:kb-reference ns1:Reference-BroadcastIsolationAndLevel3NetworkSwitch_HewlettPackardEnterpriseDevelopmentLP,
        ns1:Reference-PrivateVirtualLocalAreaNetworkIsolation_CiscoTechnologyInc ;
    ns1:synonym "Network Segmentation" ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:Browser a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Browser" ;
    ns1:definition "A web browser (commonly referred to as a browser) is a software application for retrieving, presenting, and traversing information resources on the World Wide Web. An information resource is identified by a Uniform Resource Identifier (URI/URL) and may be a web page, image, video or other piece of content. Hyperlinks present in resources enable users easily to navigate their browsers to related resources. Although browsers are primarily intended to use the World Wide Web, they can also be used to access information provided by web servers in private networks or files in file systems." ;
    ns1:may-contain ns1:BrowserExtension ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_browser> ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/13376000-n> ;
    rdfs:subClassOf [ ],
        ns1:UserApplication .

ns1:ByteSequenceEmulation a ns1:ByteSequenceEmulation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Byte Sequence Emulation" ;
    ns1:d3fend-id "D3-BSE" ;
    ns1:definition "Analyzing sequences of bytes and determining if they likely represent malicious shellcode." ;
    ns1:kb-article """## How it works

Bytes are analyzed as if they are machine code instructions, and such instructions that are a common component of known shellcode are noted, such as stack pivots, reads from a Memory Address Table, and system calls for functions that disable protections or execute code.  For example, the x86 instruction `b0 0b: mov $11, %ax`, with no further alterations to the `%ax` register, followed by `cd 80: syscall` executes the system call `execve()` in the Linux kernel, which replaces the current process with another one specified -- this is a common action in shellcode, so this sequence would be flagged.

This technique detects shellcode despite whether or not it would cause a buffer overflow in the target binary.

If the sequence of bytes contains a sequence similar to that used in malicious shellcode, the entire byte sequence is flagged and a follow-on technique may be invoked.

## Considerations

### False Negatives
If the shellcode instructions are far apart, simple implementations might not detect the shellcode.

Due to the nature of assembly instructions not having a defined start or end, implementations which do not process all start sequences (for example, when they a find byte sequence of interest, continue scanning forwards from the end of it) might not detect the shellcode.

This technique might not detect more complex or obfuscated instructions.  For that purpose, Dynamic Analysis or Emulated File Analysis could assist by analyzing the actual instruction function.

This technique may not detect self-modifying code.  To make it harder for a process to modify itself, Process Segment Execution Prevention should be used, while noting its considerations.

This technique might not detect malicious shellcode which reuses instructions in the target binary for malicious effect, as memory references in the presumed assembly code are not dereferenced.  Dynamic Analysis and Emulated File Analysis, when set up properly to fork from the running target binary, might detect this.  Process Segment Execution Prevention combined with Segment Address Offset Randomization frequently makes introduction of shellcode through overwriting a saved return pointer more difficult.  Call stack depth analysis might detect excessive reuse of instructions in the target binary.  Shadow Stack Frames might detect that a stack frame's return address has changed and Stack Frame Canary Verification might detect that the stack frame's return address was overwritten.  Other heuristic methods might detect jump-oriented programming shellcode.

With inserting code directly, that it is not a buffer overflow, and just some place where code is executed either to a file or a write-what-where, the buffer overflow mitigations do not help.  Behavioral analysis could detect this, or proper access control could mitigate this.

### False Positives

Byte sequences containing code that is never used as machine code are still analyzed and flagged for anomalies, and [eventually](http://mathforum.org/library/drmath/view/55871.html), it is likely that an attack sequence will arise from the sheer volume of bytes transmitted.""" ;
    ns1:kb-reference ns1:Reference-Network-BasedBufferOverflowDetectionByExploitCodeAnalysis_InformationSecurityResearchCentre,
        ns1:Reference-Network-levelPolymorphicShellcodeDetectionUsingEmulation ;
    ns1:synonym "Shellcode Transmission Detection" ;
    rdfs:subClassOf ns1:NetworkTrafficAnalysis .

ns1:CallStack a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Call Stack" ;
    ns1:contains ns1:StackFrame ;
    ns1:definition "In computer science, a call stack is a stack data structure that stores information about the active subroutines of a computer program. This kind of stack is also known as an execution stack, program stack, control stack, run-time stack, or machine stack, and is often shortened to just \"the stack\". Although maintenance of the call stack is important for the proper functioning of most software, the details are normally hidden and automatic in high-level programming languages. Many computer instruction sets provide special instructions for manipulating stacks." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Call_stack> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:Certificate-basedAuthentication a ns1:Certificate-basedAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate-based Authentication" ;
    ns1:d3fend-id "D3-CBAN" ;
    ns1:definition "Requiring a digital certificate in order to authenticate a user." ;
    ns1:kb-article """## How it works

Certificate-based authentication is a security mechanism that uses digital certificates to verify the identity of a user, device, or server before granting access to a network or system. This method relies on a pair of cryptographic keys: a public key and a private key.

## Considerations

* Private Key Protection: Ensure that private keys are securely stored and protected against unauthorized access.
* Certificate Revocation: Implement a robust process for revoking certificates if they are compromised or no longer needed.
* Man-in-the Middle Attacks: Use mutual authentication to mitigate the risk of these attacks.""" ;
    ns1:kb-reference ns1:Reference-FederalPublicKeyInfrastructure101 ;
    ns1:reads ns1:Certificate ;
    rdfs:subClassOf [ ],
        ns1:AgentAuthentication .

ns1:CertificatePinning a ns1:CertificatePinning,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate Pinning" ;
    ns1:authenticates ns1:PublicKey ;
    ns1:d3fend-id "D3-CP" ;
    ns1:definition "Persisting either a server's X.509 certificate or their public key and comparing that to server's presented identity to allow for greater client confidence in the remote server's identity for SSL connections." ;
    ns1:hardens ns1:Certificate ;
    ns1:kb-article """## How it works
Pinning allows for a trusted copy of a certificate or public key to be associated with a server and thus reducing the likelihood of frequently visited sites being subjected to man-in-the-middle attacks. Certificates or public keys can be pinned after a trusted connection has been established or the pinning can be preloaded in an application, which is the preferred method for mobile applications.

Pinning can take the form of certificate pinning or public key pinning.

## Forms of Pinning
* Certificate Pinning (CP) allows for the client to verify the X.509 certificate with a preloaded certificate. Typically, this is involves storing a hash of the certificate and using the stored hash for comparison to the hash of the certificate submitted during the SSL handshake.

* Public Key Pinning (PKP) requires the extraction of a public key from server's certificate. The stored public key is compared to the server's presented public key. A public key is expected to rotate less frequently than an X.509 certificate and is generally favored over certificate pinning.

An extension of PKP is Subject Public Key Information Pinning (SPKI) includes public key pinning plus additional information for SSL connections. The additional information can include preferred algorithms.

## Considerations

* With pinned certificates whenever a server updates its certificate, the pinned certificates will also need to be updated
* With pinned public keys the extracted key may be subject to key refresh policies but much less frequently
* Servers can become unavailable if pinned objects are set and not updated with the rotated identities. This may require a pinning strategy to be developed.
* The application of this technique within web browser applications has been [deprecated](https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning) by  popular web browser developers. They now favor certificate analysis via public certificate transparency logs, and the EXPECT-CT HTTP header.""" ;
    ns1:kb-reference ns1:Reference-CertificateAndPublicKeyPinning,
        ns1:Reference-End-to-endCertificatePinning,
        ns1:Reference-PublicKeyPinningExtensionForHTTP ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialHardening .

ns1:CertificateRotation a ns1:CertificateRotation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate Rotation" ;
    ns1:d3fend-id "D3-CERO" ;
    ns1:definition "Certificate rotation involves replacing digital certificates and their private keys to maintain cryptographic integrity and trust, mitigating key compromise risks and ensuring continuous secure communications." ;
    ns1:kb-article ns1:Reference-PasswordandKeyRotation-SSH,
        """## How it works

Certificate rotation should be performed when:
- Any certificate expires.
- A new CA authority is substituted for the old, thus requiring a replacement root certificate.
- New or modified constraints need to be imposed on one or more certificates.
- A security breach has occurred.

Considerations:
- Managing certificate rotation across an enterprise can be complex. Automated solutions, sold by multiple vendors, should be considered to manage this complexity.""" ;
    ns1:regenerates ns1:Certificate ;
    rdfs:seeAlso <https://docs.couchbase.com/server/7.0/manage/manage-security/rotate-server-certificates.html> ;
    rdfs:subClassOf [ ],
        ns1:CredentialRotation .

ns1:CertificateTrustStore a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate Trust Store" ;
    ns1:contains ns1:Certificate ;
    ns1:definition "A certificate truststore is used to store public certificates used to authenticate clients by the server for an SSL connection." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public_key_certificate>,
        <https://www.educative.io/edpresso/keystore-vs-truststore> ;
    rdfs:subClassOf [ ],
        ns1:TrustStore .

ns1:Client-serverPayloadProfiling a ns1:Client-serverPayloadProfiling,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Client-server Payload Profiling" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-CSPP" ;
    ns1:definition "Comparing client-server request and response payloads to a baseline profile to identify outliers." ;
    ns1:kb-article """## How it works
Profiling request and response payloads across multiple clients to a single server to develop a baseline of their characteristics. May take into account request/response sizes, entropy, frequency, and rhythm. Finally, identify outliers as they may indicate a malicious payload delivery and subsequent server exploitation.


## Considerations
* Collecting metrics to establish a profile can be challenging since user behavior can change easily.
* Employees may work different hours or inconsistent schedules which will cause false positives.
* Collection of network activity to generate metrics is a computationally intensive process.
* Users may log into different workstations which may cause false positives.""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingMaliciousPayloads_VectraNetworksInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:ClientApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Client Application" ;
    ns1:definition "A client application is software that accesses a service made available by a server. The server is often (but not always) on another computer system, in which case the client accesses the service by way of a network. The term applies to the role that programs or devices play in the client-server model" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Client_(computing)> ;
    rdfs:seeAlso ns1:T1554 ;
    rdfs:subClassOf ns1:Application .

ns1:Clipboard a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Clipboard" ;
    ns1:definition "The clipboard is a buffer that some operating systems provide for short-term storage and transfer within and between application programs. The clipboard is usually temporary and unnamed, and its contents reside in the computer's RAM. The clipboard is sometimes called the paste buffer. Windows, Linux and macOS support a single clipboard transaction. Each cut or copy overwrites the previous contents. Normally, paste operations copy the contents, leaving the contents available in the clipboard for further pasting." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Clipboard_(computing)> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:CloudInstanceMetadata a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Instance Metadata" ;
    ns1:definition "Cloud instance metadata is configuration information on the instance and users of the instance.  This includes such information as security groups, public ip addresses, and private addresses, public keys configured, and event rotating security keys. User data can contain initialization scripts, variables, passwords, and more." ;
    rdfs:seeAlso <https://isc.sans.edu/forums/diary/Cloud+Metadata+Urls/22046> ;
    rdfs:subClassOf ns1:CloudConfiguration .

ns1:CloudStorage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Storage" ;
    ns1:definition "Cloud storage is storage held within a computing cloud." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Cloud_storage> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Cloud_computing> ;
    rdfs:subClassOf ns1:SecondaryStorage .

ns1:CodeRepository a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Code Repository" ;
    ns1:definition "A code repository is a form of database where code, typically source code, is stored and managed.  In revision control systems, a repository is a data structure that stores metadata for a set of files or directory structure. Depending on whether the version control system in use is distributed like (Git or Mercurial) or centralized like (Subversion, CVS, or Perforce), the whole set of information in the repository may be duplicated on every user's system or may be maintained on a single server." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Repository_(version_control)> ;
    rdfs:subClassOf ns1:Database ;
    skos:altLabel "Repository",
        "Version Control Repository" .

ns1:CommandHistoryLogFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command History Log File" ;
    ns1:contains ns1:CommandHistoryLog ;
    ns1:definition "A command history log file is a file containing a command history, which the history of commands run in an operating system shell." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Command_history> ;
    rdfs:subClassOf [ ],
        ns1:LogFile .

ns1:CommandLineInterface a owl:Class ;
    rdfs:label "Command Line Interface" ;
    ns1:definition "A command-line interface or command language interpreter (CLI), also known as command-line user interface, console user interface, and character user interface (CUI), is a means of interacting with a computer program where the user (or client) issues commands to the program in the form of successive lines of text (command lines). Command-line interfaces to computer operating systems are less widely used by casual computer users, who favor graphical user interfaces. Programs with command-line interfaces are generally easier to automate via scripting." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Command-line_interface> ;
    rdfs:subClassOf ns1:UserInterface ;
    skos:altLabel "CLI",
        "CUI",
        "Command-line Interface" .

ns1:Compiler a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compiler" ;
    ns1:definition "In computing, a compiler is a computer program that translates computer code written in one programming language (the source language) into another language (the target language). The name \"compiler\" is primarily used for programs that translate source code from a high-level programming language to a lower level language (e.g., assembly language, object code, or machine code) to create an executable program." ;
    ns1:reads ns1:CompilerConfigurationFile ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Compiler> ;
    rdfs:subClassOf [ ],
        ns1:BuildTool .

ns1:ComputingSnapshot a owl:Class ;
    rdfs:label "Computing Snapshot" ;
    ns1:definition "In computer systems, a snapshot is the state of a system at a particular point in time." ;
    rdfs:isDefinedBy <https://dbpedia.org/resource/Snapshot_(computer_storage)> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "Snapshot" .

ns1:ConfigurationInventory a ns1:ConfigurationInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Inventory" ;
    ns1:d3fend-id "D3-CI" ;
    ns1:definition "Configuration inventory identifies and records the configuration of software and hardware and their components throughout the organization." ;
    ns1:inventories ns1:ConfigurationResource ;
    ns1:kb-article """## How it works

The organization retrieves configuration information through means of SNMP (MIB records), WBEM (CIM records), other protocols, or custom scripts and captures that information in a repository, typically known as a Configuration Management Database (CMDB).\"""" ;
    ns1:kb-reference ns1:Reference-Web-BasedEnterpriseManagement,
        ns1:Reference-Windows-Management-Infrastructure,
        ns1:Reference-Windows-Management-Instrumentation ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:ConnectSocket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Connect Socket" ;
    ns1:connects ns1:Pipe ;
    ns1:definition "The connect socket system call connects the socket to a target address." ;
    rdfs:seeAlso <https://man7.org/linux/man-pages/man2/connect.2.html> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ConnectedHoneynet a ns1:ConnectedHoneynet,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Connected Honeynet" ;
    ns1:d3fend-id "D3-CHN" ;
    ns1:definition "A decoy service, system, or environment, that is connected to the enterprise network, and simulates or emulates certain functionality to the network, without exposing full access to a production system." ;
    ns1:kb-article """## How it works
Decoy honeypots are deployed within the enterprise environment that emulate certain services or portions of an OS to attract attackers.

## Considerations
A connected honeynet provides a tradeoff between emulating certain functionality but not being as sophisticated as an integrated honeynet. The connected honeynet may not provide enough functionality to detect new attack patterns or zero day exploits but could provide enough functionality for specific known vulnerabilities.""" ;
    ns1:kb-reference ns1:Reference-ModificationOfAServerToMimicADeceptionMechanism_AcalvioTechnologiesInc ;
    ns1:spoofs ns1:LocalAreaNetwork ;
    rdfs:subClassOf [ ],
        ns1:DecoyEnvironment .

ns1:ConnectionAttemptAnalysis a ns1:ConnectionAttemptAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Connection Attempt Analysis" ;
    ns1:analyzes ns1:IntranetNetworkTraffic ;
    ns1:d3fend-id "D3-CAA" ;
    ns1:definition "Analyzing failed connections in a network to detect unauthorized activity." ;
    ns1:kb-article """## How it works
Connection Attempt Analysis in multiple ways.

### Monitoring traffic to unallocated IP space
One approach looks for failed connection attempts against unallocated IP space. First, network traffic is captured to map out the network to identify network assets as well as unallocated IP space. The map is then used to determine if connection attempts are being made to the unallocated IP space.

### Monitoring for sequentially transmitted traffic
Another approach passively inspects network traffic with application protocol analyzers observing network activity characteristics such as volume of packets sent/ received, TCP session attributes, and connection information between hosts (start time, source/destination host, services, etc.). Then using pattern matching to identify traffic which appears to be probing for network hosts.

## Considerations

* Implementations that rely on analysis of unallocated IP address space increase in their complexity with network size and decentralized network infrastructure.
* Inventory of unallocated IP space should should be continuously updated to mitigate the risk of false positives.
* IPv6 also introduces challenges including IPv6 traffic bypassing IPv4 specific protection systems (ex. firewalls and IDS) and complexity in managing both IPv6 and IPv4 addresses.""" ;
    ns1:kb-reference ns1:Reference-DetectingNetworkReconnaissanceByTrackingIntranetDark-netCommunications_VECTRANETWORKSInc ;
    ns1:synonym "Network Scan Detection" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:ContainerImageAnalysis a ns1:ContainerImageAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Container Image Analysis" ;
    ns1:analyzes ns1:ContainerImage ;
    ns1:d3fend-id "D3-CIA" ;
    ns1:definition "Analyzing a Container Image with respect to a set of policies." ;
    ns1:kb-article """## How it works

Container images are standalone collections of the executable code and
content that are used to populate a container environment.
They are usually created by either building a container from scratch or by
building on top of an existing image pulled from a repository.

Throughout the container build workflow,
images should be scanned to identify:

- outdated libraries,
- known vulnerabilities,
- or misconfigurations, such as insecure ports or permissions.

Scanning should also provide the flexibility to disregard false positives
for vulnerability detection where knowledgeable
cybersecurity professionals have deemed alerts to be inaccurate.

One approach to implementing image scanning is to use an admission controller
to block deployments if the image does not comply with the organization's
security policies.

An admission controller is a Container Orchestration feature that can intercept and
process requests to the Container Orchestration API prior to persistence of the object,
but after the request is authenticated and authorized.
A webhook can be implemented to scan any image before it is deployed in the orchestrator.
This admission controller

## Considerations

* Image scanning is key to ensuring deployed containers are secure.
* Using trusted repositories to build containers is a critical part of the container build workflow.
* This technique does not necessarly prevent the build process to add insecure or unsecured
  files to the Image.
""" ;
    ns1:kb-reference ns1:Reference-ContainerImageAnalysis ;
    ns1:synonym "Container Image Scanning" ;
    rdfs:subClassOf [ ],
        ns1:AssetVulnerabilityEnumeration .

ns1:ContainerOrchestrationSoftware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Container Orchestration Software" ;
    ns1:definition "A d3f:Software which manages and coordinates running one or more d3f:ContainerProcess." ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:CredentialCompromiseScopeAnalysis a ns1:CredentialCompromiseScopeAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Compromise Scope Analysis" ;
    ns1:analyzes ns1:Credential ;
    ns1:d3fend-id "D3-CCSA" ;
    ns1:definition "Determining which credentials may have been compromised by analyzing the user logon history of a particular system." ;
    ns1:kb-article """## How it works

#### Memory
Credentials may be stored in memory for a variety of reasons; on Windows, they may be stored in lsass.exe.  Once a credential dumper like mimikatz runs and dumps the memory of lsass.exe, the credentials of every account logged on since boot are potentially compromised.
When such an event occurs, this analytic will give the forensic context to identify compromised users. Those users could potentially be used in later events for additional logons.


#### Hard disk
Operating System may cache a certain number of credentials onto the hard disk to use as a source of truth if it cannot contact the credential server.  In many versions of Microsoft Windows, the 10 most recent are cached by default; this setting can be changed in the Microsoft Management Console's Local Security Policy: ```Computer Configuration -> Windows Settings -> Local Policy -> Security Options -> Interactive Logon: Number of previous logons to cache -> 0```  Here we are not concerned with the alteration of the credentials but the fact that they might be read.  If the attacker has physical access to the machine they are unlikely to be stopped from reading files on the filesystem.
"In the event that the domain controller is unavailable Windows will check the last password hashes that has been cached in order to authenticate the user with the system. These password hashes are cached in the following registry setting:
HKEY_LOCAL_MACHINE\\SECURITY\\Cache
Mimikatz can retrieve these hashes if the following command is executed:
lsadump::cache" [1]

The Registry Hive, HKEY_LOCAL_MACHINE\\SAM, which is stored in the supporting files %systemroot%\\System32\\Config\\{Sam,sam.log,sam.sav}, contains the SAM file.

DC: This is stored in %systemroot%\\ntds\\ntds.dit. (https://www.ultimatewindowssecurity.com/blog/default.aspx?d=10/2017)

Sometimes memory, which contains credentials, could get on the hard disk. Like with hiberfil.sys in Windows.  Equivalent on Linux


In Linux, an attacker could read the /etc/shadow file.

Reading from /proc directory: mimipenguin, many others.

## Considerations
Effective implementation requires identifying any location that could end up containing credentials, and detecting an method of potential access to a source of credential data.

1. https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5""" ;
    ns1:kb-reference ns1:Reference-AllLoginsSinceLastBoot_MITRE,
        ns1:Reference-SystemsAndMethodsForDetectingCredentialTheft_SymantecCorp ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:CredentialManagementSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Management System" ;
    ns1:definition "Credential Management, also referred to as a Credential Management System (CMS), is an established form of software that is used for issuing and managing credentials as part of public key infrastructure (PKI)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Credential_Management> ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:CredentialRevocation a ns1:CredentialRevocation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Revocation" ;
    ns1:d3fend-id "D3-CR" ;
    ns1:definition "Deleting a set of credentials permanently to prevent them from being used to authenticate." ;
    ns1:deletes ns1:Credential ;
    ns1:kb-article """## How it works

Management servers with enterprise policies for account management provide the ability remove permissions, accounts, or credentials. Compromised credentials should be revoked to prevent further malicious activity.""" ;
    ns1:kb-reference ns1:Reference-RevokingaPreviouslyIssuedVerifiableCredential-Microsoft ;
    rdfs:subClassOf [ ],
        ns1:CredentialEviction .

ns1:CredentialScrubbing a ns1:CredentialScrubbing,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Scrubbing" ;
    ns1:d3fend-id "D3-CS" ;
    ns1:definition "The systematic removal of hard-coded credentials from source code to prevent accidental exposure and unauthorized access." ;
    ns1:hardens ns1:Subroutine ;
    ns1:kb-article """## How it Works
Credential Scrubbing involves identifying and eliminating hard-coded credentials such as usernames, passwords, API keys, and tokens from source code repositories. These credentials should be managed securely using environment variables, secret management tools, or secure vaults where they can be safely accessed when needed.

## Considerations
* Developers should conduct regular audits of source code to ensure credentials are not hard-coded.
* Exposed credentials found in version control history must be disabled and replaced promptly.
* Adopt role-based access controls and credential rotation policies to minimize security risks.""" ;
    ns1:kb-reference ns1:Reference-SecretsManagementCheatSheet-OWASP ;
    rdfs:seeAlso ns1:CWE-798,
        <https://capec.mitre.org/data/definitions/191.html> ;
    rdfs:subClassOf [ ],
        ns1:SourceCodeHardening .

ns1:CredentialTransmissionScoping a ns1:CredentialTransmissionScoping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Transmission Scoping" ;
    ns1:d3fend-id "D3-CTS" ;
    ns1:definition "Limiting the transmission of a credential to a scoped set of relying parties." ;
    ns1:isolates ns1:Credential ;
    ns1:kb-reference ns1:Reference-WebAuthentication_AnAPIForAccessingPublicKeyCredentials%0ALevel2 ;
    ns1:synonym "Phishing Resistant Authentication" ;
    rdfs:seeAlso <https://pages.nist.gov/TIG-Stage/sp800-63c.html>,
        <https://www.w3.org/TR/webauthn-2/> ;
    rdfs:subClassOf [ ],
        ns1:AccessMediation .

ns1:CustomArchiveFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Custom Archive File" ;
    ns1:definition "A custom archive file is an archive file conforming to a custom format; that is, an archive file that does not conform to a common standard." ;
    rdfs:subClassOf ns1:ArchiveFile .

ns1:DHCPNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DHCP Network Traffic" ;
    ns1:definition "DHCP Network Traffic is network traffic related to the DHCP protocol, used by network nodes to negotiate and configure either IPv4 or IPv6 addresses." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:DNSAllowlisting a ns1:DNSAllowlisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Allowlisting" ;
    ns1:blocks ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-DNSAL" ;
    ns1:definition "Permitting only approved domains and their subdomains to be resolved." ;
    ns1:kb-reference ns1:Reference-DNSWhitelist-DNSWL-EmailAuthenticationMethodExtension ;
    ns1:synonym "DNS Whitelisting" ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:DNSCacheEviction a ns1:DNSCacheEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Cache Eviction" ;
    ns1:d3fend-id "D3-DNSCE" ;
    ns1:definition "Flushing DNS to clear any IP addresses or other DNS records from the cache." ;
    ns1:deletes ns1:DNSRecord ;
    ns1:kb-article """# How it works

Flushing the DNS Cache will clear the IP addresses of websites you have visited recently. This can help remediate DNS Cache Poisoning attacks, which is a type of cyber attack where corrupted DNS data is inserted into the cache, causing redirects to malicious websites.

On windows, the DNS cache can be wiped by issuing the command `ipconfig /flushdns`.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-EvictionGuidanceforNetworksAffectedbytheSolarWindsandActiveDirectory/M365Compromise-CISA> ;
    ns1:synonym "Flush DNS Cache" ;
    rdfs:subClassOf [ ],
        ns1:ObjectEviction .

ns1:DNSRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Record" ;
    ns1:definition "A Domain Name System (DNS) record is a record of information returned to clients seeking to find computers, services, and other resources connected to the Internet or a private network.  Record information is stored on a domain name server so it can respond to DNS queries from clients.There are a variety of record types, depending on the client's information needs. Common types include Start of Authority, IP addresses, SMTP mail exchangers, name servers, reverse DNS lookup pointers, etc." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Domain_Name_System>,
        <http://dbpedia.org/resource/List_of_DNS_record_types> ;
    rdfs:subClassOf ns1:Record .

ns1:DNSTrafficAnalysis a ns1:DNSTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Traffic Analysis" ;
    ns1:analyzes ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-DNSTA" ;
    ns1:definition "Analysis of domain name metadata, including name and DNS records, to determine whether the domain is likely to resolve to an undesirable host." ;
    ns1:kb-article """## How it works
This technique can be accomplished in a number of ways.

* One example analytic determines whether or not a domain name was generated with an algorithm. Domain generation algorithms (DGAs) are sometimes used to create a domain name automatically  that will resolve to C2 infrastructure, without directly coding the domains in question into the malicious code.
* Another method analyzes information about domains that have been visited, including whether a domain name is longer than a common length,  if a dynamic DNS domain was visited, if a fast-flux domain was visited, and if a recently created domain was visited. These factors are used to develop a score and if that score is over a certain threshold, an alert is generated.
* Collected malware samples can be executed in a virtual environment to identify network domains that are connected to during execution. The network domains are then generated into signatures to identity bad domains for other hosts.

This technique does not check for content hosted at the domain.

## Considerations

* DNS produces a large amount of traffic which can be resource-intensive to analyze in real time.
* If a server is compromised, for example, as part of a watering hole attack, but the DNS information pointing to that server is not altered, this technique would not catch such an incident.""" ;
    ns1:kb-reference ns1:Reference-DomainAgeRegistrationAlert_IncRapid7IncRAPID7Inc,
        ns1:Reference-HeuristicBotnetDetection_PaloAltoNetworksInc,
        ns1:Reference-MethodAndSystemForDetectingAlgorithm-generatedDomains_VECTRANETWORKSInc,
        ns1:Reference-PredictingDomainGenerationAlgorithmsWithLongShort-TermMemoryNetworks_,
        ns1:Reference-SinkholingBadNetworkDomainsByRegisteringTheBadNetworkDomainsOnTheInternet_PaloAltoNetworksInc ;
    ns1:may-contain ns1:DNSLookup ;
    ns1:synonym "Domain Name Analysis" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkTrafficAnalysis .

ns1:DataDependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Dependency" ;
    ns1:synonym "Transactional Dependency" ;
    rdfs:subClassOf ns1:Dependency .

ns1:DataExchangeMapping a ns1:DataExchangeMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Exchange Mapping" ;
    ns1:d3fend-id "D3-DEM" ;
    ns1:definition "Data exchange mapping identifies and models the organization's intended design for the flows of the data types, formats, and volumes between systems at the application layer." ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:DataDependency ;
    ns1:synonym "Data Flow Mapping",
        "Information Exchange Mapping" ;
    rdfs:subClassOf [ ],
        ns1:SystemMapping .

ns1:DataInventory a ns1:DataInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Inventory" ;
    ns1:d3fend-id "D3-DI" ;
    ns1:definition "Data inventorying identifies and records the schemas, formats, volumes, and locations of data stored and used on the organization's architecture." ;
    ns1:inventories ns1:Database,
        ns1:DocumentFile ;
    ns1:kb-reference ns1:Reference-DataProcessingAndScanningSystemsForGeneratingAndPopulatingADataInventory ;
    ns1:synonym "Data Discovery",
        "Data Inventorying" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:AssetInventory .

ns1:DatabaseQueryStringAnalysis a ns1:DatabaseQueryStringAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database Query String Analysis" ;
    ns1:analyzes ns1:DatabaseQuery ;
    ns1:d3fend-id "D3-DQSA" ;
    ns1:definition "Analyzing database queries to detect [SQL Injection](https://capec.mitre.org/data/definitions/66.html)." ;
    ns1:kb-article """## How it works

Some implementations use software hooks to intercept function calls related to database query operations. Other implementations might intercept or collect network traffic. The database query string is then extracted and analyzed with various methods, for example:
* Detecting specific administrative SQL commands
* Anomalous sequences of commands when compared to a statistical baseline.
* Anomalous commands for a given user role.

## Considerations

Some capabilities sanitize queries before permitting them to be transmitted to the database. This incurs risks such altering data in an undesired way or breaking application functionality.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodForInternetSecurity_CylanceInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:DeadCodeElimination a ns1:DeadCodeElimination,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dead Code Elimination" ;
    ns1:d3fend-id "D3-DCE" ;
    ns1:definition "Removing unreachable or \"dead code\" from compiled source code." ;
    ns1:kb-article """## How it works

Dead code is code that is considered unreachable by normal program execution. Dead code can be created by adding code under a condition that never evaluates to true. Dead code should be removed since this type of code can produce unexpected results, if accidentally or maliciously forced to execute.

Dead code identification is typically performed by algorithms that implement program flows analysis looking for unreachable code. The dead code is eliminated by instructing compilers to remove the code through compiler flags, i.e., '-fdce' is used for Dead Code Elimination.

## Considerations

Code can also be deemed unreachable for certain run-time conditions. Different deployed systems and environments may contain some code that is unreachable for the given environment. This technique does not consider run-time conditions for unreachable code.""" ;
    ns1:kb-reference ns1:Reference-DeadCodeElimination ;
    rdfs:subClassOf ns1:ApplicationHardening .

ns1:DecoyFile a ns1:DecoyFile,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy File" ;
    ns1:d3fend-id "D3-DF" ;
    ns1:definition "A file created for the purposes of deceiving an adversary." ;
    ns1:kb-article """## How it works
The decoy file is made available as a local or network resource. Accesses to the file may be monitored. The files may be configurations, documents, executables, or other file types.


## Considerations
Properties of the file such as cryptographic checksums, file creation date, file modified date, file size, file owner etc may be modified to improve the credibility of the file.

## Example
* A CSV file with decoy user credentials is placed on a system. The system or network is then monitored to detect any accesses to the decoy files.""" ;
    ns1:kb-reference ns1:Reference-OpenSourceIntelligenceDeceptions_IllusiveNetworksLtd,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-SupplyChainCyber-deception_Cymmetria,Inc.>,
        ns1:Reference-SystemAndAMethodForIdentifyingThePresenceOfMalwareAndRansomwareUsingMini-trapsSetAtNetworkEndpoints_FidelisCybersecuritySolutionsInc,
        ns1:Reference-SystemAndMethodsThereofForPreventingRansomwareFromEncryptingDataElementsStoredInAMemoryOfAComputer-basedSystem_PaloAltoNetworksInc ;
    ns1:spoofs ns1:File ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyNetworkResource a ns1:DecoyNetworkResource,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Network Resource" ;
    ns1:d3fend-id "D3-DNR" ;
    ns1:definition "Deploying a network resource for the purposes of deceiving an adversary." ;
    ns1:kb-article """## How it works
Decoy network resources are deployed to web application servers, network file shares, or other network based sharing services.

A "honeypot" may serve a variety of decoy network resources.

## Considerations

* Developing a deployment and placement strategy for the decoy network resource.
* Personnel responsible for creation of decoy networks should consider the potential for resource exhaustion through denial of service attacks.

## Examples
* Honeypots are typically used to mimic a known system with fake vulnerabilities. This may attract attackers to the honeypot.
* Decoy accounts are also used to scan for attempted logins. The decoy accounts can provide security analysts with the attacker's potential intents and strategies.
* Tarpits are used to monitor unallocated IP space for unauthorized network activity.""" ;
    ns1:kb-reference ns1:Reference-AutomaticallyGeneratingNetworkResourceGroupsAndAssigningCustomizedDecoyPoliciesThereto_IllusiveNetworksLtd,
        ns1:Reference-Deception-BasedResponsesToSecurityAttacks_CrowdstrikeInc,
        ns1:Reference-DynamicSelectionAndGenerationOfAVirtualCloneForDetonationOfSuspiciousContentWithinAHoneyNetwork_PaloAltoNetworksInc,
        ns1:Reference-SystemAndMethodForIdentifyingThePresenceOfMalwareUsingMini-trapsSetAtNetworkEndpoints_FidelisCybersecuritySolutionsInc ;
    ns1:spoofs ns1:NetworkResource ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyPersona a ns1:DecoyPersona,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Persona" ;
    ns1:d3fend-id "D3-DP" ;
    ns1:definition "Establishing a fake online identity to misdirect, deceive, and or interact with adversaries." ;
    ns1:kb-article """## How it works
A false online identity is created for the purposes of interacting with adversaries in a direct or indirect manner. This includes the associated email addresses, social media accounts, and other online communication profiles.

## Considerations
* Include phone numbers and online social profiles as well as automatically or manually responding to contact made to the persona to improve realism.
* Continuous updating and managing the decoy personas and online activity streams to ensure personas do not become stale and outdated.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-DecoyAndDeceptiveDataObjectTechnology_Cymmetria,Inc.>,
        ns1:Reference-DecoyPersonasForSafeguardingOnlineIdentityUsingDeception_ ;
    ns1:spoofs ns1:User ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyPublicRelease a ns1:DecoyPublicRelease,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Public Release" ;
    ns1:d3fend-id "D3-DPR" ;
    ns1:definition "Issuing publicly released media to deceive adversaries." ;
    ns1:kb-article """## How it works
Publicly released media includes press release, videos, or other marketing collateral. The media may include URLs, points of contact, or other identifiers to entice interaction from adversaries.

## Considerations
* Information used in decoy public released media must contain enough realism to deceive and provide interaction from adversaries.
* Continuous development, creation, and distribution of media and identifiers are needed to ensure adversary interaction continues over time.
* Decoy public releases could be placed on platforms with different degrees of ownership, including entirely enterprise-owned infrastructure, IaaS, and SaaS (including social applications). Platforms that are not entirely enterprise-owned may be more likely to gather information""" ;
    ns1:kb-reference ns1:Reference-MockAttackCybersecurityTrainingSystemAndMethods_WOMBATSECURITYTECHNOLOGIESInc ;
    rdfs:subClassOf ns1:DecoyObject .

ns1:DecoySessionToken a ns1:DecoySessionToken,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Session Token" ;
    ns1:d3fend-id "D3-DST" ;
    ns1:definition "An authentication token created for the purposes of deceiving an adversary." ;
    ns1:kb-article """## How it works
Usage of decoy session tokens may be monitored to track attacker behavior or otherwise control the beliefs of the attacker.

## Considerations
* Interaction and activity with the decoy session token must be constantly monitored and analyzed to detect unauthorized activity.
* Session tokens are typically short-lived and therefore the decoy must be continuously updated to provide the appearance of it being used in the production environment.
* Automated tools can assist with maintenance and updates by automatically adjusting the decoy session token and environment to mimic the production environment.""" ;
    ns1:kb-reference ns1:Reference-DecoyAndDeceptiveDataObjectTechnology_CymmetriaInc ;
    ns1:spoofs ns1:SessionToken ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DecoyUserCredential a ns1:DecoyUserCredential,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy User Credential" ;
    ns1:d3fend-id "D3-DUC" ;
    ns1:definition "A Credential created for the purpose of deceiving an adversary." ;
    ns1:kb-article """## How it works
A detection analytic is developed to determine when a user uses decoy credentials. Subsequent actions by that user may be monitored or controlled by the defender.

A credential may be:
 * Domain username and password
 * Local system username and password

## Considerations
* Decoy credentials should be integrated with a larger decoy environment to ensure that when decoy credentials are compromised, the credentials are used to interact with a decoy asset that is being monitored.
* Continuous maintenance and updates are needed to ensure the legitimacy of the larger decoy environment and specifically the assets that utilize the decoy credentials.""" ;
    ns1:kb-reference ns1:Reference-DecoyAndDeceptiveDataObjectTechnology_CymmetriaInc,
        ns1:Reference-DecoyNetwork-BasedServiceForDeceivingAttackers-AmazonTechnologies,
        ns1:Reference-SystemAndMethodForIdentifyingThePresenceOfMalwareUsingMini-trapsSetAtNetworkEndpoints_FidelisCybersecuritySolutionsInc ;
    ns1:spoofs ns1:Credential ;
    rdfs:subClassOf [ ],
        ns1:DecoyObject .

ns1:DefaultUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Default User Account" ;
    ns1:definition "Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices." ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts> ;
    rdfs:subClassOf ns1:UserAccount .

ns1:DeleteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Delete File" ;
    ns1:definition "Remove a file from a machine." ;
    ns1:deletes ns1:File ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:DigitalEventRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Digital Event Record" ;
    ns1:definition "A digital event record is a structured representation of a digital event, encapsulating all relevant details about the occurrence for storage, analysis, and response. These records serve as the primary artifacts for cybersecurity operations, enabling threat detection, forensic investigations, and compliance reporting. Digital event records include metadata such as timestamps, origin, context, and associated resources, ensuring traceability and actionable intelligence in digital ecosystems." ;
    ns1:records ns1:DigitalEvent ;
    rdfs:subClassOf [ ],
        ns1:Record .

ns1:DigitalFingerprint a owl:Class ;
    rdfs:label "Digital Fingerprint" ;
    ns1:definition "A digital signature uniquely identifies data and has the property that changing a single bit in the data will cause a completely different message digest to be generated." ;
    rdfs:isDefinedBy <https://csrc.nist.gov/glossary/term/digital_fingerprint> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/fingerprint> ;
    rdfs:subClassOf ns1:Identifier .

ns1:DigitalIdentity a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Digital Identity" ;
    ns1:definition "The unique representation of a subject engaged in an online transaction. A digital identity is always unique in the context of a digital service, but does not necessarily need to uniquely identify the subject in all contexts. In other words, accessing a digital service may not mean that the subject's real-life identity is known.  Note: There is no single, widely accepted definition for this term and context is important. This definition is specific to online transactions." ;
    ns1:identified-by ns1:Identifier ;
    ns1:kb-reference ns1:Reference-CNNSI-4009 ;
    rdfs:comment "Variously describes or designates.  Designation is not compete or definite without context.  The representation generally can be identified by a unique identifier, though this may be private information." ;
    rdfs:seeAlso <https://pages.nist.gov/800-63-3/sp800-63-3.html> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformation .

ns1:DiskEncryption a ns1:DiskEncryption,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Encryption" ;
    ns1:d3fend-id "D3-DENCR" ;
    ns1:definition "Encrypting a hard disk partition to prevent cleartext access to a file system." ;
    ns1:encrypts ns1:Storage ;
    ns1:kb-reference ns1:Reference-LUKS1On-DiskFormatSpecificationVersion1.2.3 ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:DiskErasure a ns1:DiskErasure,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Erasure" ;
    ns1:d3fend-id "D3-DKE" ;
    ns1:definition "Disk Erasure is the process of securely deleting all data on a disk to ensure that it cannot be recovered by any means." ;
    ns1:erases ns1:SecondaryStorage ;
    ns1:kb-article """### How it works

Disk Erasure involves overwriting the existing data with random or specific patterns multiple times. Disk erasure is crucial for data sanitization, ensuring that sensitive information is completely removed from storage devices before they are repurposed, disposed of, or transferred to another party.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-Remembranceofdatapassed:Astudyofdisksanitizationpractices> ;
    rdfs:subClassOf [ ],
        ns1:DiskFormatting .

ns1:DiskImage a owl:Class ;
    rdfs:label "Disk Image" ;
    ns1:definition "A disk image is a snapshot of a storage device's structure and data typically stored in one or more computer files on another storage device." ;
    rdfs:isDefinedBy <https://en.wikipedia.org/wiki/Disk_image> ;
    rdfs:seeAlso <https://dbpedia.org/resource/Disk_image> ;
    rdfs:subClassOf ns1:StorageImage .

ns1:DiskPartitioning a ns1:DiskPartitioning,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Partitioning" ;
    ns1:creates ns1:PartitionTable ;
    ns1:d3fend-id "D3-DKP" ;
    ns1:definition "Disk Partitioning is the process of dividing a disk into multiple distinct sections, known as partitions." ;
    ns1:kb-article """### How it works

Each partition can be managed separately and can have its own file system. Disk partitioning can be used to segregate sensitive data from less critical data, improve system performance, and enhance data management and recovery processes. It can also help in isolating different operating systems or environments on the same physical disk.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-Remembranceofdatapassed:Astudyofdisksanitizationpractices> ;
    rdfs:subClassOf [ ],
        ns1:DiskFormatting .

ns1:DisplayAdapter a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Display Adapter" ;
    ns1:definition "A graphics card (also called a display card, video card, display adapter, or graphics adapter) is an expansion card which generates a feed of output images to a display device (such as a computer monitor). Frequently, these are advertised as discrete or dedicated graphics cards, emphasizing the distinction between these and integrated graphics. At the core of both is the graphics processing unit (GPU), which is the main part that does the actual computations, but should not be confused with the video card as a whole, although \"GPU\" is often used to refer to video cards." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Video_card> ;
    rdfs:subClassOf ns1:OutputDevice ;
    skos:altLabel "Display Card",
        "Graphics Adapter",
        "Video Card" .

ns1:DisplayServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Display Server" ;
    ns1:definition "A display server or window server is a program whose primary task is to coordinate the input and output of its clients to and from the rest of the operating system, the hardware, and each other. The display server communicates with its clients over the display server protocol, a communications protocol, which can be network-transparent or simply network-capable. The display server is a key component in any graphical user interface, specifically the windowing system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Display_server> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "Window Server" .

ns1:DomainAccountMonitoring a ns1:DomainAccountMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Account Monitoring" ;
    ns1:d3fend-id "D3-DAM" ;
    ns1:definition "Monitoring the existence of or changes to Domain User Accounts." ;
    ns1:kb-reference ns1:Reference-AuditUserAccountManagement ;
    ns1:monitors ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:DomainNameReputationAnalysis a ns1:DomainNameReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Name Reputation Analysis" ;
    ns1:analyzes ns1:DomainName ;
    ns1:d3fend-id "D3-DNRA" ;
    ns1:definition "Analyzing the reputation of a domain name." ;
    ns1:kb-reference ns1:Reference-Database_for_receiving_storing_and_compiling_information_about_email_messages,
        ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:DomainRegistration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Registration" ;
    ns1:definition "A domain registration, or domain name registration data, is the relevant registration data from Internet resources such as domain names, IP addresses, and autonomous system numbers. Registration data is typically retrieved by means of either the Registration Data Access Protocol (RDAP) or its predecessor, the WHOIS protocol." ;
    ns1:may-contain ns1:DomainName ;
    rdfs:seeAlso <http://dbpedia.org/resource/Domain_registration>,
        <http://dbpedia.org/resource/WHOIS> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformation ;
    skos:altLabel "Domain Name Registration Data" .

ns1:DomainRegistrationTakedown a ns1:DomainRegistrationTakedown,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Registration Takedown" ;
    ns1:d3fend-id "D3-DRT" ;
    ns1:definition "The process of performing a takedown of the attacker's domain registration infrastructure." ;
    ns1:deletes ns1:DomainRegistration ;
    ns1:kb-article """## How it works

Most nameserver hosts and domain name registrars comply with internationally recognised standards and supply their services based on terms and conditions that provide users and organisations protection from abuse and trademark infringement. Performing a WHOIS query on the attacker's domain will provide a contact that can be notified in the case of abuse. Formal takedown processes should be initiated to suspend or disable the normal function of the domain name.

## Considerations

- Takedown notifications should clearly demonstrate (with evidence) that the nameserver or registrars Terms and Conditions have been breached.
- Takedown processes are notoriously slow and sometimes unsuccessful.
- Many government organisations will have takedown processes that should also be followed. They may use this for intelligence to assist other organisations suffering an attack.
- Top level domain registrars will have takedown processes that can be followed, as an escalation path, when the nameserver host and/or registrar have not responded or complied timeously or inline with the TLD expectations.

## Examples of Domain Registration Abuse

Attackers will create infrastructure from which to carry out their operations and this may include registering domain names to be used in the various attacks. Known misuse cases include:

- Registering domain names that are similar to the victim's. This is known as typosquatting or URL hijacking. Legitimate looking mails or URLs could be sent using this domain in phishing campaigns.
- Registring domain names that are used in C2 beacons.""" ;
    ns1:kb-reference ns1:Reference-UnderstandingtheDomainRegistrationBehaviorofSpammers ;
    rdfs:subClassOf [ ],
        ns1:ObjectEviction .

ns1:DomainTrustPolicy a ns1:DomainTrustPolicy,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Trust Policy" ;
    ns1:d3fend-id "D3-DTP" ;
    ns1:definition "Restricting inter-domain trust by modifying domain configuration." ;
    ns1:kb-reference ns1:Reference-HowTrustRelationshipsWorkForResourceForestsInAzureActiveDirectoryDomainServices ;
    ns1:restricts ns1:DirectoryService,
        ns1:T1087.002 ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:AccessPolicyAdministration .

ns1:DriverLoadIntegrityChecking a ns1:DriverLoadIntegrityChecking,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Driver Load Integrity Checking" ;
    ns1:authenticates ns1:HardwareDriver ;
    ns1:d3fend-id "D3-DLIC" ;
    ns1:definition "Ensuring the integrity of drivers loaded during initialization of the operating system." ;
    ns1:kb-article """## How it works
This technique can be accomplished in a number of ways:

* A kernel level security agent installed on a host machine ensures that the driver associated with the agent is first in the initialization order. A dependent DLL associated with the driver is configured to be processed before other dependent DLLs and executes a number of operations to ensure the driver associated with the security agent is initialized first.

* Kernel components can be signed by a certificate obtained by a third party to verify the source of the component and whether it has been modified. When signed, the component will include a signature block implemented as a hash value of the component header and can also include a certificate chain. The signature and certificate data are typically added before the kernel component is distributed to the public.


## Considerations

* The private keys to sign certificates as reputable companies have been stolen in the past -- in cases such as where certificates from Adobe, Realtek, and JMicron have been used to sign malicious executables. (Source: https://resources.infosecinstitute.com/cybercrime-exploits-digital-certificates/#gref)

* Trusted Root Certificate Authorities have been compromised, yielding the ability to use the compromised keys to generate certificates with an arbitrary company name.

* It may not be difficult for an attacker to start an organization which can obtain a signed certificate.

* A root certificate authority (CA) whose certificate is trusted in the verification logic could generate incorrect certificates, if they are lax or have ulterior motives.""" ;
    ns1:kb-reference ns1:Reference-IntegrityAssuranceThroughEarlyLoadingInTheBootPhase_CrowdstrikeInc,
        ns1:Reference-ProtectedComputingEnvironment_MicrosoftTechnologyLicensingLLC ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:DynamicAnalysis a ns1:DynamicAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dynamic Analysis" ;
    ns1:analyzes ns1:DocumentFile,
        ns1:ExecutableFile ;
    ns1:d3fend-id "D3-DA" ;
    ns1:definition "Executing or opening a file in a synthetic \"sandbox\" environment to determine if the file is a malicious program or if the file exploits another program such as a document reader." ;
    ns1:kb-article """## How it works
Analyzing the interaction of a piece of code with a system while the code is being executed in a controlled environment such as a sandbox, virtual machine, or simulator. This exposes the natural behavior of the piece of code without requiring the code to be disassembled.

## Considerations
 * Malware often detects a fake environment, then changes its behavior accordingly. For example, it could detect that the system clock is being sped up in an effort to get it to execute commands that it would normally only execute at a later time, or that the hardware manufacturer of the machine is a virtualization provider.
 * Malware can attempt to determine if it is being debugged, and change its behavior accordingly.
 * For maximum fidelity, the simulated and real environments should be as similar as possible because the malware could perform differently in different environments.
 * Sometimes the malware behavior is triggered only under certain conditions (on a specific system date, after a certain time, or after it is sent a specific command) and can't be detected through a short execution in a virtual environment.

## Implementations
* Cuckoo Sandbox""" ;
    ns1:kb-reference ns1:Reference-MalwareAnalysisSystem_PaloAltoNetworksInc,
        ns1:Reference-UseOfAnApplicationControllerToMonitorAndControlSoftwareFileAndApplicationEnvironments_SophosLtd ;
    ns1:synonym "Malware Detonation",
        "Malware Sandbox" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:FileAnalysis .

ns1:EmailFiltering a ns1:EmailFiltering,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Filtering" ;
    ns1:d3fend-id "D3-EF" ;
    ns1:definition "Filtering incoming email traffic based on specific criteria." ;
    ns1:filters ns1:Email ;
    ns1:kb-article """## How it works

Mail filters can be implemented to scan inbound email messages at the initial SMTP connection stage to detect and reject email containing spam and malware.

This technique is distinct from d3f:EmailDeletion because it prevents an email from reaching an user's inbox. This technique can also be used for outbound email traffic.

## Considerations
* The effectiveness of mail filters depend on the completeness of the filter policies""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodForProvidingAnonymousRemailingAndFilteringOfElectronicMail_Nokia ;
    rdfs:subClassOf [ ],
        ns1:InboundTrafficFiltering .

ns1:EmailRemoval a ns1:EmailRemoval,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Removal" ;
    ns1:d3fend-id "D3-ER" ;
    ns1:definition "The email removal technique deletes email files from system storage." ;
    ns1:deletes ns1:Email ;
    ns1:kb-article """## How it works

Email removal is a technique that can be used to prevent a user from executing malware or responding to phishing attempts. Security software or users themselves may detect malicious or suspicious email in a local or remote mail folder email and then employ this technique.

## Considerations

For email that needs to be removed, an infosec organization may choose to take additional follow-up actions (such as blocking the sources or notifying providers), rather than only relying on email deletion.

For the case where users detect likely suspicious email files, the organization should consider implementing a means for reporting these emails to their infosec organization.

Email files may propagate through many storage systems across the an organization's systems over time, so early detection and blocking helps avoid residual, latent stores of malicous email content in the enterprise.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodForScanningRemoteServicesToLocateStoredObjectsWithMalware ;
    ns1:may-access ns1:MailServer ;
    ns1:synonym "Email Deletion" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:FileEviction .

ns1:EmbeddedComputer a owl:Class ;
    rdfs:label "Embedded Computer" ;
    ns1:definition "An embedded computer is a computer system -- a combination of a computer processor, computer memory, and input/output peripheral devices-that has a dedicated function within a larger mechanical or electrical system. It is embedded as part of a complete device often including electrical or electronic hardware and mechanical parts. Because an embedded system typically controls physical operations of the machine that it is embedded within, it often has real-time computing constraints. Embedded systems control many devices in common use today. Ninety-eight percent of all microprocessors manufactured are used in embedded systems." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Embedded_system> ;
    rdfs:subClassOf ns1:ClientComputer ;
    skos:altLabel "Embedded System" .

ns1:EmulatedFileAnalysis a ns1:EmulatedFileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Emulated File Analysis" ;
    ns1:analyzes ns1:DocumentFile,
        ns1:ExecutableFile ;
    ns1:d3fend-id "D3-EFA" ;
    ns1:definition "Emulating instructions in a file looking for specific patterns." ;
    ns1:kb-reference ns1:Reference-Network-levelPolymorphicShellcodeDetectionUsingEmulation ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:FileAnalysis .

ns1:EncryptedTunnels a ns1:EncryptedTunnels,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Encrypted Tunnels" ;
    ns1:d3fend-id "D3-ET" ;
    ns1:definition "Encrypted encapsulation of routable network traffic." ;
    ns1:isolates ns1:IntranetNetwork ;
    ns1:kb-reference ns1:Reference-SecurityArchitectureForTheInternetProtocol ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:EndpointBasedWebServerAccessMediation a ns1:EndpointBasedWebServerAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Endpoint-based Web Server Access Mediation" ;
    ns1:d3fend-id "D3-EBWSAM" ;
    ns1:definition "Endpoint-based web server access mediation regulates web server access directly from user endpoints by implementing mechanisms such as client-side certificates and endpoint security software to authenticate devices and ensure compliant access." ;
    ns1:kb-article """## How it works

Endpoint-based Web Server Access Mediation focuses on managing access to web servers directly from user devices. This involves implementing security measures like client certificates or endpoint security software to ensure that only authorized devices can initiate sessions with web servers. Examples include direct access to internal web applications from company laptops.
""" ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-41-Revision-1 ;
    rdfs:subClassOf ns1:WebSessionAccessMediation .

ns1:ExceptionHandlerPointerValidation a ns1:ExceptionHandlerPointerValidation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exception Handler Pointer Validation" ;
    ns1:d3fend-id "D3-EHPV" ;
    ns1:definition "Validates that a referenced exception handler pointer is a valid exception handler." ;
    ns1:kb-article """## How It Works
When a process encounters an exception, it calls an exception handler to deal with the exception.  The method by which this exception handler is determined varies by the operating system.  The exception handler is called, even if it is the default exception handler to terminate the program and display a message that the program stopped working.  In the case that no valid exception handler is found, the program would fail to proceed as normal and could be programmed to terminate.

In Windows, the address of the exception registration record is stored at the very start of the the Thread Information Block; the GS register points to this structure.

The exception registration record contains two pointers: a pointer to the next exception registration record should this handler fail to handle the exception, and a pointer to the handler.

A buffer overflow can overwrite the saved return pointer with an invalid location to execute memory; this often triggers the exception handler chain, which could also be corrupted by the buffer overflow.  Although Process Exception Handler Validation does not make sure that the exception handler pointer or the code at the exception handler was unaltered, or that the exception handler code is secure, this technique does ensure that the pointer is at least an exception handler that could be called by the program.

With Process Exception Handler Validation, before the handler is called, it checks the exception handler against a source of valid exception handlers.  If the requested handler is not in this list, other techniques such as those in Process Eviction might be invoked, such as Process Termination to end the current process, or Executable Blacklisting to blacklist the potentially vulnerable or malfunctioning executable.

### Runtime valid exception handler source generation
The source of valid exception handlers could be generated at runtime, with the risk of the information that is used to determine the validity of exception handlers being compromised.

### Compile-time
The source of valid exception handlers could also be generated at compile time or as a binary patch.  Given the source code, it would be rather straightforward to find the exceptions, as they are pointed in the catch statement of a try-catch clause and the compiler must already generate the code to call exceptions from this.

## Considerations
If the program file can be altered by the attacker, then the security could be bypassed by replacing it with any desired program, without even bypassing SEH.

If the attacker was already able to overwrite the code for a valid exception handler via other functionality in the program, this defense would not prevent arbitrary code execution.
If an exception handler recognized as valid is vulnerable, it would be executed anyway.

SafeSEH might be applied only to some executable files or modules, allowing an attacker to call any piece of code as an exception handler in the unprotected modules.""" ;
    ns1:kb-reference ns1:Reference-SAFESEH_ImageHasSafeExceptionHandlers_MicrosoftDocs ;
    ns1:synonym "Exception Handler Validation" ;
    ns1:validates ns1:Pointer ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:Exec a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exec" ;
    ns1:executes ns1:ExecutableBinary ;
    rdfs:seeAlso <https://dbpedia.org/page/Exec> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ExecutableAllowlisting a ns1:ExecutableAllowlisting,
        ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Allowlisting" ;
    ns1:blocks ns1:ExecutableFile ;
    ns1:d3fend-id "D3-EAL" ;
    ns1:definition "Using a digital signature to authenticate a file before opening." ;
    ns1:filters ns1:CreateProcess ;
    ns1:kb-article """## How it works

This technique is generic and there are numerous ways to compute and authenticate digital signatures.
A digital certificate is generated from a private/public key pair issued by a certificate authority (CA). A hash of the file is encrypted using the private key. When the file is downloaded by another user, the user's system uses the public key to decrypt the hash and a new hash is created of the downloaded file. The hash decrypted by the public key is compared to the new hash and if there is a mismatch, further techniques, such as file deletion, file quarantine, or **Executable Blacklisting** may be invoked.

This technique may be invoked when deciding whether to execute a file.

## Considerations

Organizations which download or create high volumes of software make management complex, in particular engineering or scientific organizations.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ComputingApparatusWithAutomaticIntegrityReferenceGenerationAndMaintenance_Tripwire,Inc.>,
        ns1:Reference-EnhancingNetworkSecurityByPreventingUser-InitiatedMalwareExecution_ ;
    ns1:synonym "File Signature Authentication" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:ExecutableDenylisting a ns1:ExecutableDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Denylisting" ;
    ns1:blocks ns1:ExecutableFile ;
    ns1:d3fend-id "D3-EDL" ;
    ns1:definition "Blocking the execution of files on a host in accordance with defined application policy rules." ;
    ns1:filters ns1:CreateProcess ;
    ns1:kb-article """## How it works

#### Criteria

A policy-enforcing application can register an application for denylisting based on conditions including the following:

* File attributes
    * file name
    * file path
    * file hash
    * file publisher, as obtained from the digital signature
    * permissions of the file
* File malware scan (eg. Windows SmartScreen)
* User-File combination

This may be done to prevent execution of applications which are:

* an old version with known vulnerabilities
* without a valid license, which could cause legal issues
* in a directory that is accessible to low-privileged users, that could be accessed by a malware dropper
* known trojan horse programs
* too open in their permissions, possibly set to run as a user other than the originator or allowing execution when they should not be
* a match to the hash of other known malware
* are detected as undesirable based on a file scan runtime behavior

System administrators will customize the rules for the given environment.

#### Backend

The policy-enforcing program may work by running in kernel mode, and [intercepting] [system calls which execute a process].

## Considerations

* If denylisting is done by filename, filepath, or hash, these mechanisms may be a worthy first line of defense and detection, but could still be evaded by an attacker.
* Continuous management is needed to keep the denylist up to date, whether it is based on hash, publisher, behavior, or any other digital artifact.
* Although denylists based on attributes such as file path and virus scan could defend against some threats which they have not been explicitly coded to block, denylists may not provide protection from new, unknown, or zero day attacks.


## Examples
On a Windows machine the Windows Defender Application Control (WDAC) policy enforcement is run in the kernel and allows for restricting applications.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ContentExtractorAndAnalysisSystem_Bit9Inc,CarbonBlackInc>,
        ns1:Reference-MethodAndApparatusForIncreasingTheSpeedAtWhichComputerVirusesAreDetected_McAfeeLLC ;
    ns1:synonym "Executable Blacklisting" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:FileAccessPatternAnalysis a ns1:FileAccessPatternAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Access Pattern Analysis" ;
    ns1:analyzes ns1:LocalResourceAccess ;
    ns1:d3fend-id "D3-FAPA" ;
    ns1:definition "Analyzing the files accessed by a process to identify unauthorized activity." ;
    ns1:kb-article """## How it works
File modifying malware such as wipers and ransomware are detected by identifying file access patterns that are associated with a malicious process. Examples of file access patterns include accessing a large number of files, accessing multiple file types, files being accessed located in multiple locations in a directory, and copying a file and encrypting the contents of that file into a copy.

## Considerations
Certain file access actions may not be statistically different from authorized activity.""" ;
    ns1:kb-reference ns1:Reference-File-modifyingMalwareDetection_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:FileCarving a ns1:FileCarving,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Carving" ;
    ns1:analyzes ns1:FileTransferNetworkTraffic ;
    ns1:d3fend-id "D3-FC" ;
    ns1:definition "Identifying and extracting files from network application protocols through the use of network stream reassembly software." ;
    ns1:kb-article """## How it works
Protocol stream reassembly software recreates a directional byte stream by analyzing captured network packets. Once the stream is reassembled pattern matching is applied to determine if it contains a file of interest. Files of interest range from executable, archive, or document file formats. Once the file is captured, it is then processed with standard File Analysis Techniques. Example network protocols include HTTP, SMTP, FTP, HTTP/2, and TLS/HTTP/Dropbox.

## Considerations
- This is an error prone process due to the intricacies of network protocols and network packet capture.  For example reassembly may be done in real-time or streaming fashion, or packets may be written to disk, then bulk processed.  The packets may arrive out of order, with fragmentation, duplicates, or re-transmissions.  The reassembly software must compensate for the imperfect packet stream in order to recreate the well formed file which was transmitted.
- File type identification can be a difficult process which can be exploited by adversaries.""" ;
    ns1:kb-reference ns1:Reference-ComputerWormDefenseSystemAndMethod_FireEyeInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:FileContentRules a ns1:FileContentRules,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Content Rules" ;
    ns1:d3fend-id "D3-FCR" ;
    ns1:definition "Employing a pattern matching rule language to analyze the content of files." ;
    ns1:kb-article """## How it works
Rules, often called signatures, are used for both generic and targeted malware detection. The rules are usually expressed in a domain specific language (DSL), then deployed to software that scans files for matches. The rules are developed and broadly distributed by commercial vendors, or they are developed and deployed by enterprise security teams to address highly targeted or custom malware. Conceptually, there are public and private rule sets. Both leverage the same technology, but they are intended to detect different types of cyber adversaries.

## Considerations
* Patterns expressed in the DSLs range in their complexity. Some scanning engines support file parsing and normalization for high fidelity matching, others support only simple regular expression matching against raw file data. Engineers must make a trade-off in terms of:
     * The fidelity of the matching capabilities in order to balance high recall with avoiding false positives,
     * The computational load for scanning, and
     * The resilience of the engine to deal with adversarial content presented in different forms-- content which in some cases is designed to exploit or defeat the scanning engines.
 * Signature libraries can become large over time and impact scanning performance.
 * Some vendors who sell signatures have to delete old signatures over time.
 * Simple signatures against raw content cannot match against encoded, encrypted, or sufficiently obfuscated content.

## Implementations
 * YARA
 * ClamAV""" ;
    ns1:kb-reference ns1:Reference-ComputationalModelingAndClassificationOfDataStreams_CrowdstrikeInc,
        ns1:Reference-DetectingScript-basedMalware_CrowdstrikeInc,
        ns1:Reference-DistributedMeta-informationQueryInANetwork_Bit9Inc,
        ns1:Reference-SystemAndMethodsThereofForLogicalIdentificationOfMaliciousThreatsAcrossAPluralityOfEnd-pointDevicesCommunicativelyConnectedByANetwork_PaloAltoNetworksIncCyberSecdoLtd ;
    ns1:synonym "File Content Signatures",
        "File Signatures" ;
    rdfs:subClassOf ns1:FileContentAnalysis .

ns1:FileCreationAnalysis a ns1:FileCreationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Creation Analysis" ;
    ns1:analyzes ns1:CreateFile ;
    ns1:d3fend-id "D3-FCA" ;
    ns1:definition "Analyzing the properties of file create system call invocations." ;
    ns1:kb-reference ns1:Reference-CAR-2020-09-001%3AScheduledTask-FileAccess_MITRE,
        ns1:Reference-LsassProcessDumpViaProcdump_MITRE ;
    rdfs:subClassOf [ ],
        ns1:SystemCallAnalysis .

ns1:FileEncryption a ns1:FileEncryption,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Encryption" ;
    ns1:d3fend-id "D3-FE" ;
    ns1:definition "Encrypting a file using a cryptographic key." ;
    ns1:encrypts ns1:File ;
    ns1:kb-article """## How it Works
Files are encrypted using either a single key for both encryption and decryption or separate keys. Single key encryption is symmetric encryption and using two key distinct keys is asymmetric encryption.

### Symmetric Cryptography
Symmetric encryption uses the same cryptographic key for both the encryption and decryption a file. Managing keys at scale sometimes uses asymmetric key exchange protocols such as Diffie-Hellman can be used to share the symmetric cryptographic key with the others.

### Asymmetric Cryptography
Asymmetric encryption is typically accomplished using public and private key certificates based on the X.509 standard. Files are encrypted using the public key and decrypted using their private key. Asymmetric encryption is typically slower than symmetric encryption and not widely used for large file encryption, but is popular for key wrapping, key exchanges, and digital signatures.

## Considerations
- Continuous monitoring to ensure private keys are not compromised and the certificate authority (CA) is trusted.
- Secure transfer of private keys between multiple devices.""" ;
    ns1:kb-reference ns1:Reference-MethodForFileEncryption ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:FileHash a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Hash" ;
    ns1:identifies ns1:File ;
    rdfs:subClassOf [ ],
        ns1:DigitalFingerprint .

ns1:FileHashReputationAnalysis a ns1:FileHashReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Hash Reputation Analysis" ;
    ns1:analyzes ns1:FileHash ;
    ns1:d3fend-id "D3-FHRA" ;
    ns1:definition "Analyzing the reputation of a file hash." ;
    ns1:kb-reference ns1:Reference-Reputation_of_an_entity_associated_with_a_content_item ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:FileHashing a ns1:FileHashing,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Hashing" ;
    ns1:d3fend-id "D3-FH" ;
    ns1:definition "Employing file hash comparisons to detect known malware." ;
    ns1:kb-article """## How it works
This technique requires a list of hashes to compare a file against.

## Considerations
Performance on large files or very large numbers of files.""" ;
    ns1:kb-reference ns1:Reference-Munin ;
    rdfs:subClassOf ns1:FileAnalysis .

ns1:FileIntegrityMonitoring a ns1:FileIntegrityMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Integrity Monitoring" ;
    ns1:analyzes ns1:File ;
    ns1:d3fend-id "D3-FIM" ;
    ns1:definition "Detecting any suspicious changes to files in a computer system." ;
    ns1:kb-article """## How it Works
There are a number of tools in Windows and Unix that can monitor specific files in a system and generate alerts if any artifacts have been created, modified, or removed. They accomplish this by comparing the current artifacts to a previous snapshot.

Unix - Unix systems have a file integrity checker tool called tripwire. Tripwire first initializes a database that serves as a basis for comparison and can then scan the system to compare the state of the current file system against the initial baseline database. Additionally, users can define policies that specify potential violations.

Windows - In Microsoft Azure, file integrity monitoring can be enabled which can track file and registry key creation, removals, and modifications of specific files.

## Considerations
Files can change constantly due to the non-static nature of a computer system. File Integrity Monitoring works best when pointed at a narrow scope of critical files to limit the number of unneccessary files that may be modified over the course of normal use. The accuracy and precision of defined policies also affect the efficacy of this technique.""" ;
    ns1:kb-reference ns1:Reference-FileIntegrityMonitoringinMicrosoftDefenderforCloud-Microsoft,
        ns1:Reference-Tripwire ;
    rdfs:subClassOf [ ],
        ns1:PlatformMonitoring .

ns1:FileSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System" ;
    ns1:contains ns1:Directory,
        ns1:File,
        ns1:FileSystemLink,
        ns1:FileSystemMetadata ;
    ns1:definition "In computing, a file system or filesystem is used to control how data is stored and retrieved. Without a file system, information placed in a storage medium would be one large body of data with no way to tell where one piece of information stops and the next begins. By separating the data into pieces and giving each piece a name, the information is easily isolated and identified. Taking its name from the way paper-based information systems are named, each group of data is called a \"file\". The structure and logic rules used to manage the groups of information and their names is called a \"file system\"." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/File_system> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:DigitalInformationBearer .

ns1:Firewall a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firewall" ;
    ns1:definition "In computing, a firewall is a network security system that monitors and controls incoming and outgoing network traffic based on predetermined security rules. A firewall typically establishes a barrier between a trusted internal network and untrusted external network, such as the Internet. Firewalls are often categorized as either network firewalls or host-based firewalls. Network firewalls filter traffic between two or more networks and run on network hardware. Host-based firewalls run on host computers and control network traffic in and out of those machines. This definition refers to network firewalls." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Firewall_(computing)> ;
    rdfs:subClassOf ns1:ComputerNetworkNode ;
    skos:altLabel "Network Firewall" .

ns1:FirmwareBehaviorAnalysis a ns1:FirmwareBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Behavior Analysis" ;
    ns1:analyzes ns1:Firmware ;
    ns1:d3fend-id "D3-FBA" ;
    ns1:definition "Analyzing the behavior of embedded code in firmware and looking for anomalous behavior and suspicious activity." ;
    ns1:kb-article """## How it works
Firmware behavior analysis provides protections by ensuring that installed firmware has not been tampered with or modified. Firmware analysis applies to mutable firmware and immutable read-only memory (ROMs).

Firmware in deployed network devices is typically not analyzed and monitored for vulnerabilities and thus is subject to potential attacks. This technique makes use of known and measured behavioral attributes, including timing attributes, of analyzed firmware on deployed devices.

A behavioral method that employs known timing measurements may use the timing results from a challenge and response protocol to detect the presence of malware in embedded firmware. Firmware device timing measurements are made, specific to the installed device, and are used in the verifying function.

The original firmware image is modified by injecting a monitoring software component into the embedded firmware code. The injected software components will allow for a software root of trust, the challenge and response protocol, to be implement in the firmware.

A challenge-response is issued and includes a nonce so that replays are not allowed. The firmware will calculate a checksum over all of memory, including the nonce, and return the result. The verification system will compare the computed checksum and the time it took for the computation of the checksum to determine if the firmware has been modified.

## Considerations
* The firmware code will need to be modified to include the behavioral monitoring functionality.
* This technique is sensitive to the device the embedded firmware is hosted on and it is expected that the devices and firmware will need to be profiled and analyzed to determine timing estimation.
* This technique is not expected to be one hundred percent correct as you would expect in a hardware root of trust solution and may require some tuning.""" ;
    ns1:kb-reference ns1:Reference-FirmwareBehaviorAnalysisConFirm,
        ns1:Reference-FirmwareBehaviorAnalysisVIPER ;
    ns1:synonym "Firmware Timing Analysis" ;
    rdfs:subClassOf [ ],
        ns1:PlatformMonitoring .

ns1:FirmwareEmbeddedMonitoringCode a ns1:FirmwareEmbeddedMonitoringCode,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Embedded Monitoring Code" ;
    ns1:analyzes ns1:Firmware ;
    ns1:d3fend-id "D3-FEMC" ;
    ns1:definition "Monitoring code is injected into firmware for integrity monitoring of firmware and firmware data." ;
    ns1:kb-article """## How it works
Firmware in deployed network devices is typically not monitored for malicious changes. This technique provides a method to embed a software security component into the deployed firmware which provides a near real-time monitoring hook. The exception handling code, in the firmware, is typically used to expose any detected vulnerabilities.

The injected software components provide a feature similar to intrusion detection systems for the firmware by detecting unauthorized modifications of the embedded firmware. The integrity of static code and firmware data are monitored continuously in the hosted devices. Comparisons are made to monitored elements like firmware memory addresses and data segments. Memory pages are scanned and if a modification is detected the software component may lock the page. This will protect subsequent attempted modifications to the firmware. The software component may utilize the exception handling code and thus be able to disclose the exact address of the modified memory.

The injected software components are inserted during the firmware imaging process. The injected software is assumed to have knowledge of both the embedded code and the current execution state of the host program. The injected software will monitor and alert, in near real-time, on potential suspicious activity. The injected code is run alongside of the embedded code in the host. The injected software operates as an independent entity and is not dependent on the host software.

Finally, this technique may implement other countermeasure techniques as part of their analytical processes. These should be identified by referencing other countermeasure techniques directly as necessary.

## Considerations
* The firmware code will need to be modified and re-hosted on the device.
* Exposing monitoring hooks to the injected code may introduce additional risk.""" ;
    ns1:kb-reference ns1:Reference-FirmwareEmbeddedMonitoringCodeRedBalloon,
        ns1:Reference-FirmwareEmbeddedMonitoringCodeSymbiotes ;
    rdfs:subClassOf [ ],
        ns1:PlatformMonitoring .

ns1:ForwardResolutionIPDenylisting a ns1:ForwardResolutionIPDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Forward Resolution IP Denylisting" ;
    ns1:blocks ns1:InboundInternetDNSResponseTraffic ;
    ns1:d3fend-id "D3-FRIDL" ;
    ns1:definition "Blocking a DNS lookup's answer's IP address value." ;
    ns1:kb-article """## How it works

This technique prevents a client from learning IP addresses deemed to be potentially malicious, which would have been delivered via forward resolution responses.

Responses to forward resolution requests (that is, requests where a domain is sent and IP(s) are returned) are collected, and the IP address(es) included as a response are examined. If the IP address(es) are in a range included in the blacklist, then the response is dropped and not forwarded to the client.

The DNS lookup can be blocked by either dropping the network traffic with an inline device, or modifying the value of the response sent by the DNS server. To transparently prevent client applications from hanging on a request, it is common practice to replace malicious values with addresses in the range 127.0.0.0/8 or the address of a honeypot maintained by the network administrators.

## Considerations

* This technique does not prevent the client from contacting the blacklisted IP, only from learning about this IP address via a nameserver lookup request.
* DNS Response traffic can be transmitted over many different protocols, which presents a challenge to implementing methods to extract all DNS answer IP address value(s).
  * DNS has historically used UDP port 53, with TCP port 53 instead used for responses over 512 bytes or after a lack of response over UDP.
  * Usage of new protocols to provide confidentiality for DNS traffic, such as DoH (DNS over HTTPS) and DoT (DNS over TLS), complicates collection of the IP address(es) in DNS responses. These protocols have often been enabled in browser settings transparently after a browser update, with DNS requests proxied over one of these cryptographic protocols through a specified host.
* This technique must be implemented logically between the application that receives the response and the server which sent the response.
  * DNS responses sent in an encrypted manner, such as those using DoH or DoT, will require interception of the TLS connections in order to determine the IP address(es) in the response.
* Replacing the response is not effective in the case that the nameserver uses a technique to provide integrity of its responses, such as DNSSEC for DNS responses.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Forward Resolution IP Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:DNSDenylisting .

ns1:GetOpenSockets a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Open Sockets" ;
    ns1:enumerates ns1:Pipe ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:GetOpenWindows a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Open Windows" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:GetScreenCapture a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Screen Capture" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:GetSystemNetworkConfigValue a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get System Network Config Value" ;
    rdfs:subClassOf ns1:GetSystemConfigValue .

ns1:GetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Thread Context" ;
    ns1:queries ns1:Thread ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getthreadcontext> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:GlobalUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Global User Account" ;
    ns1:definition "A type of user account in Microsoft Windows (NT) that has a domain-wide scope.defines that user's access to a logical group of network objects (computers, users, devices) that share the same Active Directory databases; that is, a user's access to the domain." ;
    rdfs:seeAlso <https://networkencyclopedia.com/global-user-account> ;
    rdfs:subClassOf ns1:DomainUserAccount .

ns1:GraphicalUserInterface a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Graphical User Interface" ;
    ns1:definition "A graphical user interface (GUI)  is a type of user interface that allows users to interact with electronic devices through graphical icons and visual indicators such as secondary notation, instead of text-based user interfaces, typed command labels or text navigation. GUIs were introduced in reaction to the perceived steep learning curve of command-line interfaces (CLIs), which require commands to be typed on a computer keyboard." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Graphical_user_interface> ;
    rdfs:subClassOf ns1:UserInterface ;
    skos:altLabel "GUI" .

ns1:HTMLFile a owl:Class ;
    rdfs:label "HTML File" ;
    ns1:definition "A document file encoded in HTML.The HyperText Markup Language, or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript. Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document." ;
    rdfs:seeAlso <http://dbpedia.org/resource/HTML> ;
    rdfs:subClassOf ns1:DocumentFile ;
    skos:altLabel "HTML File" .

ns1:Hardware-basedProcessIsolation a ns1:Hardware-basedProcessIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware-based Process Isolation" ;
    ns1:d3fend-id "D3-HBPI" ;
    ns1:definition "Preventing one process from writing to the memory space of another process through hardware based address manager implementations." ;
    ns1:isolates ns1:Process ;
    ns1:kb-article """## How it works
Process isolation, in this context, is address space separation controlled by a security function that limits the communication between processes so that one process cannot directly modify the executing code of another process. For example with virtual address space:

* Process A address space is different from process B address space, which prevents process A from writing to process B

Hardware process isolation is commonly implemented through Direct Memory Access (DMA) which collaborates with a Memory Management Unit (MMU), or Input-Output Memory Management Unit (IOMMU). These hardware controls are deployed directly on processors to aid hosts or enclaves in process isolation.

* DMA - Direct memory access allows memory access to occur independently of the program currently run by the microprocessor. DMA allows for I/O devices to directly read from and write to memory, or it can be used to efficiently copy blocks of memory. During DMA transfers, the microprocessor can execute an unrelated program.
* MMU - A memory management unit acts as an access control and is responsible for performing the translation of virtual memory addresses to physical memory addresses. The MMU allocates each process its own virtual memory space.
* IOMMU - An input-output memory management unit is used to allocate each I/O device its own virtual address space to the underlying physical addresses. IOMMU allows devices that do not support long memory addresses to address the entire memory space.

## Considerations
* Private hosts may be vulnerable to DMA attack if they have a PCI or PCI Express port that connects attached devices directly to physical address space.

## Implementations:
 * Intel Virtualization Technology for Directed I/O (Intel VT-d)
 * Firecracker""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ApproachesForSecuringAnInternetEndpointUsingFine-grainedOperatingSystemVirtualization_Bromium,Inc.>,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-IsolationOfApplicationsWithinAVirtualMachine_Bromium,Inc.>,
        ns1:Reference-VirtualizedProcessIsolation_AdvancedMicroDevicesInc ;
    ns1:restricts ns1:CreateProcess ;
    ns1:synonym "Virtualization" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ExecutionIsolation .

ns1:HardwareComponentInventory a ns1:HardwareComponentInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Component Inventory" ;
    ns1:d3fend-id "D3-HCI" ;
    ns1:definition "Hardware component inventorying identifies and records the hardware items in the organization's architecture." ;
    ns1:inventories ns1:HardwareDevice ;
    ns1:kb-article """## How it works
Administrators collect information on hardware devices such as peripherals, NICs, processors, and memory devices that are components of the computers in their architecture using a variety of administrative and management tools that query for this information.  In some cases, where such queries are not supported or provide specific information of interest, an administrator may also collect this information through remote adminstration tools and system commands, either manually or using scripts.

## Considerations
* Scanning and probing techniques using mapping tools can result in side effects to information technology (IT) and operational technology (OT) systems.
* An adversary conducting network enumeration may engage in activities that parallel normal hardware inventorying activities, but would require escalating to admin privileges for most of the operations requiting administrative tools

## Examples
* Bus discovery
   * Admin-scripted PCI Bus inventory using ssh and pciutils
* Application-layer discovery
   * Simple Network Management Protocol (SNMP) collects MIB information
   * Web-based Enterprise Management (WBEM) collects CIM information
      * Windows Management Instrumentation (WMI)
      * Windows Management Infrastructure (MI)""" ;
    ns1:kb-reference ns1:Reference-AdvancedDeviceMatchingSystem ;
    ns1:synonym "Hardware Component Discovery",
        "Hardware Component Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:HierarchicalDomainDenylisting a ns1:HierarchicalDomainDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hierarchical Domain Denylisting" ;
    ns1:d3fend-id "D3-HDDL" ;
    ns1:definition "Blocking the resolution of any subdomain of a specified domain name." ;
    ns1:kb-article """## How it works
This technique is used to block DNS queries from related domains and subdomains that are unauthorized.

Hierarchical domain blacklisting considers the blacklisting of second level domains and additional sub-domains and specific hosts for a given query value. A denylist is maintained that contains DNS names and corresponding subdomains, including wildcards, that should be blocked for a given lookup.

## Considerations
* The denylist of domain names will have to be maintained and will need to be kept up to date
* Other domains that resolve to the domain of interest for blocking (CNAME, etc).
* Denylists should have identified maintenance cycles to ensure lists are not stale.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Hierarchical Domain Blacklisting" ;
    rdfs:subClassOf ns1:ForwardResolutionDomainDenylisting .

ns1:HomoglyphDenylisting a ns1:HomoglyphDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Homoglyph Denylisting" ;
    ns1:d3fend-id "D3-HDL" ;
    ns1:definition "Blocking DNS queries that are deceptively similar to legitimate domain names." ;
    ns1:kb-article """## How it works

Homoglyph domain blacklisting considers the domain and subdomain structure of a lookup and compares the named components to blacklisted named components. The blacklisted named components are typically crafted modifications of known good domains, e.g., gooogle.com versus google.com. The blacklisted domains typically resemble trusted domains, but have been altered slightly to deceive users.

The blacklisted named components also include consideration for fonts or Unicode characters that can make certain characters appear very similar (zero vs capital O and the letter l vs the number one). The blacklisted domains under certain fonts will appear to be a trusted domain.

## Considerations
* Maintaining the currency of the list can be a challenge especially with newly registered domain entries.
* Blacklists should have identified maintenance cycles to ensure lists are not stale.""" ;
    ns1:kb-reference ns1:Reference-DetectionOfMaliciousIDNHomoglyphDomains ;
    ns1:synonym "Homoglyph Blacklisting" ;
    rdfs:subClassOf ns1:ForwardResolutionDomainDenylisting .

ns1:HomoglyphDetection a ns1:HomoglyphDetection,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Homoglyph Detection" ;
    ns1:analyzes ns1:Email,
        ns1:URL ;
    ns1:d3fend-id "D3-HD" ;
    ns1:definition "Comparing strings using a variety of techniques to determine if a deceptive or malicious string is being presented to a user." ;
    ns1:kb-article """## How it works
A homoglyph, in this context, is a deceptive string or word which looks like a trusted word, but is composed of different characters, for example: goooogle.com versus google.com. This is commonly found in phishing and typo squatting attacks where a human exploiting through a social engineering campaign.

## Considerations
* In very large environments processing DNS queries can be computationally expensive due to the amount of traffic that is generated
* Legitimate companies and products use non-dictionary words in their names that could result in many false positives""" ;
    ns1:kb-reference ns1:Reference-Computer-implementedMethodsAndSystemsForIdentifyingVisuallySimilarTextCharacterStrings_GreathornInc,
        ns1:Reference-SystemAndMethodForDetectingHomoglyphAttacksWithASiameseConvolutionalNeuralNetwork_EndgameInc ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:IdentifierAnalysis .

ns1:Host-basedFirewall a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host-based Firewall" ;
    ns1:definition "A software firewall which controls network inbound and outbound network traffic to the host computer." ;
    rdfs:subClassOf ns1:SystemSoftware .

ns1:HostReboot a ns1:HostReboot,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host Reboot" ;
    ns1:d3fend-id "D3-HR" ;
    ns1:definition "Initiating a host's reboot sequence to terminate all running processes." ;
    ns1:kb-article """## How It Works

Host reboot can either be initiated in the physical presence of the device using the power functions or remotely using the provided user interface or an installed EDR agent (with the available function). This process may allow for the removal of specific types of malware, such as fileless malware, and can also prevent further damage, for example, if the system is part of a botnet.

## Considerations

- If the attacker has achieved persistence techniques, this technique may not be effective
- Compromised systems may not respond to remote commands to shutdown or reboot, requiring physical intervention.
- Shutting down a system will usually result in the memory losing its state which can be useful in forensic activities so this should be considered when deciding to shutdown.
- Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.""" ;
    ns1:kb-reference ns1:Reference-NearMemoryInMemoryDetectionofFilelessMalware ;
    ns1:terminates ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:HostShutdown .

ns1:IOModule a owl:Class ;
    rdfs:label "I/O Module" ;
    ns1:definition "An I/O Module is a hardware device that translates signals between external sensors or actuators and control systems. It typically handles analog-to-digital (and vice versa) conversion, serving as the data interface that allows physical processes to be monitored and controlled by digital controllers." ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:IOPortRestriction a ns1:IOPortRestriction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IO Port Restriction" ;
    ns1:d3fend-id "D3-IOPR" ;
    ns1:definition "Limiting access to computer input/output (IO) ports to restrict unauthorized devices." ;
    ns1:filters ns1:InputDevice,
        ns1:RemovableMediaDevice ;
    ns1:kb-article """## How It works

Software-based restriction uses agent software installed on a computer system. The agent software monitors all IO port system traffic. The agent software is configurable to limit the use of certain devices connected to IO ports. The restriction software can also be configured to limit the access to files and applications on external storage devices connected to IO ports.

Hardware-based restriction can also be employed to limit access to IO ports. For example, a hardware USB filter device that is placed between the host system and the external devices can filter IO port connections based on configurable rules. When new devices are connected to the USB filter the type of device is determined. Using an allow list a connection determination is made for the device.

Some implementations detect when a device is connected in order to authorize the connection against a list of approved devices, in some cases by device type. For example, if the device is determined to be a storage device, then the contained files and executables are examined to more accurately identify the device type.

Types of restrictions that may be applied:
- Device connection
- Device command filtering
- Device file system read or write restrictions

## Considerations
 * Agent software will need to be installed on host systems
 * Configurations for allow/deny for devices and files will need to be maintained""" ;
    ns1:kb-reference ns1:Reference-ComputerMotherboardHavingPeripheralSecurityFunctions,
        ns1:Reference-MethodAndSystemForControllingCommunicationPorts,
        ns1:Reference-USBFilterForHubMaliciousCodePreventionSystem ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:AccessMediation .

ns1:IPCNetworkTraffic a owl:Class ;
    rdfs:label "IPC Network Traffic" ;
    ns1:definition "IPC network traffic is network traffic related to inter-process communication (IPC) between network nodes..This includes only network traffic conforming to a standard IPC protocol; not custom protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:IPCTrafficAnalysis a ns1:IPCTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IPC Traffic Analysis" ;
    ns1:analyzes ns1:IntranetIPCNetworkTraffic ;
    ns1:d3fend-id "D3-IPCTA" ;
    ns1:definition "Analyzing standard inter process communication (IPC) protocols to detect deviations from normal protocol activity." ;
    ns1:kb-article """## How it works
Inter process communication enables applications or threads to share data. This can involve one or more computers. Monitoring IPC in your environment can reveal abnormal or malicious activity.
IPC can occur within a single computer or between multiple computers remotely through network protocols. Thus there are multiple ways to collect and monitor these exchanges between processes. A network protocol analyzer may monitor and parse SMB network traffic to record system activity. A host based monitoring agent may monitor IPC activity contained within a single host to look for deviations from standard usages.

### Examples
 * SMB
 * Zeromq
 * Java RMI API

## Considerations
* IPC can generate substantial amounts of data, and it may not be feasible to collect all of it.
* IPC may occur over loopback interfaces or direct memory access granted by the operating system.""" ;
    ns1:kb-reference ns1:Reference-CAR-2015-04-001%3ARemotelyScheduledTasksViaAT_MITRE,
        ns1:Reference-SMBCopyAndExecution_MITRE,
        ns1:Reference-SMBEventsMonitoring_MITRE,
        ns1:Reference-SMBSessionSetups_MITRE,
        ns1:Reference-SMBWriteRequest-NamedPipes_MITRE,
        ns1:Reference-SMBWriteRequest_MITRE,
        ns1:Reference-SecuritySystemWithMethodologyForInterprocessCommunicationControl_CheckPointSoftwareTechInc ;
    ns1:synonym "IPC Analysis" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:IPReputationAnalysis a ns1:IPReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IP Reputation Analysis" ;
    ns1:analyzes ns1:IPAddress ;
    ns1:d3fend-id "D3-IPRA" ;
    ns1:definition "Analyzing the reputation of an IP address." ;
    ns1:kb-reference ns1:Reference-Database_for_receiving_storing_and_compiling_information_about_email_messages,
        ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:IdentifierActivityAnalysis a ns1:IdentifierActivityAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier Activity Analysis" ;
    ns1:analyzes ns1:Identifier ;
    ns1:d3fend-id "D3-IAA" ;
    ns1:definition "Taking known malicious identifiers and determining if they are present in a system." ;
    ns1:kb-article """## How it works

Identifier activity analysis is the process of taking identifiers--typically known malicious identifiers--and determining the artifacts that have interacted with those identifiers.

There are many open and closed source repositories of identifiers that represent indicators of compromise. For example, VirusTotal contains hash signatures of malware and IP Addresses used by threat actors. Defenders can search for these indicators of compromise their own systems to gain context on activity around an identifier.

## Considerations

Indicator activity analysis is a good way to gain high precision analysis, but adversaries can modify their own signatures such as hashes quickly to evade detection. This is related to David Bianco’s Pyramid of Pain - Indicators on the lower level (hash values, IP addresses domain names) are easy for adversaries to change.

Identifier activity data of interest for analysis with the identifier might include, but is not limited to:

* network traffic activity where the identifier was used to identify communicating entities or referred to in the communication
* process activity referencing the identifier, especially for resource access
* file activity referencing the identifier
* registry settings referencing the identifier""" ;
    ns1:kb-reference ns1:Reference-ThePyramidOfPain-DavidBianco ;
    rdfs:subClassOf [ ],
        ns1:IdentifierAnalysis .

ns1:InboundInternetDNSResponseTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Internet DNS Response Traffic" ;
    ns1:definition "Inbound internet DNS response traffic is DNS response traffic from a host outside a given network initiated on an incoming connection to a host inside that network." ;
    rdfs:subClassOf ns1:InboundInternetNetworkTraffic .

ns1:InboundSessionVolumeAnalysis a ns1:InboundSessionVolumeAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Session Volume Analysis" ;
    ns1:analyzes ns1:InboundInternetNetworkTraffic ;
    ns1:d3fend-id "D3-ISVA" ;
    ns1:definition "Analyzing inbound network session or connection attempt volume." ;
    ns1:kb-article """## How it works
Network appliances are configured to alert on certain packets that typically are involved in DoS attacks. Typical packets include ICMP packets and SYN requests that are commonly used to flood networks. A sampling period is used to define a time window in which collected counts of the identified packets can be measured. If the collected number of packets exceeds a predefined limit then an alert is generated.

## Considerations
Scalability as volume of attacks increase; single servers may not have the memory and storage resources to handle high volumes of network traffic.""" ;
    ns1:kb-reference ns1:Reference-DetectingDDoSAttackUsingSnort,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-IdentifyingADenial-of-serviceAttackInACloud-basedProxyService-CloudfareInc.>,
        ns1:Reference-MethodAndSystemForUDPFloodAttackDetection-RioreyLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ProtectingAgainstDistributedDenialOfServiceAttacks-CiscoTechnologyInc.>,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ProtectingAgainstDistributedNetworkFloodAttacks-JuniperNetworksInc.> ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:IndirectBranchCallAnalysis a ns1:IndirectBranchCallAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Indirect Branch Call Analysis" ;
    ns1:d3fend-id "D3-IBCA" ;
    ns1:definition "Analyzing vendor specific branch call recording in order to detect ROP style attacks." ;
    ns1:kb-article """## How it works

This technique is used to detect an attacker attempting to exploit and execute code on a target system's call stack using return-oriented programming (ROP). Modern processors that have the ability to maintain a list of the branching calls, e.g., Intel's Last Branch Recording (LBR), can be used to track and analyze indirect branching calls that are indicative of malicious activity.

In order to reduce the number of indirect branch calls to analyze to a manageable set it is assumed that malicious ROP activity will involve the use of system calls.  The technique observes indirect branch calls that are part of paths that lead to system calls, all others are ignored. Branching calls chained together is often referred to as gadgets and gadgets are often used in ROP attacks. Indirect branch calls that involve a transfer from user-space to kernel-space are of interest for this technique.

Identification of potential ROP exploit execution includes:

- Inspecting the LBR when a system function call is made

  - The LBR is configured to return only instruction of interest (ret, indirect jmp, indirect calls)


- Behavior is analyzed for
  - Ret instructions that appear to target areas not preceded by the call sites
  - Sequences of small code fragments that appear to be chained through the indirect branching calls (gadgets)


- Of interest are returns that appear to not render control back after calls
  - Typical ret-call are paired
  - gadgets will appear to have ret followed by instruction of next instruction of the following gadget


## Considerations

* May be operating system dependent since specific system calls are used to scope branching behavoir
* Processors need to support access to a Last Branch Recording list feature
* The size of the LBR stack can limit the expected size of the analyzed execution stack
* If processor does not support LBR then overhead costs for the analysis can be significant""" ;
    ns1:kb-reference ns1:Reference-IndirectBranchingCalls ;
    rdfs:subClassOf ns1:ProcessAnalysis .

ns1:InputDeviceAnalysis a ns1:InputDeviceAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Input Device Analysis" ;
    ns1:analyzes ns1:InputDevice ;
    ns1:d3fend-id "D3-IDA" ;
    ns1:definition "Operating system level mechanisms to prevent abusive input device exploitation." ;
    ns1:kb-article """## How it works

Input Device Hardening techniques filter certain commands, or disable related operating system functionality.

### Analytics

All of these values can be analyzed and compared to a baseline:

* Amount of input
* Duration of a single input
* Durations between inputs
* Value of input

Context can also include:

* User which is logged in, to include attributes such as physical location of the user
* Date and time
* System which is processing the input
* Source device of input, to include its properties (eg. manufacturer), configuration (eg. keyboard layout) and behavioral attributes of this device (eg. first use)
* Source system of input (local or remote system)
* Other hardware devices attached to the system


### Actions

Actions can include:

* Disabling the source device
* Sending an alert
* Locking the current session (eg. system screen lock, or returning to an authentication screen in a web app) and requiring one or more methods of authentication to continue
* Administratively disabling credentials for the account or the entire account -- the technique *Account Locking*


### Examples
A malicious input device sends many keystrokes with approximately the same delay between each.  This does not match the normal cadence of input, and the device is disabled.

Input to type the session user's name takes abnormally longer for each keystroke.  The system is locked to the password prompt screen.

A system receives key press events from two different devices -- one device sends keystrokes after the other has been idle for a long time.

A system receives physical input in a user session, while that user has sent input from a device located out of the country in the past hour.

Network traffic is suddenly routed through a new external device, and nearly the same volume of network traffic is subsequently sent out the previously existing interface.  The new external device is disabled, and an alert is raised to investigate the network configuration for a potential compromise.


## Considerations

Given some example of legitimate behavioral input patterns, attackers could mimic those input patterns, a technique which has been used in popular culture in the creation of Deepfake videos and [This Person Does Not Exist](https://thispersondoesnotexist.com).""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-ContinuousAuthenticationByAnalysisOfKeyboardTypingCharacteristics_BradfordUniv.,UK>,
        ns1:Reference-www.biometric-solutions.com_keystroke-dynamics ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:InputFunction a owl:Class ;
    rdfs:label "Input Function" ;
    ns1:definition "Generic function that receives input from an untrusted source." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:IntegratedHoneynet a ns1:IntegratedHoneynet,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Integrated Honeynet" ;
    ns1:d3fend-id "D3-IHN" ;
    ns1:definition "The practice of setting decoys in a production environment to entice interaction from attackers." ;
    ns1:kb-article """## How it works
Integrated honeynets use full production environments connected to the enterprise network, that utilize computing resources or software that attract attackers, and allow full interaction and access that provides a complete view of an attack.

## Considerations
An attacker with control of a system on an Integrated Honeynet could:
* try to attack other connected hosts on the network, its IP range of internal hosts not properly configured to react to connections from machines on the integrated honeynet, or position behind the firewall.
* exploit its position by eavesdropping on network traffic
If an attacker manages to stop the processes used to log an attack without setting off any alarms. [1]

1. Honeypots for Windows, Roger Grimes, 2005""" ;
    ns1:kb-reference ns1:Reference-SynchronizingAHoneyNetworkConfigurationToReflectATargetNetworkEnvironment_PaloAltoNetworksInc ;
    ns1:spoofs ns1:IntranetNetwork ;
    rdfs:subClassOf [ ],
        ns1:DecoyEnvironment .

ns1:InterprocessCommunication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Interprocess Communication" ;
    ns1:definition "In computer science, inter-process communication or inter-process communication (IPC) refers specifically to the mechanisms an operating system provides to allow processes it manages to share data. Typically, applications can use IPC categorized as clients and servers, where the client requests data and the server responds to client requests. Many applications are both clients and servers, as commonly seen in distributed computing. Methods for achieving IPC are divided into categories which vary based on software requirements, such as performance and modularity requirements, and system circumstances, such as network bandwidth and latency." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Inter-process_communication> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:IntranetFileTransferTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet File Transfer Traffic" ;
    ns1:definition "Intranet file transfer traffic is file transfer traffic that does not cross a given network's boundaries and uses a standard file transfer protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_transfer>,
        <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:FileTransferNetworkTraffic,
        ns1:IntranetNetworkTraffic .

ns1:IntranetMulticastNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Multicast Network Traffic" ;
    ns1:definition "Intranet IPC network traffic is multicast network traffic that does not cross a given network's boundaries." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Multicast> ;
    rdfs:subClassOf ns1:IntranetNetworkTraffic .

ns1:IntranetWebNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Web Network Traffic" ;
    ns1:definition "Intranet web network traffic is network traffic that does not cross a given network's boundaries and uses a standard web protocol." ;
    ns1:may-contain ns1:File ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf [ ],
        ns1:IntranetNetworkTraffic,
        ns1:WebNetworkTraffic .

ns1:IntrusionDetectionSystem a owl:Class ;
    rdfs:label "Intrusion Detection System" ;
    ns1:definition "An intrusion detection system (IDS) is a device or software application that monitors a network or systems for malicious activity or policy violations. Any intrusion activity or violation is typically reported either to an administrator or collected centrally using a security information and event management (SIEM) system. A SIEM system combines outputs from multiple sources and uses alarm filtering techniques to distinguish malicious activity from false alarms." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Intrusion_detection_system> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "IDS" .

ns1:JavaScriptBlob a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "JavaScript Blob" ;
    ns1:definition "A JavaScript Blob is a Blob that was created by a JavaScript Blob() constructor call or equivalent function." ;
    rdfs:subClassOf ns1:BinaryLargeObject .

ns1:JobFunctionAccessPatternAnalysis a ns1:JobFunctionAccessPatternAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Job Function Access Pattern Analysis" ;
    ns1:analyzes ns1:Authorization ;
    ns1:d3fend-id "D3-JFAPA" ;
    ns1:definition "Detecting anomalies in user access patterns by comparing user access activity to behavioral profiles that categorize users by role such as job title, function, department." ;
    ns1:kb-article """## How it works
Peer group analysis identifies functionally similar groups of actors (users or resources) based on categorizations such as job title, organizational hierarchy, or other attribute that indicates similarity of job function. Current user access activity is then compared to the appropriate peer group behavior profile to identify anomalies.

## Considerations
Potential for false positives from anomalies that are not associated with malicious activity.""" ;
    ns1:kb-reference ns1:Reference-AnomalyDetectionUsingAdaptiveBehavioralProfiles_SecuronixInc ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:Kernel-basedProcessIsolation a ns1:Kernel-basedProcessIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel-based Process Isolation" ;
    ns1:d3fend-id "D3-KBPI" ;
    ns1:definition "Using kernel-level capabilities to isolate processes." ;
    ns1:isolates ns1:Process ;
    ns1:kb-reference ns1:Reference-OverviewOfTheSeccompSandbox ;
    rdfs:comment "e.g. KVM" ;
    rdfs:subClassOf [ ],
        ns1:ExecutionIsolation .

ns1:KeyboardInputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Keyboard Input Device" ;
    ns1:definition "A computer keyboard is a typewriter-style device which uses an arrangement of buttons or keys to act as mechanical levers or electronic switches. Following the decline of punch cards and paper tape, interaction via teleprinter-style keyboards became the main input method for computers. A keyboard is also used to give commands to the operating system of a computer, such as Windows' Control-Alt-Delete combination. Although on Pre-Windows 95 Microsoft operating systems this forced a re-boot, now it brings up a system security options screen." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_keyboard> ;
    rdfs:subClassOf ns1:InputDevice ;
    skos:altLabel "Computer Keyboard",
        "Keyboard" .

ns1:LANAccessMediation a ns1:LANAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "LAN Access Mediation" ;
    ns1:d3fend-id "D3-LAMED" ;
    ns1:definition "LAN access mediation encompasses the application of strict access control policies, systematic verification of devices, and authentication mechanisms to govern connectivity to a Local Area Network." ;
    ns1:isolates ns1:LocalAreaNetwork ;
    ns1:kb-article """## How it works

LAN Access Mediation is a network security approach that manages and controls access to a Local Area Network by using key components such as Access Control Lists (ACLs) to specify which devices are allowed or denied access, Port Security to restrict device connections to specific switch ports, RADIUS for determining the level of access or specific resources available to users or devices, and 802.1X for enforcing device authentication before granting network access. This comprehensive strategy ensures that only authorized devices and users can connect to the network, enhancing overall security.""" ;
    ns1:kb-reference ns1:Reference-WhatIsNetworkAccessControl ;
    rdfs:comment "Layer 2 Enforcement" ;
    rdfs:seeAlso <https://dodcio.defense.gov/Portals/0/Documents/Library/(U)ZT_RA_v2.0(U)_Sep22.pdf> ;
    rdfs:subClassOf [ ],
        ns1:NetworkAccessMediation .

ns1:LegacySystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Legacy System" ;
    ns1:definition "In computing, a legacy system is an old method, technology, computer system, or application program, \"of, relating to, or being a previous or outdated computer system,\" yet still in use. Often referencing a system as \"legacy\" means that it paved the way for the standards that would follow it. This can also imply that the system is out of date or in need of replacement." ;
    ns1:synonym "Legacy Digital System" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Legacy_system> ;
    rdfs:subClassOf ns1:DigitalSystem .

ns1:LoadModule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Load Module" ;
    ns1:definition "A system call that loads a driver or extension into the kernel." ;
    ns1:loads ns1:HardwareDriver,
        ns1:KernelModule ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:SystemCall .

ns1:LocalAccountMonitoring a ns1:LocalAccountMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Account Monitoring" ;
    ns1:analyzes ns1:LocalUserAccount ;
    ns1:d3fend-id "D3-LAM" ;
    ns1:definition "Analyzing local user accounts to detect unauthorized activity." ;
    ns1:kb-reference ns1:Reference-AuditUserAccountManagement,
        ns1:Reference-CAR-2016-04-004_SuccessfulLocalAccountLogin,
        ns1:Reference-OSQueryWindowsUserCollectionCode ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:LocalAreaNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Area Network Traffic" ;
    ns1:definition "Intranet local area network (LAN) traffic is network traffic that does not cross a given network's boundaries; where that network is defined as a LAN." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:IntranetNetworkTraffic .

ns1:LocalFileAccessMediation a ns1:LocalFileAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local File Access Mediation" ;
    ns1:d3fend-id "D3-LFAM" ;
    ns1:definition "Restricting access to a local file by configuring operating system functionality." ;
    ns1:filters ns1:OpenFile ;
    ns1:kb-reference ns1:Reference-FileAndFolderPermissions ;
    ns1:synonym "Local File Access Control" ;
    rdfs:comment "Replaces d3-LFP" ;
    rdfs:subClassOf [ ],
        ns1:SystemCallFiltering .

ns1:LocalFilePermissions a ns1:LocalFilePermissions,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local File Permissions" ;
    ns1:d3fend-id "D3-LFP" ;
    ns1:definition "Restricting access to a local file by configuring operating system functionality." ;
    ns1:kb-reference ns1:Reference-FileAndFolderPermissions ;
    ns1:restricts ns1:Directory,
        ns1:File ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:AccessPolicyAdministration .

ns1:LocalResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Resource Access" ;
    ns1:accesses ns1:LocalResource ;
    ns1:definition "Ephemeral digital artifact comprising a request of a local resource and any response from that resource." ;
    rdfs:subClassOf [ ],
        ns1:ResourceAccess ;
    skos:altLabel "Endpoint Resource Access" .

ns1:MacOSKeychain a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "MacOS Keychain" ;
    ns1:definition "Keychain is the password management system in macOS, developed by Apple. It was introduced with Mac OS 8.6, and has been included in all subsequent versions of the operating system, now known as macOS. A Keychain can contain various types of data: passwords (for websites, FTP servers, SSH accounts, network shares, wireless networks, groupware applications, encrypted disk images), private keys, certificates, and secure notes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Keychain_(software)> ;
    rdfs:subClassOf ns1:PasswordStore ;
    skos:altLabel "Keychain" .

ns1:MailNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mail Network Traffic" ;
    ns1:contains ns1:Email ;
    ns1:definition "Mail traffic is network traffic that uses a standard mail transfer protocol." ;
    rdfs:subClassOf [ ],
        ns1:NetworkTraffic .

ns1:MailService a owl:Class ;
    rdfs:label "Mail Service" ;
    ns1:definition "A mail service provides the ability to send and receive mail across a computer network.  The mail service runs on message transfer agents (i.e., mail servers) and is accessed by users through an email client." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Email>,
        <http://dbpedia.org/resource/Message_transfer_agent> ;
    rdfs:subClassOf ns1:NetworkService ;
    skos:altLabel "Email Service" .

ns1:MathematicalFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mathematical Function" ;
    ns1:definition "Computes mathematical expressions." ;
    rdfs:subClassOf ns1:Subroutine .

ns1:MemoryAddressSpace a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Address Space" ;
    ns1:contains ns1:MemoryAddress ;
    ns1:definition "A memory address space is a space containing memory addresses." ;
    rdfs:subClassOf [ ],
        ns1:AddressSpace .

ns1:MemoryBoundaryTracking a ns1:MemoryBoundaryTracking,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Boundary Tracking" ;
    ns1:analyzes ns1:ProcessCodeSegment ;
    ns1:d3fend-id "D3-MBT" ;
    ns1:definition "Analyzing a call stack for return addresses which point to unexpected  memory locations." ;
    ns1:kb-article """## How it works
This technique monitors for indicators of whether a return address is outside memory previously allocated for an object (i.e. function, module, process, or thread). If so, code that the return address points to is treated as malicious code.

## Considerations
Kernel malware can manipulate memory contents, for example modifying pointers to hide processes, and thereby impact the accuracy of memory allocation information used to perform the analysis.""" ;
    ns1:kb-reference ns1:Reference-InferentialExploitAttemptDetection_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:MemoryManagementUnit a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Management Unit" ;
    ns1:contains ns1:TranslationLookasideBuffer ;
    ns1:creates ns1:VirtualAddress ;
    ns1:definition "A computer’s memory management unit (MMU) is the physical hardware that handles its virtual memory and caching operations. The MMU is usually located within the computer’s central processing unit (CPU), but sometimes operates in a separate integrated chip (IC)." ;
    ns1:manages ns1:PageTable,
        ns1:Storage ;
    rdfs:isDefinedBy <https://www.techopedia.com/definition/4768/memory-management-unit-mmu> ;
    rdfs:seeAlso <https://dbpedia.org/page/Memory_management_unit> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:ProcessorComponent .

ns1:MemoryManagementUnitComponent a owl:Class ;
    rdfs:label "Memory Management Unit Component" ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:MemoryProtectionUnit a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Protection Unit" ;
    rdfs:subClassOf ns1:ProcessorComponent .

ns1:MessageAuthentication a ns1:MessageAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Authentication" ;
    ns1:authenticates ns1:UserToUserMessage ;
    ns1:d3fend-id "D3-MAN" ;
    ns1:definition "Authenticating the sender of a message and ensuring message integrity." ;
    ns1:kb-article """## How it works

### Digital Signature
Digital signatures are used to verifying a message is from the expected sender. In email, Secure/Multipurpose Internet Mail Extensions (S/MIME) protocol is typically used to digitally sign messages. A hash value of the sender's message is created and encrypted with the sender's private key to create a digital signature. The message and the digital signature are sent to the recipient where the sender's public key is used to decrypt the digital signature and compute the hash of the message. The computed hash is compared with the hash from the received message, and any difference in the hash values signify the message did not originate from the sender and has been alerted in transit.

### Message Authentication Code (MAC)
MAC is a fixed size string that is appended to a message to provide message authentication and integrity. The sender MAC signing algorithm takes as input a secret symmetric key shared between sender and recipient and the message to calculate a short tag that is appended to the message. The recipient receives the message with the appended tag, and a MAC verification algorithm is run using the symmetric key to verify the message came from the stated sender and ensure the message has not been tampered with.

## Considerations
- Public keys associated with digital signatures should be verified by a Certification Authority (CA) to prevent impersonation. The CA verifies the owner of a public key and puts the sender's identity and public key into a certificate that is signed by the CA.
- Digital signatures provide non-repudiation where a third party can verify the authenticity of the message using the sender's digital certificate signed by the CA.
- Symmetric keys must be exchanged securely via a private channel and management of new symmetric keys are needed for each pair of participants wishing to exchange messages.""" ;
    ns1:kb-reference ns1:Reference-DomainKeysIdentifiedMail-Signatures-IETF,
        ns1:Reference-SecureMultipurposeInternetMailExtensionsMIME-Version3.1 ;
    rdfs:subClassOf [ ],
        ns1:MessageHardening .

ns1:MessageEncryption a ns1:MessageEncryption,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Encryption" ;
    ns1:d3fend-id "D3-MENCR" ;
    ns1:definition "Encrypting a message body using a cryptographic key." ;
    ns1:encrypts ns1:UserToUserMessage ;
    ns1:kb-article """## How it works

### Asymmetric Cryptography
Asymmetric encryption is typically accomplished using public and private key certificates based on the X.509 standard. The sender encrypts messages using the recipient's public key and the receipt decrypts the message using their private key. Standards that can be used to implement message encryption include S/MIME (Secure/Multipurpose Internet Mail Extensions) and PGP.
### Symmetric Cryptography
Symmetric encryption uses the same cryptographic key by both the sender and receiver to encrypt and decrypt a message. Asymmetric key exchange protocols such as Diffie-Hellman can be used to share the cryptographic key with the recipient.

## Considerations
- Separate configuration settings to enable message encryption are often needed for each messenger client (e.g. webmail, desktop client, mobile).
- Continuous monitoring to ensure private keys are not compromised and the certificate authority (CA) is trusted.
- Secure transfer of private keys between multiple devices.""" ;
    ns1:kb-reference ns1:Reference-SecureMultipurposeInternetMailExtensionsMIME-Version3.1 ;
    rdfs:subClassOf [ ],
        ns1:MessageHardening .

ns1:Metadata a owl:Class ;
    rdfs:label "Metadata" ;
    ns1:definition "Metadata is \"data [information] that provides information about other data\". Three distinct types of metadata exist: structural metadata, descriptive metadata, and administrative metadata. Structural metadata is data about the containers of data. For instance a \"book\" contains data, and data about the book is metadata about that container of data. Descriptive metadata uses individual instances of application data or the data content." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Metadata> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/metadata> ;
    rdfs:subClassOf ns1:DigitalInformation .

ns1:MicrosoftHTMLApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Microsoft HTML Application" ;
    ns1:may-contain ns1:ExecutableScript ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/HTML_Application> ;
    rdfs:subClassOf [ ],
        ns1:HTMLFile .

ns1:Multi-factorAuthentication a ns1:Multi-factorAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Multi-factor Authentication" ;
    ns1:d3fend-id "D3-MFA" ;
    ns1:definition "Requiring proof of two or more pieces of evidence in order to authenticate a user." ;
    ns1:kb-article """## How it works
When logging into an account users present two or more credentials that fall into different categories: something you know (password or PIN), something you have (smart card or phone), or something you are (fingerprint).

## Considerations
MFA configuration steps may vary across accounts and in some cases left up to users to activate and implement.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-MethodAndApparatusForUtilizingATokenForResourceAccess_RsaSecurityInc.> ;
    ns1:uses ns1:Credential ;
    rdfs:subClassOf [ ],
        ns1:AgentAuthentication .

ns1:NetworkFlow a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Flow" ;
    ns1:definition "A summarization of network transactions between a client and server. It often summarizes bytes sent, bytes received, and protocol flags." ;
    ns1:summarizes ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformation .

ns1:NetworkInitScriptFileResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Init Script File Resource" ;
    ns1:definition "A computer file resource made available from one host to other hosts on a computer network that is also an initialization script." ;
    rdfs:subClassOf ns1:InitScript,
        ns1:NetworkFileResource .

ns1:NetworkInterfaceCard a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Interface Card" ;
    ns1:definition "A network interface card (NIC, also known as a network interface controller, network adapter, LAN adapter or physical network interface, and by similar terms) is a computer hardware component that connects a computer to a computer network." ;
    ns1:synonym "Network Interface Controller" ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Network_interface_controller> ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:NetworkNodeInventory a ns1:NetworkNodeInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Node Inventory" ;
    ns1:d3fend-id "D3-NNI" ;
    ns1:definition "Network node inventorying identifies and records all the network nodes (hosts, routers, switches, firewalls, etc.) in the organization's architecture." ;
    ns1:inventories ns1:NetworkNode ;
    ns1:kb-article """## How it works
Administrators collect information on network nodes in their architecture using a variety of administrative and management tools that query network devices and nodes for information.  In some cases, where such queries are not supported or provide specific information of interest, an administrator may also collect this information through network enumeration methods to include host discovery and scanning for active ports and services.

## Considerations
* Scanning and probing techniques using mapping tools can result in side effects to information technology (IT) and operational technology (OT) systems.
* An adversary conducting network enumeration may engage in activities that parallel normal network node inventorying activities, but would require escalating to admin privileges for most of the operations requiting administrative tools

## Examples
* Link-layer discovery
   * Link-layer Discovery Protocol (LLDP)
   * Cisco Discovery Protocol (CDP)
* Application-layer discovery
   * Simple Network Management Protocol (SNMP) collects MIB information
   * Web-based Enterprise Management (WBEM) collects CIM information
      * Windows Management Instrumentation (WMI)
      * Windows Management Infrastructure (MI)""" ;
    ns1:kb-reference ns1:Reference-IEEE-802_1AB-2016,
        ns1:Reference-QualysNetworkPassiveSensorGettingStartedGuide,
        ns1:Reference-RFC3411-AnArchitectureForDescribingSimpleNetworkManagementProtocolSNMPManagementFrameworks,
        ns1:Reference-Web-BasedEnterpriseManagement,
        ns1:Reference-Windows-Management-Infrastructure,
        ns1:Reference-Windows-Management-Instrumentation ;
    ns1:synonym "System Discovery",
        "System Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:NetworkPackets a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Packet" ;
    ns1:definition "A network packet is a formatted unit of data carried by a packet-switched network. Computer communications links that do not support packets, such as traditional point-to-point telecommunications links, simply transmit data as a bit stream. When data is formatted into packets, packet switching is possible and the bandwidth of the communication medium can be better shared among users than with circuit switching." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_packet> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:NetworkTrafficCommunityDeviation a ns1:NetworkTrafficCommunityDeviation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Community Deviation" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-NTCD" ;
    ns1:definition "Establishing baseline communities of network hosts and identifying statistically divergent inter-community communication." ;
    ns1:kb-article """## How it works
Hosts/users within a computer network are analyzed to identify communities of hosts which frequently communicate. Future communications between communities that don't usually communicate can then be detected.  For example, if a community of hosts that communicate in support of a company's finance division suddenly starts to access the code server usually accessed only by engineers, this may indicate unauthorized activity.

## Considerations
* Potential for false positives in very dynamic network environments.
* Attackers that move low and slow may not differentiate their behavior enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-SystemForImplementingThreatDetectionUsingDailyNetworkTrafficCommunityOutliers_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:NetworkTrafficPolicyMapping a ns1:NetworkTrafficPolicyMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Policy Mapping" ;
    ns1:d3fend-id "D3-NTPM" ;
    ns1:definition "Network traffic policy mapping identifies and models the allowed pathways of data at the network, tranport, and/or application levels." ;
    ns1:kb-reference ns1:Reference-CiscoASR9000AccessListCommands ;
    ns1:maps ns1:AccessControlConfiguration ;
    ns1:queries ns1:CollectorAgent ;
    ns1:synonym "DLP Policy Mapping",
        "Firewall Mapping",
        "IPS Policy Mapping",
        "Web Security Gateway Policy Mapping" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkMapping .

ns1:NetworkTrafficSignatureAnalysis a ns1:NetworkTrafficSignatureAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Signature Analysis" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-NTSA" ;
    ns1:definition "Analyzing network traffic and compares it to known signatures" ;
    ns1:kb-article """## How it works

Network signature analysis relies on predefined patterns, or signatures, to identify malicious network activity. These signatures typically match against specific byte sequences, packet header information, or protocol anomalies indicative of known threats.

The process works as follows:

* Packet Capture: Network traffic is captured on an interface or port, resulting in a stream of raw packets.
* Preprocessing: The captured packets are preprocessed, cleaning and normalizing the data for efficient analysis.
* Signature Matching: Each packet is compared against a database of signatures using dedicated engines.

## Considerations

### False Negatives

Network signature analysis is susceptible to generating false negatives. These occur when malicious activity evades detection due to limitations in the signature-based approach. Here are some common causes:

* Evolving threats: Attackers frequently modify their tactics, rendering existing signatures ineffective against new variants.
* Obfuscation: Attackers may disguise malicious content using encryption, encoding, or other techniques to bypass signature detection.
* Limited visibility: Signatures rely on specific patterns. If crucial information is encrypted or hidden, the signature might miss the threat.
* Zero-day attacks: By definition, new and unknown attacks lack corresponding signatures, allowing them to pass undetected.

### False Positives

Network signature analysis is susceptible to generating false positives. These occur when the signature analysis triggers an alert for benign traffic. Common causes include:

* Overly broad signatures: Rules designed to be too general might match harmless activities, generating false alarms.
* Network misconfigurations: Improperly configured devices or legitimate network activity can mimic malicious patterns, triggering false positives.
* Data errors: Corrupted or incomplete network data can lead to misinterpretations and false alerts.

""" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:NetworkVulnerabilityAssessment a ns1:NetworkVulnerabilityAssessment,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Vulnerability Assessment" ;
    ns1:d3fend-id "D3-NVA" ;
    ns1:definition "Network vulnerability assessment relates all the vulnerabilities of a network's components in the context of their configuration and interdependencies and can also include assessing risk emerging from the network's design as a whole, not just the sum of individual network node or network segment vulnerabilities." ;
    ns1:evaluates ns1:Network ;
    ns1:identifies ns1:Vulnerability ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkMapping .

ns1:OSAPIAccessProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Access Process" ;
    ns1:invokes ns1:AccessProcess ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIFunction a owl:Class ;
    rdfs:label "OS API Function" ;
    rdfs:seeAlso <http://dbpedia.org/page/Linux_kernel_interfaces>,
        <http://dbpedia.org/resource/Windows_API> ;
    rdfs:subClassOf ns1:Software .

ns1:OSAPILoadModule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Load Module" ;
    ns1:invokes ns1:LoadModule ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIReadMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Read Memory" ;
    ns1:invokes ns1:ReadMemory ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPISaveRegisters a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Save Registers" ;
    ns1:invokes ns1:SaveRegister ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPISetRegisters a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Set Registers" ;
    ns1:invokes ns1:SetRegisters ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIUnloadModule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Unload Module" ;
    ns1:invokes ns1:UnloadModule ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OTEmbeddedComputer a owl:Class ;
    rdfs:label "OT Embedded Computer" ;
    ns1:definition "A ruggedized computational device, embedded in industrial control systems, designed to handle real-time tasks and environmental stressors common in OT." ;
    rdfs:subClassOf ns1:EmbeddedComputer .

ns1:OTIOModule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OT I/O Module" ;
    ns1:communicates-with ns1:OTActuator,
        ns1:OTSensor ;
    ns1:definition "An OT I/O Module is an industrial-grade interface designed for harsh Operational Technology (OT) environments. It reliably connects sensors and actuators to industrial control systems, ensuring precise, real-time data exchange in applications such as SCADA or ICS. Engineered for ruggedness and consistent performance, it can manage analog, digital, or other specialized signal types while enduring demanding conditions." ;
    rdfs:comment "There are many types of I/O modules, including: analog input, analog output, HART input, HART output, digital input, digital output, mV input, pulse input, universal I/O, vibration input, and many other types of input or output modules. The functionality of the I/O Module can be embedded in the controller or as a separate module connected via chassis or I/O link." ;
    rdfs:isDefinedBy <https://consteel-electronics.com/articles/what-is-IO-module> ;
    rdfs:seeAlso <https://www.rockwellautomation.com/en-us/support/documentation/technical/i-o/compact-5000-i-o-modules.html> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:IOModule ;
    skos:example "Rockwell Compact 5000 IO Module" .

ns1:OTPowerSupply a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OT Power Supply" ;
    ns1:definition "An OT power supply is a power supply whose control amplifier is optimized for signal-processing tasks rather than supplying mere steady-state power to a load. It is a self-contained combination of operational amplifiers, power amplifiers, and integral power circuits designed for higher-level operations in industrial or OT contexts." ;
    rdfs:seeAlso <https://ieeexplore.ieee.org/servlet/opac?punumber=4116785> ;
    rdfs:subClassOf ns1:PowerSupply ;
    skos:example "Phoenix Contact QUINT, Eaton PSG, and many controller-branded power supplies." .

ns1:One-timePassword a ns1:One-timePassword,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "One-time Password" ;
    ns1:d3fend-id "D3-OTP" ;
    ns1:definition "A one-time password is valid for only one user authentication." ;
    ns1:kb-article """## How it works

When a user initiates authentication, they are asked for a one-time password, often in addition to other credentials such as a traditional password or smart card. The one-time password may be from a list provided in advance, sent via a channel such as SMS or HTTPS to an app, or a generated token.

In the case of a physical token which generates one-time passwords incrementally based on time elapsed, that token device need not be connected to the internet. In different implementations, an administrator of the system, or a user with additional verification, can adjust for clock skew between the token and the verification system as needed.

## Considerations

### Compromise of delivery channel
- SIM Swapping
- Secure token visual compromise
- Insecure delivery channel

### Compromise of delivery device
Physical loss of One-time Password device.

### Compromise of long-term backup codes
These are often provided in the form of a downloadable document with a regular name, which can be searched for in the case that the user forgets where they put them.  This digital file or printed document could be stolen.
Additionally, after the code file is printed, it could be recovered from the system printer spool unless the spooler cache is cleared.""" ;
    ns1:kb-reference ns1:Reference-DigitalIdentityGuidelines800-63-3,
        ns1:Reference-RFC2289-AOne-TimePasswordSystem ;
    ns1:synonym "OTP" ;
    ns1:use-limits ns1:Password ;
    rdfs:seeAlso <http://dbpedia.org/resource/One-time_password> ;
    rdfs:subClassOf [ ],
        ns1:PasswordRotation .

ns1:OperatingSystemExecutableFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Executable File" ;
    ns1:definition "An operating system executable is a critical executable that is part of the operating system, and without which, the operating system may not operate correctly." ;
    rdfs:subClassOf ns1:OperatingSystemFile .

ns1:OperatingSystemLogFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Log File" ;
    ns1:definition "An operating system log file records events that occur in an operating system" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Log_file> ;
    rdfs:subClassOf ns1:LogFile,
        ns1:OperatingSystemFile .

ns1:OperatingSystemSharedLibraryFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Shared Library File" ;
    ns1:definition "An operating system shared library file is a shared library file that is part of the operating system and that incorporates common operating system code for use by any application or to provide operating system services." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Library_(computing)#Shared_libraries> ;
    rdfs:subClassOf ns1:OperatingSystemFile,
        ns1:SharedLibraryFile .

ns1:OperationalDependencyMapping a ns1:OperationalDependencyMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operational Dependency Mapping" ;
    ns1:d3fend-id "D3-ODM" ;
    ns1:definition "Operational dependency mapping identifies and models the dependencies of the organization's activities on each other and on the organization's performers (people, systems, and services.)  This may include modeling the higher- and lower-level activities of an organization forming a hierarchy, or layering, of the dependencies in an organization's activities." ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-CyberCommandSystemCYCS,
        ns1:Reference-DaggerFactSheet,
        ns1:Reference-DaggerModelingAndVisualizationForMissionImpactSituationalAwareness,
        ns1:Reference-MissionDependencyModelingForCyberSituationalAwareness,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:Dependency,
        ns1:OrganizationalActivity ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:OperationalRiskAssessment a ns1:OperationalRiskAssessment,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operational Risk Assessment" ;
    ns1:d3fend-id "D3-ORA" ;
    ns1:definition "Operational risk assessment identifies and models the vulnerabilities of, and risks to, an organization's activities individually and as a whole." ;
    ns1:evaluates ns1:Organization ;
    ns1:identifies ns1:Vulnerability ;
    ns1:kb-reference ns1:Reference-MGT516ManagingSecurityVulnerabilitiesEnterpriseAndCloud,
        ns1:Reference-NIST-RMF-Quick-Start-Guide-Assess-Step-FAQ,
        ns1:Reference-NIST-Special-Publication-800-160-Volume-1,
        ns1:Reference-NIST-Special-Publication-800-37-Revision-2,
        ns1:Reference-NIST-Special-Publication-800-53A-Revision-5,
        ns1:Reference-NISTIR-8011-Volume-1 ;
    ns1:synonym "Mission Risk Assessment" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:OrganizationMapping a ns1:OrganizationMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Organization Mapping" ;
    ns1:d3fend-id "D3-OM" ;
    ns1:definition "Organization mapping identifies and models the people, roles, and groups with an organization and the relations between them." ;
    ns1:display-order 4 ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-OrganizationalManagementInSAPERPHCM,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:Dependency,
        ns1:Organization,
        ns1:Person ;
    ns1:may-map ns1:OrganizationalActivity ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:OperationalActivityMapping .

ns1:OutboundInternetEncryptedRemoteTerminalTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Encrypted Remote Terminal Traffic" ;
    ns1:definition "Outbound internet encrypted remote terminal traffic is encrypted network traffic for a standard remote terminal protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:subClassOf ns1:OutboundInternetEncryptedTraffic ;
    skos:altLabel "Outbound Internet Encrypted RDP Traffic",
        "Outbound Internet Encrypted SSH Traffic" .

ns1:OutboundInternetFileTransferTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet File Transfer Traffic" ;
    ns1:contains ns1:File ;
    ns1:definition "Outbound internet file transfer traffic is file transfer traffic that is: (a) on an outgoing connection initiated from a host within a network to a host outside the network, and (b) using a standard file transfer protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_transfer>,
        <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:FileTransferNetworkTraffic,
        ns1:OutboundInternetNetworkTraffic,
        ns1:OutboundNetworkTraffic .

ns1:OutboundInternetMailTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Mail Traffic" ;
    ns1:definition "Outbound internet DNS lookup traffic is network traffic using a standard email protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:OutboundInternetNetworkTraffic ;
    skos:altLabel "Outbound Internet Email Traffic" .

ns1:OutboundTrafficFiltering a ns1:OutboundTrafficFiltering,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Traffic Filtering" ;
    ns1:d3fend-id "D3-OTF" ;
    ns1:definition "Restricting network traffic originating from a private host or enclave destined towards untrusted networks." ;
    ns1:filters ns1:OutboundNetworkTraffic ;
    ns1:kb-article """## How it works

Outbound traffic, in this context, is network traffic originating from a private host or enclave destined towards untrusted networks.
For example:

* An enterprise desktop intranet user connecting to www.example.com
* An internal mail server connecting to an external mail server, mail.example.com

Filtering is commonly implemented as firewall rulesets to limit outbound traffic permitted to egress a host or network. Firewalls are deployed either directly on hosts through kernel level software implementations or installed in-line directly on network links. There are benefits and disadvantages to each approach.

There are various strategies for developing filtering rulesets:

* Block everything by default
* Limit destination hosts
* Limit destination transport or application protocols
* Restrict content outbound (Ex. strings formatted as social security numbers, or proprietary data)

## Considerations
* Dynamic IP assignment creates challenges for Outbound Traffic Filtering because users are not necessarily associated with the same IP address. This can be addressed by linking IP address management information with the filtering logic.
* Connections using non-standard transport layer ports may circumvent outbound traffic filtering technology which does not detect application protocol based on traffic content.
* Business requirements typically drive the development of filtering rule sets.

## Implementations
- iptables (Linux)
- Windows Firewall
- pf (BSD)""" ;
    ns1:kb-reference ns1:Reference-AutomaticallyGeneratingRulesForConnectionSecurity_Microsoft ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficFiltering .

ns1:PageFrame a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Page Frame" ;
    ns1:contained-by ns1:PrimaryStorage ;
    ns1:definition "A page frame is the smallest fixed-length contiguous block of physical memory into which memory pages are mapped by the operating system." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Page_(computer_memory)> ;
    rdfs:subClassOf [ ],
        ns1:MemoryBlock .

ns1:PageTable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Page Table" ;
    ns1:contains ns1:PhysicalAddress,
        ns1:VirtualAddress ;
    ns1:definition "A page table  is the data structure used by the MMU in a virtual memory computer system  to store the mapping between virtual addresses (virtual pages) and physical addresses (page frames)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Page_table> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalInformationBearer .

ns1:PassiveCertificateAnalysis a ns1:PassiveCertificateAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Passive Certificate Analysis" ;
    ns1:d3fend-id "D3-PCA" ;
    ns1:definition "Collecting host certificates from network traffic or other passive sources like a certificate transparency log and analyzing them for unauthorized activity." ;
    ns1:kb-article """## How it works
Certificates are analyzed outside of a TLS server connection using third-party secure update logs, domain name analysis and analytics.

### Secure update certificate logs
* Certificate Logs
The key enabling feature is a secure service that maintains record logs of certificate activities. The logs allow users to only append certificates and never to delete or modify the log entries. The logs use Merkle Tree Hashes to ensure they have not been tampered with. The logging service also allows for public auditing by any user.

The logging service, upon receipt of a certificate to log, will respond with a signed certificate timestamp (SCT). The SCT guarantees the certificate will be added to the log within the time specified. The SCT must be present with the certificate during a TLS handshake.

* Certificate Monitoring
Certificate monitoring, of the logs, is typically done by the CA and they watch for suspicious certificate logging and unusual certificates or extensions or permissions. Monitors are also responsible for verifying the logs are accurate and public.

* Certificate Auditors
Log integrity is verified by log auditors. Auditors make use of log proofs are used to validate the cryptographic hashes (Merkle Trees) that the log employs are consistent. In order to ensure consistency throughout multiple monitors and auditors, sharing a common logging service, gossip protocol is employed.

### Phishing domain name analysis
* A curated corpus of known benign domains and phishing domain names is used as training text for machine learning. Through the use of feature set extraction, vectors labels are created with scoring to indicated if they are considered benign or phishing domains.

* A stream of new or updated SSL certificates with fully qualified domain names (FQDN) is analyzed against the feature vectors and a predictive model determines a score for the domains. The scoring considers distance measures such as Levenshtein distance to help in determining the final label score. Supervised learning is also employed using the curated domains of benign and phishing domains.

* Subdomain phishing analysis, prepending a trusted domain to a phishing domain, and regular expression comparisons  are also used in the label scoring model. A tunable measure is used to determine the threshold for alerting. This measure helps to balance between precision and recall measures.

## Considerations
* Some entity will need to run the logging service and a trusted entity is preferred.
* Certificate Authorities will likely need to monitor the logging service for consistency.
* Certificate revocation is unchanged and remains outside of Certificate Transparency, but certificates needing to be revoked are visible.
* Technique dependent of reliable feed of new and updated certificates
* Some certificate authorities allow for certificates to be registered with wildcards in the FQDN and thus will fail some of the subdomain scoring
* Phishing HTTP domains will not be discovered""" ;
    ns1:kb-reference ns1:Reference-CertificateTransparency,
        ns1:Reference-StreamingPhish ;
    rdfs:subClassOf ns1:CertificateAnalysis .

ns1:PassiveLogicalLinkMapping a ns1:PassiveLogicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Passive Logical Link Mapping" ;
    ns1:d3fend-id "D3-PLLM" ;
    ns1:definition "Passive logical link mapping only listens to network traffic as a means to map the the whole data link layer, where the links represent logical data flows rather than physical connections." ;
    ns1:kb-reference ns1:Reference-TenablePassiveNetworkMonitoring ;
    ns1:synonym "Passive Logical Layer Mapping" ;
    rdfs:subClassOf ns1:LogicalLinkMapping .

ns1:PasswordAuthentication a ns1:PasswordAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Authentication" ;
    ns1:d3fend-id "D3-PWA" ;
    ns1:definition "Password authentication is a security mechanism used to verify the identity of a user or entity attempting to access a system or resource by requiring the input of a secret string of characters, known as a password, that is associated with the user or entity." ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-53-Revision-5 ;
    ns1:uses ns1:Password ;
    rdfs:subClassOf [ ],
        ns1:AgentAuthentication .

ns1:PerHostDownload-UploadRatioAnalysis a ns1:PerHostDownload-UploadRatioAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Per Host Download-Upload Ratio Analysis" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-PHDURA" ;
    ns1:definition "Detecting anomalies that indicate malicious activity by comparing the amount of data downloaded versus data uploaded by a host." ;
    ns1:kb-article """## How it works
Aggregate pull vs. push ratios from metadata are used to develop a baseline for a given host over a specific time period, e.g., over a three-hour period, one day, one week, etc. Anomalies identified over a threshold produce an alert.

## Considerations
Collection and analysis of large network packet captures requires large storage and intensive computing power. The time windows used to calculate the ratio may vary in implementations, this consideration should take into account a threat model and likely effects (impacts) delivered by an adversary.""" ;
    ns1:kb-reference ns1:Reference-SystemForDetectingThreatsUsingScenario-basedTrackingOfInternalAndExternalNetworkTraffic_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:PeripheralFirmwareVerification a ns1:PeripheralFirmwareVerification,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Peripheral Firmware Verification" ;
    ns1:d3fend-id "D3-PFV" ;
    ns1:definition "Cryptographically verifying peripheral firmware integrity." ;
    ns1:kb-article """# How it works
Peripherial firmware is collected and  analyzed on a host either periodically or on demand. This information may be collected for future comparisons.

Changes in firmware hash values may indicate that the firmware has been tampered with or that firmware images are not maintained to current baselined versions, or even known vulnerable versions are deployed.

## Considerations
* Trust baselines will need to be generated for specific devices
* Changes to trusted configurations will need to be managed across the enterprise""" ;
    ns1:kb-reference ns1:Reference-FirmwareVerificationEclypsium,
        ns1:Reference-FirmwareVerificationTrapezoid ;
    ns1:verifies ns1:PeripheralFirmware ;
    rdfs:subClassOf [ ],
        ns1:FirmwareVerification .

ns1:PhysicalAccessMediation a ns1:PhysicalAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Access Mediation" ;
    ns1:d3fend-id "D3-PAM" ;
    ns1:definition "Physical access mediation is the process of granting or denying specific requests to enter specific physical facilities (e.g., Federal buildings, military establishments, border crossing entrances.)" ;
    ns1:isolates ns1:PhysicalArtifact ;
    ns1:kb-reference ns1:Reference-CNNSI-4009 ;
    ns1:synonym "Physical Access Control" ;
    rdfs:subClassOf [ ],
        ns1:AccessMediation .

ns1:PhysicalAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Address" ;
    ns1:definition "In a computer supporting virtual memory, the term physical address is used mostly to differentiate from a virtual address. In particular, in computers utilizing a memory management unit(MMU) to translate memory addresses, the virtual and physical addresses refer to an address before and after translation performed by the MMU, respectively." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Physical_address> ;
    rdfs:subClassOf ns1:MemoryAddress .

ns1:PhysicalLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Link" ;
    ns1:definition """A physical link is a dedicated connection for communication that uses some physical media (electrical, electromagnetic, optical, to include clear spaces or vacuums.)  A physical link represents only a single hop (link) in any larger communcations path, circuit, or network.

NOTE: not synonymous with data link as a data link can be over a telecommunications circuit, which may be a virtual circuit composed of multiple phyical links.""" ;
    ns1:synonym "Layer-1 Link" ;
    rdfs:seeAlso <https://dbpedia.org/resource/Physical_layer> ;
    rdfs:subClassOf ns1:Link .

ns1:PointerAuthentication a ns1:PointerAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pointer Authentication" ;
    ns1:authenticates ns1:Pointer ;
    ns1:d3fend-id "D3-PAN" ;
    ns1:definition "Comparing the cryptographic hash or derivative of a pointer's value to an expected value." ;
    ns1:kb-article """## How It Works

Pointer Authentication (frequently referred to as PAC, although the technique is properly Pointer Authentication) is a security feature to provide protection against attackers with memory read/write access.  A Pointer Authentication Code (PAC) is a cryptographic hash or derivative computed on the value of a pointer and some additional context information which can then provide a cryptographically strong guarantee about the likelihood that a pointer has been tampered with by an attacker.

Although pointers are 64 bits, most systems have a substantially smaller virtual address space, leaving unused bits in pointers that can store the value of the PAC, this can be done to reduce memory space requirements. One implementation is in ARMv8.3-A.  A PAC is computed over the 64-bit pointer value and a 64-bit context value.  Instructions are introduced to deal with pointers: one category to compute and insert the PAC into a pointer, another category to verify the pointer and invalidate the pointer if the PAC does not check, and a third category to remove the pointer and restore the original value without verifying.

The ARM standard specifies a cryptographic algorithm called QARMA-64 (designed by Qualcomm) to compute the signature, although this algorithm is not required.  The architecture provides for five secret 128-bit Pointer Authentication keys: two for instruction pointers, two for data pointers, and a general key for signing larger blocks of data.

## Considerations

In the ARM implementation, the mechanisms above for manipulating PACS are provided, but it is up to the code developer to manage the keys for the cryptographic algorithm.


A known potential limitation of PACs concerns signing gadgets. Under certain circumstances PACs can be bypassed by forcing the system to run a signing gadget which will allow the signing of arbitrary pointers to occur.""" ;
    ns1:kb-reference ns1:Reference-PointerAuthenticationOnARMv8.3,
        ns1:Reference-PointerAuthenticationProjectZero ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:PowerShellProfileScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "PowerShell Profile Script" ;
    ns1:definition "A PowerShell profile script is a script that runs when PowerShell starts and can be used as a logon script to customize user environments." ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.1> ;
    rdfs:subClassOf ns1:UserInitScript .

ns1:PowerSupply a owl:Class ;
    rdfs:label "Power Supply" ;
    ns1:definition "A power supply is an electrical device or module that converts and regulates energy from a source (e.g., the power grid or batteries) to an appropriate voltage, current, and frequency for one or more loads. It may stand alone or be integrated into its host appliance, often providing overcurrent protection, voltage regulation, or power conditioning for safe, stable operation." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Power_supply> ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:PrivateKey a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Private Key" ;
    ns1:definition "A private key can be used to decrypt messages encrypted using the corresponding public key, or used to sign a message that can be authenticated with the corresponding public key." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:AsymmetricKey .

ns1:ProcessCodeSegmentVerification a ns1:ProcessCodeSegmentVerification,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Code Segment Verification" ;
    ns1:d3fend-id "D3-PCSV" ;
    ns1:definition "Comparing the \"text\" or \"code\" memory segments to a source of truth." ;
    ns1:kb-article """## How it works
A process code segment is an executable portion of computer memory allocated to a particular process. Process Code Segment Verification implements verification to compare a process code segment to some expected value.

### Verification logic
Verification can occur during application startup, or continuously during execution. The logic which verifies the process code may be separate in a third-party process, embedded in the application itself at compile time, or dynamically linked at runtime.

### System of record
Examples of systems of record:

 * On-disk application binary files or checksums
 * Remotely stored binary data or checksums
 * Embedded binary data or checksums

### Post Verification Actions
If the verification function determines a process code segment may have been altered, a capability may invoke Eviction techniques  as **Process Termination** to end the current process, or **Executable Blacklisting** to prevent the executable from launching in the future.

## Considerations

### False positives

False positives commonly occur in the case that the layout of code in the process segment is legitimately modified:

*  Operating system features or third-party security software may modify the layout of process code, for example in the defensive technique **Segment Address Offset Randomization**, or in the case that a module is rebased.  In both of these cases, the alteration occurs before the code is fully loaded into memory, and it would be possible to avoid the false positive by securely feeding this constant offset and any relocation data into the verification logic.

* Process code segments may be written to modify themselves or other process code segments; however, this goes against widely-accepted current practices in software development.

### False negatives

False negatives can occur via alteration of the verification logic or source of truth, or insufficient verification logic.

* Verification techniques which are executed only locally may be defeated by altering the local verification logic.

* Verification that is run only on a recurring basis could be evaded if the malicious alteration is completed before verification is run.

* Verification that requests an operation to be performed on a subset of the code segment could be evaded by performing that operation on a copy of the relevant bytes of the code segment.

* Verification based on a system of record that can be altered may fail if that system of record is modifiable by a malicious user.""" ;
    ns1:kb-reference ns1:Reference-Anti-tamperSystemWithSelf-adjustingGuards_ARXANTECHNOLOGIESInc,
        ns1:Reference-GuardsForApplicationInSoftwareTamperproofing_PurdueResearchFoundation,
        ns1:Reference-SystemAndMethodForDetectingMalwareInjectedIntoMemoryOfAComputingDevice_EndgameInc,
        ns1:Reference-SystemAndMethodForValidatingIn-memoryIntegrityOfExecutableFilesToIdentifyMaliciousActivity_EndgameInc,
        ns1:Reference-TamperProofMutatingSoftware_ARXANTECHNOLOGIESInc,
        ns1:Reference-ThreatDetectionThroughTheAccumulatedDetectionOfThreatCharacteristics_SophosLtd ;
    ns1:verifies ns1:ProcessCodeSegment ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:ProcessDataSegment a owl:Class ;
    rdfs:label "Process Data Segment" ;
    ns1:definition "A process data segment, is a portion of the program's virtual address space that contains executable instructions and corresponds to the loaded image data segment." ;
    rdfs:seeAlso ns1:ImageDataSegment,
        <http://dbpedia.org/resource/Data_segment> ;
    rdfs:subClassOf ns1:ProcessSegment .

ns1:ProcessEnvironmentVariable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Environment Variable" ;
    ns1:definition "An environment variable is a dynamic-named value that can affect the way running processes will behave on a computer. They are part of the environment in which a process runs." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Environment_variable> ;
    rdfs:subClassOf ns1:ApplicationConfiguration ;
    skos:altLabel "Environment Variable" .

ns1:ProcessLineageAnalysis a ns1:ProcessLineageAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Lineage Analysis" ;
    ns1:analyzes ns1:Process,
        ns1:ProcessTree ;
    ns1:d3fend-id "D3-PLA" ;
    ns1:definition "Identification of suspicious processes executing on an end-point device by examining the ancestry and siblings of a process, and the associated metadata of each node on the tree, such as process execution, duration, and order relative to siblings and ancestors." ;
    ns1:kb-article """## How it works
Process tree analysis techniques gather information on how a process was initiated to determine if a process is malicious. For example, if a process was not initiated from boot or not initiated by another process, that process is identified as suspicious. Also, if a new process was started before a process initiated by the device (ex. during boot) and that new process was not initiated by a user (which can be determined by examining process parameters such as type of process, its creator, source, etc.) the process is identified as suspicious.

For example, Microsoft Word may block execution of any subprocess that is not in an approved path.

## Considerations
* Attackers may spoof the parent PID (https://attack.mitre.org/techniques/T1502/), rendering such after-the-fact analysis on process lineage ineffective.
* Processes may hide from various means of detection; an example on Linux is where a rootkit might remove key files for the process from its directory in /proc.
* Zombie processes.""" ;
    ns1:kb-reference ns1:Reference-CAR-2020-11-002%3ALocalNetworkSniffing_MITRE,
        ns1:Reference-CAR-2020-11-004%3AProcessesStartedFromIrregularParent_MITRE,
        ns1:Reference-CAR-2021-02-002%3AGetSystemElevation_MITRE,
        ns1:Reference-CAR-2021-05-003%3ABCDEditFailureRecoveryModification_MITRE,
        ns1:Reference-CommandLaunchedFromWinLogon_MITRE,
        ns1:Reference-DebuggersForAccessibilityApplications_MITRE,
        ns1:Reference-GenericRegsvr32_MITRE,
        ns1:Reference-OutlierParentsOfCmd_MITRE,
        ns1:Reference-ProcessesSpawningCmd.exe_MITRE,
        ns1:Reference-QuickExecutionOfASeriesOfSuspiciousCommands_MITRE,
        ns1:Reference-Reg.exeCalledFromCommandShell_MITRE,
        ns1:Reference-RemotelyLaunchedExecutablesViaWMI_MITRE,
        ns1:Reference-ServiceOutlierExecutables_MITRE,
        ns1:Reference-ServiceSearchPathInterception_MITRE,
        ns1:Reference-ServicesLaunchingCmd_MITRE,
        ns1:Reference-SystemAndMethodsThereofForCausalityIdentificationAndAttributionsDeterminationOfProcessesInANetwork_PaloAltoNetworksIncCyberSecdoLtd,
        ns1:Reference-SystemAndMethodsThereofForIdentificationOfSuspiciousSystemProcesses_PaloAltoNetworksInc,
        ns1:Reference-UACBypass_MITRE ;
    ns1:synonym "Process Tree Analysis" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ProcessSpawnAnalysis .

ns1:ProcessSegmentExecutionPrevention a ns1:ProcessSegmentExecutionPrevention,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Segment Execution Prevention" ;
    ns1:d3fend-id "D3-PSEP" ;
    ns1:definition "Preventing execution of any address in a memory region other than the code segment." ;
    ns1:kb-article """## How it works

During execution of a process, the instruction pointer register should only point to addresses in a code segment (also called the .text segment), as this is the sole segment which should contain program code.

When this technique detects an attempt to execute something that has been designated as non-executable, other techniques such as those in **Process Eviction** might be invoked, such as **Process Termination** to end the current process, or **Executable Blacklisting** to blacklist the potentially vulnerable or malfunctioning executable.

### Software-based implementations
The software-based implementation in Windows XP SP2 might not check that every time the instruction pointer is changed, and does not check on each jump or return.  Before calling an exception handler, Windows XP SP2 software-enforced DEP checks whether the exception handler is located in a memory region marked as executable.  If the program was also built with SafeSEH, this implementation also checks before changing control to the exception handler whether it is a registered exception handler in the program's file on disk.

### Hardware-based implementations
The NX (No Execute) or XD (Execute Disable) bit on the processor specifies whether a certain part of memory is executable.  Early implementations set this bit by the memory segment, while modern implementations which are built on the flat memory model often store this bit in each entry of the page table, to control execution by the page.


## Considerations

Non-hardware process data segment execution prevention is more susceptible to being able to be turned off for a page of memory.

Different implementations of this defense have been in place since the 1980s, but implementation stalled when larger 16-bit programs began stuffing code in the segments usually reserved for data. Many modern programs follow the best practice of separation of code and data, are able to run under this defense.

ROP or ret2libc/return-to-function attacks could bypass this defense, as although they may pass attacker-controlled data or stack frames to a function, they abuse functions that are legitimately located in the .text segment (code segment) of the program.  For those, more advanced defenses such as a table of valid jump addresses, function call analysis, or return depth analysis could be used.""" ;
    ns1:kb-reference ns1:Reference-DataExecutionPrevention_Microsoft,
        ns1:Reference-WhatIsNX_XDFeature_RedHat ;
    ns1:neutralizes ns1:ProcessSegment ;
    ns1:synonym "Execute Disable",
        "No Execute" ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:ProcessSelf-ModificationDetection a ns1:ProcessSelf-ModificationDetection,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Self-Modification Detection" ;
    ns1:analyzes ns1:Process ;
    ns1:d3fend-id "D3-PSMD" ;
    ns1:definition "Detects processes that modify, change, or replace their own code at runtime." ;
    ns1:kb-article """## How it Works
A security agent installed on the host machine intercepts API calls between a process and operating system. Intercepted API calls are then compared against attack signatures/patterns to identify API calls that modify executable memory or modify the entry point address of a suspended child process. Attack patterns include:

* Executable code of a suspended child process removed from memory by one or more API calls.
* New executable code injected and / or loaded into memory of a suspended child process by one or more API calls.
* Executable code modified by one or more API calls.
* Next instruction pointer value in memory modified by one or more API calls.

## Considerations
Comparing loaded code segments of processes with what is expected to have been loaded from a file can result in false positives, due to legitimate uses of self-modification for decrypting or uncompressing code segments.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodForProcessHollowingDetection_CarbonBlackInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:ProcessSuspension a ns1:ProcessSuspension,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Suspension" ;
    ns1:d3fend-id "D3-PS" ;
    ns1:definition "Suspending a running process on a computer system." ;
    ns1:kb-article """## How it works

A running process might be suspended to mitigate its immediate effects if it is exhibiting anomalous, unauthorized, or malicious behavior. Defenders may choose to suspend rather than terminate to analyze the process first and resume the process if deemed benign.

### System-provided functions

#### Windows tools
In Windows, the `PsSuspend` command line utility from the SysInternals Suite provides functionality to suspend processes on a local or remote system.""" ;
    ns1:kb-reference ns1:Reference-PsSuspend ;
    ns1:suspends ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:ProcessEviction .

ns1:ProcessTree a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Tree" ;
    ns1:contains ns1:Process ;
    ns1:definition "A process tree is a tree structure representation of parent-child relationships established via process spawn operations." ;
    rdfs:seeAlso ns1:ProcessSpawnAnalysis,
        <http://dbpedia.org/resource/Child_process>,
        <http://dbpedia.org/resource/Parent_process> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:ProtocolMetadataAnomalyDetection a ns1:ProtocolMetadataAnomalyDetection,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Protocol Metadata Anomaly Detection" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-PMAD" ;
    ns1:definition "Collecting network communication protocol metadata and identifying statistical outliers." ;
    ns1:kb-article """## How it works
Network protocol metadata is first collected and processed in real-time or post-facto. Metadata may include packet header information or information about a session (ex. time between requests/responses). Metadata is then grouped based on shared characteristics and those groups are compared to each other. If particular metadata differs significantly from other data, an alert is generated, identifying the network event as anomalous. Anomalous activity may indicate unauthorized activity.

## Considerations
Metadata collection on enterprises can yield large data sets. Storage, indexing, querying, and aging should be considered prior to implementation.""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingThreatsUsingMetadataVectors_VECTRANETWORKSInc,
        ns1:Reference-MethodAndSystemForDetectingThreatsUsingPassiveClusterMapping_VectraNetworksInc,
        ns1:Reference-SystemForImplementingThreatDetectionUsingDailyNetworkTrafficCommunityOutliers_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:ProxyBasedWebServerAccessMediation a ns1:ProxyBasedWebServerAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Proxy-based Web Server Access Mediation" ;
    ns1:d3fend-id "D3-PBWSAM" ;
    ns1:definition "Proxy-based web server access mediation focuses on the regulation of web server access through intermediary proxy servers." ;
    ns1:kb-article """## How it works

Proxy-based Web Server Access Mediation involves controlling access to web servers via proxy servers, which act as intermediaries between users and web resources. This approach can enhance security by anonymizing user requests, filtering content, and enforcing access policies. Examples include using corporate proxies to access external websites or services.""" ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-41-Revision-1 ;
    rdfs:subClassOf ns1:WebSessionAccessMediation .

ns1:RFShielding a ns1:RFShielding,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RF Shielding" ;
    ns1:d3fend-id "D3-RFS" ;
    ns1:definition "Adding physical barriers to a platform to prevent undesired radio interference." ;
    ns1:kb-reference ns1:Reference-PrivacyAndSecuritySystemsAndMethodsOfUse,
        ns1:Reference-Technical_Specifications_for_Construction_and_Management_of_Sensitive_Compartmented_Information_Facilities ;
    rdfs:subClassOf ns1:PlatformHardening .

ns1:RFTransmitter a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RF Transmitter" ;
    rdfs:subClassOf ns1:RFNode .

ns1:RPCTrafficAnalysis a ns1:RPCTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RPC Traffic Analysis" ;
    ns1:analyzes ns1:RPCNetworkTraffic ;
    ns1:d3fend-id "D3-RTA" ;
    ns1:definition "Monitoring the activity of remote procedure calls in communication traffic to establish standard protocol operations and potential attacker activities." ;
    ns1:kb-article """## How it works
A remote procedure call (RPC) enables one computer to execute a specific function on another computer, as if it were a local application process. There are numerous RPC specifications and implementations. RPC capabilities can be abused by attackers in order to achieve a variety of tactical objectives including execution, persistence, initial access, and more. RPC proxies may be used to collect and store RPC traffic. RPCs can occur over network sockets or named pipes.

Analytics look for unauthorized behavior such as:

* Processes being launched or scheduled remotely
* System configurations being changed remotely
* Unauthorized file read activity

Example RPC Protocols:

* DCE/RPC
* CORBA
* Open Network Computing Remote Procedure Call
* D-Bus
* XML-RPC
* JSON-RPC
* SOAP
* Apache Thrift

## Considerations
* RPC is widely used in enterprise environments, and significant data filtering may be required in large environments to enable analytic processing.
* RPC traffic may occur over a pipe, or within a host over loopback interface, thus making network collection difficult.""" ;
    ns1:kb-reference ns1:Reference-CAR-2014-05-001%3ARPCActivity_MITRE,
        ns1:Reference-CAR-2014-11-007-RemoteWindowsManagementInstrumentation_WMI_OverRPC_MITRE,
        ns1:Reference-CreateRemoteProcessViaWMIC_MITRE_Other,
        ns1:Reference-RPCCallInterception_CrowdstrikeInc,
        ns1:Reference-RemotelyLaunchedExecutablesViaServices_MITRE,
        ns1:Reference-RemotelyLaunchedExecutablesViaWMI_MITRE,
        ns1:Reference-RemotelyScheduledTasksViaSchtasks_MITRE,
        ns1:Reference-SMBWriteRequest-NamedPipes_MITRE ;
    ns1:synonym "RPC Protocol Analysis" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:ReadMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Read Memory" ;
    ns1:reads ns1:MemoryBlock ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:RegistryKeyDeletion a ns1:RegistryKeyDeletion,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Registry Key Deletion" ;
    ns1:d3fend-id "D3-RKD" ;
    ns1:definition "Delete a registry key." ;
    ns1:deletes ns1:WindowsRegistryKey ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    rdfs:subClassOf [ ],
        ns1:ObjectEviction .

ns1:ReissueCredential a ns1:ReissueCredential,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reissue Credential" ;
    ns1:d3fend-id "D3-RIC" ;
    ns1:definition "Issue a new credential to a user which supercedes their old credential." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:Credential ;
    rdfs:subClassOf [ ],
        ns1:RestoreAccess .

ns1:RelayPatternAnalysis a ns1:RelayPatternAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Relay Pattern Analysis" ;
    ns1:analyzes ns1:OutboundInternetNetworkTraffic ;
    ns1:d3fend-id "D3-RPA" ;
    ns1:definition "The detection of an internal host relaying traffic between the internal network and the external network." ;
    ns1:kb-article """## How it works
A relay may use a variety of proxying, forwarding, or routing technologies to bridge a protected network with an external network. A defensive analytic to detect a relay network may compare the network sessions among multiple hosts. Hosts which have nearly similar network statistics may be part of a relay network. The statistics may include number of bytes sent to and from, time of session initiation, packet size, or packet arrival time data.

## Considerations

Complex intranet VPNs or routing encapsulation may affect the detection analytics.  In addition, unwanted packets might not be forwarded, and additional packets may be added at the relay, further complicating detection.""" ;
    ns1:kb-reference ns1:Reference-MaliciousRelayDetectionOnNetworks_VECTRANETWORKSInc ;
    ns1:synonym "Relay Network Detection" ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:RemoteFileAccessMediation a ns1:RemoteFileAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote File Access Mediation" ;
    ns1:d3fend-id "D3-RFAM" ;
    ns1:definition "Remote file access mediation is the process of managing and securing access to file systems over a network to ensure that only authorized users or processes can interact with remote files." ;
    ns1:isolates ns1:File ;
    ns1:kb-article """## How it works

Remote File Access Mediation focuses on controlling how users or processes access file systems from remote locations. This involves ensuring secure connections, often through protocols like SFTP or SMB, and enforcing permissions to prevent unauthorized access or data breaches. Examples of enforcement areas include accessing shared drives or cloud storage from remote offices or home networks.""" ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-53-Revision-5 ;
    ns1:synonym "File Share Access Mediation" ;
    rdfs:subClassOf [ ],
        ns1:NetworkResourceAccessMediation .

ns1:RemoteResource a owl:Class ;
    rdfs:label "Remote Resource" ;
    ns1:definition "In computing, a remote  resource is a computer resource made available from one host to other hosts on a computer network. It is a device or piece of information on a computer that can be remotely accessed from another computer, typically via a local area network or an enterprise intranet." ;
    rdfs:seeAlso ns1:NetworkResource ;
    rdfs:subClassOf ns1:Resource .

ns1:RemoteTerminalSessionDetection a ns1:RemoteTerminalSessionDetection,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Terminal Session Detection" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-RTSD" ;
    ns1:definition "Detection of an unauthorized remote live terminal console session by examining network traffic to a network host." ;
    ns1:kb-article """## How it works
An external attacker takes remote control of a host inside a company or organization's network and manually directs offensive techniques. Nonstandard terminal sessions and abnormal behaviors are analyzed in this technique. Abnormal behavior detection includes analysis of user input patterns in the real-time session, keyboard output and packet inspection.

### Network Traffic Inspection
Network traffic from internal hosts is the main concern and focus for the traffic inspection. The network traffic is collected into inspection groups. The groups of traffic are assembled into distinct pair flows (outbound/inbound) and the pair flows are further divided into sessions. Only sessions originated inside of the network are considered for the inspection. Traffic inspection includes analysis to determine if a human is involved in the session exchanges. Time-based statistics are captured for each session being analyzed by the detection engine.

### Algorithm Analysis Description
Analysis algorithms look for patterns in the network traffic captured from the session data.  A detection engine groups the session traffic data, between the hosts, into rapid exchange instances. Analysis of rapid exchange traffic patterns can lead to the discovery of abnormal behavior which is indicative of a compromised internal host. The analysis algorithms look for patterns in the traffic which correlate to known activity (e.g., relay attacks, bot activity, bitcoin mining). Some metrics used during inspection include the following.

* Number of rapid-exchange instances
* Time interval between packets
* Fixed cadence of traffic
* Rhythm and direction of the initiation of instances
* Volume of data flowing from internal to external controlling host
* Data transfer characteristics
* Variability in length of silent periods

## Considerations
* Full packet capture is required which can be process intensive to analyze
* Attackers that move low and slow may blend in with existing traffic resulting in false negatives""" ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForDetectingExternalControlOfCompromisedHosts_VECTRANETWORKSInc,
        ns1:Reference-RDPConnectionDetection_MITRE,
        ns1:Reference-RemoteDesktopLogon_MITRE ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:Repository a owl:Class ;
    rdfs:label "Repository" ;
    ns1:definition "A centralized digital storage location where code, files, and related resources are systematically organized, managed, and maintained." ;
    rdfs:isDefinedBy <https://phoenixnap.com/glossary/what-is-a-repository> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:ResourceAccessPatternAnalysis a ns1:ResourceAccessPatternAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Access Pattern Analysis" ;
    ns1:analyzes ns1:Authentication,
        ns1:Authorization ;
    ns1:d3fend-id "D3-RAPA" ;
    ns1:definition "Analyzing the resources accessed by a user to identify unauthorized activity." ;
    ns1:kb-article """## How it works
This technique analyzes a user's resource accesses by comparing the user's recent activity against a baseline activity model. Major differences between the current activity and the baseline model might indicate unauthorized activity if they are severe enough.


## Considerations
* Potential for false positives from anomalies that are not associated with malicious activity.
* Attackers that move low and slow may not differentiate their resource access activity behavior enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        ns1:Reference-ModelingUserAccessToComputerResources_DaedalusGroupLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc>,
        ns1:Reference-SystemAndMethodThereofForIdentifyingAndRespondingToSecurityIncidentsBasedOnPreemptiveForensics_PaloAltoNetworksInc ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:UserBehaviorAnalysis .

ns1:RestoreConfiguration a ns1:RestoreConfiguration,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Configuration" ;
    ns1:d3fend-id "D3-RC" ;
    ns1:definition "Restoring an software configuration." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:ConfigurationResource ;
    rdfs:subClassOf [ ],
        ns1:RestoreObject .

ns1:RestoreDatabase a ns1:RestoreDatabase,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Database" ;
    ns1:d3fend-id "D3-RD" ;
    ns1:definition "Restoring the data in a database." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:Database ;
    rdfs:subClassOf [ ],
        ns1:RestoreObject .

ns1:RestoreDiskImage a ns1:RestoreDiskImage,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Disk Image" ;
    ns1:d3fend-id "D3-RDI" ;
    ns1:definition "Restoring a previously captured disk image a hard drive." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    rdfs:subClassOf ns1:RestoreObject .

ns1:RestoreEmail a ns1:RestoreEmail,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Email" ;
    ns1:d3fend-id "D3-RE" ;
    ns1:definition "Restoring an email for an entity to access." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:Email ;
    rdfs:subClassOf [ ],
        ns1:RestoreFile .

ns1:RestoreNetworkAccess a ns1:RestoreNetworkAccess,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Network Access" ;
    ns1:d3fend-id "D3-RNA" ;
    ns1:definition "Restoring a entity's access to a computer network." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:Host ;
    rdfs:subClassOf [ ],
        ns1:RestoreAccess .

ns1:RestoreSoftware a ns1:RestoreSoftware,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Software" ;
    ns1:d3fend-id "D3-RS" ;
    ns1:definition "Restoring software to a host." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:Software ;
    rdfs:subClassOf [ ],
        ns1:RestoreObject .

ns1:ResumeProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resume Process" ;
    ns1:resumes ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ResumeThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resume Thread" ;
    ns1:resumes ns1:Thread ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-resumethread> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ReverseResolutionIPDenylisting a ns1:ReverseResolutionIPDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reverse Resolution IP Denylisting" ;
    ns1:blocks ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-RRID" ;
    ns1:definition "Blocking a reverse lookup based on the query's IP address value." ;
    ns1:kb-article """## How it works
This technique prevents a client from learning domains deemed to be potentially malicious, which would have been delivered via reverse resolution responses over the DNS protocol.

Queries for reverse resolution requests (that is, requests where IP(s) are sent and a domain is returned) are collected, and the IP address(es) included in the query are examined. If the IP address(es) are in a range included in the blacklist, then the query is dropped.

## Considerations
- The blacklist will have to be maintained and will need to be kept up to date with identified maintenance cycles to ensure lists are not stale.
- DNS query traffic can be transmitted over many different protocols, which presents a challenge to implementing methods to extract all DNS query IP address value(s).
  - DNS has historically used UDP port 53, with TCP port 53 instead used for responses over 512 bytes or after a lack of response over UDP.
  - Usage of new protocols to provide confidentiality for DNS traffic, such as DoH (DNS over HTTPS) and DoT (DNS over TLS), complicates collection of the IP address(es) in DNS queries. These protocols have often been enabled in browser settings transparently after a browser update, with DNS queries proxied over one of these cryptographic protocols through a specified host.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Reverse Resolution IP Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:DNSDenylisting .

ns1:Router a owl:Class ;
    rdfs:label "Router" ;
    ns1:definition "A router is a networking device that forwards data packets between computer networks. Routers perform the traffic directing functions on the Internet. Data sent through the internet, such as a web page or email, is in the form of data packets. A packet is typically forwarded from one router to another router through the networks that constitute an internetwork (e.g. the Internet) until it reaches its destination node." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Router_(computing)> ;
    rdfs:subClassOf ns1:ComputerNetworkNode .

ns1:RoutingAccessMediation a ns1:RoutingAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Routing Access Mediation" ;
    ns1:d3fend-id "D3-RAM" ;
    ns1:definition "Routing access mediation is a network security approach that manages and controls access at the network layer using VPNs, tunneling protocols, firewall rules, and traffic inspection to ensure secure and efficient data routing." ;
    ns1:isolates ns1:Network ;
    ns1:kb-article """## How it works

Routing Access Mediation is a network security strategy focused on managing and controlling access at the network layer. It includes the use of VPNs for secure remote access, tunneling protocols for encapsulating data, firewall rules for filtering traffic, and advanced inspection techniques like Cisco's Context-Based Access Control (CBAC) to monitor and regulate data flow. This approach ensures secure and efficient routing of data across networks, protecting against unauthorized access and enhancing overall network security.""" ;
    ns1:kb-reference ns1:Reference-WhatIsNetworkAccessControl ;
    rdfs:seeAlso <https://www.geeksforgeeks.org/context-based-access-control-cbac/> ;
    rdfs:subClassOf [ ],
        ns1:NetworkAccessMediation .

ns1:SaveRegister a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Save Registers" ;
    ns1:copies ns1:ProcessorRegister ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ScheduledJobAnalysis a ns1:ScheduledJobAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Job Analysis" ;
    ns1:analyzes ns1:JobSchedule ;
    ns1:d3fend-id "D3-SJA" ;
    ns1:definition "Analysis of source files, processes, destination files, or destination servers associated with a scheduled job to detect unauthorized use of job scheduling." ;
    ns1:kb-article """## How it works
Scheduled job execution can be utilized by adversaries for the purpose of persistence, conducting remote execution, or gaining privileges. Details of a scheduled job such as associated source files, processes, destination files, or destination servers are first identified and analyzed and then compared against an anti-malware signature database, whitelist, or reputation server. For example, a file associated with a scheduled job to be executed at a specified time or a remote server that is accessed as part of a scheduled task is compared against an anti-malware signature database, whitelist, or reputation server, and if a match is found, execution is denied and an alert is generated.

In addition to traditional scheduled jobs, triggers can be set to execute a specific command after detecting a specific event in the system, such as with WMI Event Subscriptions in Windows.

## Considerations
Jobs can be scheduled in many different and sometimes creative ways through operating system capabilities.""" ;
    ns1:kb-reference ns1:Reference-ExecutionWithAT_MITRE,
        ns1:Reference-ExecutionWithSchtasks_MITRE,
        ns1:Reference-PreventingExecutionOfTaskScheduledMalware_McAfeeLLC ;
    ns1:synonym "Scheduled Job Execution" ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:ScriptApplicationProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Script Application Process" ;
    ns1:definition "A script application process is an application process interpreting an executable script." ;
    ns1:interprets ns1:ExecutableScript ;
    rdfs:subClassOf [ ],
        ns1:ApplicationProcess ;
    skos:altLabel "Script Process" .

ns1:ScriptExecutionAnalysis a ns1:ScriptExecutionAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Script Execution Analysis" ;
    ns1:analyzes ns1:ScriptApplicationProcess ;
    ns1:d3fend-id "D3-SEA" ;
    ns1:definition "Analyzing the execution of a script to detect unauthorized user activity." ;
    ns1:kb-article """## How it works
Software installed on the host system hooks into a scripting engine to intercept commands before they are executed and block commands if they are determined to be harmful. Pattern matching is used to identify unauthorized commands or in the case of script files, a hash of the file is compared against hashes of known unauthorized script files.

## Considerations
List of known unauthorized script files or regular expression patterns must be kept up to date to ensure detection of new threats.""" ;
    ns1:kb-reference ns1:Reference-DetectingScript-basedMalware_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:SecurityToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Security Token" ;
    ns1:contains ns1:AccessToken ;
    ns1:definition "Security tokens are peripheral devices used to prove one's identity electronically (as in the case of a customer trying to access their bank account). The token is used in addition to or in place of a password to prove that the customer is who they claim to be. The token acts like an electronic key to access something." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Security_token> ;
    rdfs:subClassOf [ ],
        ns1:HardwareDevice .

ns1:SegmentAddressOffsetRandomization a ns1:SegmentAddressOffsetRandomization,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Segment Address Offset Randomization" ;
    ns1:d3fend-id "D3-SAOR" ;
    ns1:definition "Randomizing the base (start) address of one or more segments of memory during the initialization of a process." ;
    ns1:kb-article """## How it works

Many application exploits rely on an attacker specifying a location in memory, which points to data or code used by the attacker.  If the addresses are changed each time the program is run, then it becomes more difficult for the attacker to determine the location that will contain the code they wish to run.

Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as "rebasing."  Just as not all code is built for participation in ASLR, not all modules can be rebased; instead, modules must indicate whether they implement support for rebasing.  Such information to relocate the executable is typically stored in the ".reloc" segment -- each of the addresses pointed to in this segment has its address increased by the amount of the offset.
(An alternative method for relocation would be to add an amount to a global variable each time -- leading to less overhead in the module load, but more for each access.  Still another implementation could instead contain code to deference each changeable memory location on the fly, so that each of the references do not need to be updated.


## Considerations

As the offset for each segment is constant, it is possible to guess at the value of the address given the address of another variable.  Alternatively, memory pointers may be kept around, which contain the address of another variable.
Another bypass technique is known as an "egg hunt," whereby the attacker searches for a rather unique piece of the data or code in memory to determine its likely address.

The program needs to store these addresses for the functions somewhere.  In Linux, the PLT contains a "trampoline" to these addresses.  If an attacker desires to jump to the start of an existing function, they can jump directly to the trampoline anyway, and may have the opportunity to provide their own stack frame to the function with a write to the stack. If they overwrite a saved stack pointer which is loaded back into memory, or execute a function, that changes the address of a stack pointer.

If an attacker wants to inject some data into the program, for example as a parameter to a known function that is not under ASLR or a pointer to a trampoline function in the PLT, then they can repeat the data until they exceed the range of ASLR coverage, which on 32-bit systems is accomplishable in a few seconds with a heap spray.  Microsoft's EMET and Windows 10 Exploit Guard can pre-allocate particular addresses that are commonly used in heap sprays.  However, in many products, there does not seem to be nearly a complete coverage of such addresses, which only need to be executable and in the range of the heap; 0x0c0c0c0c is such an address that is commonly used for the x86 processor architecture, as when executed it only performs a numeric operation to a register four times.""" ;
    ns1:kb-reference ns1:Reference-DYNAMICBASE_UseAddressSpaceLayoutRandomization_MicrosoftDocs,
        ns1:Reference-HowASLRProtectsLinuxSystemsFromBufferOverflowAttacks_NetworkWorld ;
    ns1:obfuscates ns1:ProcessSegment ;
    ns1:synonym "ASLR",
        "Address Space Layout Randomization" ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:SenderMTAReputationAnalysis a ns1:SenderMTAReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sender MTA Reputation Analysis" ;
    ns1:analyzes ns1:Email ;
    ns1:d3fend-id "D3-SMRA" ;
    ns1:definition "Characterizing the reputation of mail transfer agents (MTA) to determine the security risk in emails." ;
    ns1:kb-article """## How it works
The sender message transfer agent (MTA) trust rating can be considered an indicator of the level of security risk and/or a trust level associated with sender MTAs in an email header.

The features considered in determining the trust rating may include:

* Length of time MTA has interacted with the enterprise
* Number of sender domains sending emails from the MTA
* Number of recipients in the enterprise the MTA sends emails to
* Number of emails received from this MTA
* Number of email replies received from this MTA

For example, higher values for the length of time an MTA has interacted with the enterprise, or number of emails received from an MTA can result in a higher trust rating. The trust rating categorizes the sender MTA as unrated, neutral, trusted, suspicious, or malicious.

## Considerations
Legitimate emails from a sender MTA may receive a lower trust rating over time if the sender's domain gets spoofed and is used to send unauthorized emails.""" ;
    ns1:kb-reference ns1:Reference-SystemsAndMethodsForDetectingAnd_orHandlingTargetedAttacksInTheEmailChannel_GraphusInc ;
    rdfs:subClassOf [ ],
        ns1:MessageAnalysis .

ns1:SenderReputationAnalysis a ns1:SenderReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Sender Reputation Analysis" ;
    ns1:analyzes ns1:Email ;
    ns1:d3fend-id "D3-SRA" ;
    ns1:definition "Ascertaining sender reputation based on information associated with a message (e.g. email/instant messaging)." ;
    ns1:kb-article """## How it works

Sender trust rating can be considered an indicator of the level of security risk and/or a trust level associated with a sender. The features considered in determining the trust rating include:

* Length of time sender has sent emails to the enterprise
* Number of recipients in the enterprise the sender interacts with
* Sender vs. enterprise originated message ratio
* Sender messages opened vs. not-opened ratio
* Number of emails received from this sender
* Number of emails replied to this sender
* Number of emails from this sender not opened
* Number of emails from this sender not opened that contain an attachment
* Number of emails from this sender not opened that contain a URL
* Number of emails sent to this sender
* Number of email replies received from this sender.

Higher values for the number of recipients the sender has interacted with or the number of emails received from the sender, for example, results in a higher trust rating. The trust rating can categorize the sender as unrated, neutral, trusted, suspicious, or malicious.

## Considerations
Legitimate emails from a sender may receive a lower trust rating over time if the sender's domain gets spoofed and is used to send unauthorized emails.""" ;
    ns1:kb-reference ns1:Reference-SystemsAndMethodsForDetectingAnd_orHandlingTargetedAttacksInTheEmailChannel_GraphusInc ;
    rdfs:subClassOf [ ],
        ns1:MessageAnalysis .

ns1:ServiceAccount a owl:Class ;
    rdfs:label "Service Account" ;
    ns1:definition "A service account is a type of account used by an application or service to interact with the operating system." ;
    ns1:synonym "System Account" ;
    rdfs:subClassOf ns1:UserAccount .

ns1:ServiceBinaryVerification a ns1:ServiceBinaryVerification,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Binary Verification" ;
    ns1:d3fend-id "D3-SBV" ;
    ns1:definition "Analyzing changes in service binary files by comparing to a source of truth." ;
    ns1:kb-article """## How it works
System service applications may originate from the operating system installation or third-party applications installed with administrative privileges. These services have an entry point of some executable file-- a binary or a script. Attackers sometimes modify these executables to launch their own code. Analyzing changes in these files may uncover unauthorized activity.

## Considerations
* These files change for legitimate reasons when the system or software updates.
* The source of truth must not be corrupted in order for this method to work.""" ;
    ns1:kb-reference ns1:Reference-ServiceBinaryModifications_MITRE ;
    ns1:verifies ns1:ServiceApplication ;
    rdfs:subClassOf [ ],
        ns1:SystemFileAnalysis .

ns1:ServiceDependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Dependency" ;
    ns1:definition "A service dependency indicates a service has an activity, agent, or another service which relies on it in order to be functional." ;
    rdfs:subClassOf ns1:Dependency .

ns1:ServiceDependencyMapping a ns1:ServiceDependencyMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Dependency Mapping" ;
    ns1:d3fend-id "D3-SVCDM" ;
    ns1:definition "Service dependency mapping determines the services on which each given service relies." ;
    ns1:kb-article """## How it works
The organization collects and models architectural information about the services and consumers of services and maps the dependencies between the services.

## Considerations
* Architectural design artifacts and SMEs may need to be consulted to determine if dependencies are intended or otherwise essential.
* Service dependencies for critical systems--those supporting critical organizational activities--should be prioritized for supply chain risk analysis.
* Service dependencies in cloud or microservice architectures may be discovered using distributed tracing capabilities""" ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:ServiceDependency ;
    ns1:synonym "Distributed Tracing" ;
    rdfs:subClassOf [ ],
        ns1:SystemMapping .

ns1:SessionDurationAnalysis a ns1:SessionDurationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Session Duration Analysis" ;
    ns1:analyzes ns1:Authentication,
        ns1:Authorization ;
    ns1:d3fend-id "D3-SDA" ;
    ns1:definition "Analyzing the duration of user sessions in order to detect unauthorized  activity." ;
    ns1:kb-article """## How it works
Detecting unauthorized user sessions by comparing the duration of a user logon session with a baseline behavior model. The behavior model comprises historical user session duration times.  Abnormalities between session duration and the behavior model may indicate suspicious activity.

## Considerations
* Potential for false positives from anomalies that are not associated with malicious activity.
* Attackers may not differentiate their session duration enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:UserBehaviorAnalysis .

ns1:SessionTermination a ns1:SessionTermination,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Session Termination" ;
    ns1:d3fend-id "D3-ST" ;
    ns1:definition "Forcefully end all active sessions associated with compromised accounts or devices." ;
    ns1:deletes ns1:Session ;
    ns1:kb-article "Defined in NIST 800-53 as AC-12." ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-53A-Revision-5 ;
    rdfs:subClassOf [ ],
        ns1:ProcessEviction .

ns1:SetRegisters a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Set Registers" ;
    ns1:modifies ns1:ProcessorRegister ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:SetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Set Thread Context" ;
    ns1:modifies ns1:Thread ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setthreadcontext> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ShadowStackComparisons a ns1:ShadowStackComparisons,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shadow Stack Comparisons" ;
    ns1:analyzes ns1:StackFrame ;
    ns1:d3fend-id "D3-SSC" ;
    ns1:definition "Comparing a call stack in system memory with a shadow call stack maintained by the processor to determine unauthorized shellcode activity." ;
    ns1:kb-article """## How it works
This technique compares the call stack stored in system memory with the shadow call stack maintained in the cache memory of the processor.  Mismatches between the two are compared since a return oriented programming attack may only be able to control or spoof the call stack and not the shadow call stack. Mismatches are counted and if the number of mismatches exceeds a certain threshold it is an indication of unauthorized activity and a security response action is performed.

## Considerations
If the threshold for detecting a stack anomaly is low, it may not detect a return-oriented attack with just one gadget, such as a return-to-libc or return-to-plt attack.  Additionally, this technique may not detect JOP (Jump-oriented programming), as the return instruction is not executed.""" ;
    ns1:kb-reference ns1:Reference-ThreatDetectionForReturnOrientedProgramming_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:ShimDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shim Database" ;
    ns1:definition "A application configuration database that contains or points to software shims (e.g., for backward compatibility, patches, etc.)" ;
    rdfs:subClassOf ns1:ApplicationConfigurationDatabase .

ns1:ShortcutFile a owl:Class ;
    rdfs:label "Shortcut File" ;
    ns1:definition """A shortcut file, or shortcut, is a handle that allows the user to find a file or resource located in a different directory or folder from the place where the shortcut is located.

Shortcuts, which are supported by the graphical file browsers of some operating systems, may resemble symbolic links but differ in a number of important ways. One difference is what type of software is able to follow them:

 - Symbolic links are automatically resolved by the file system. Any software program, upon accessing a symbolic link, will see the target instead, whether the program is aware of symbolic links or not.

 - Shortcuts are treated like ordinary files by the file system and by software programs that are not aware of them. Only software programs that understand shortcuts (such as the Windows shell and file browsers) treat them as references to other files.

Another difference are the capabilities of the mechanism:

 - Microsoft Windows shortcuts normally refer to a destination by an absolute path (starting from the root directory), whereas POSIX symbolic links can refer to destinations via either an absolute or a relative path. The latter is useful if both the location and destination of the symbolic link share a common path prefix[clarification needed], but that prefix is not yet known when the symbolic link is created (e.g., in an archive file that can be unpacked anywhere).

- Microsoft Windows application shortcuts contain additional metadata that can be associated with the destination, whereas POSIX symbolic links are just strings that will be interpreted as absolute or relative pathnames.

- Unlike symbolic links, Windows shortcuts maintain their references to their targets even when the target is moved or renamed. Windows domain clients may subscribe to a Windows service called Distributed Link Tracking to track the changes in files and folders to which they are interested. The service maintains the integrity of shortcuts, even when files and folders are moved across the network.[14] Additionally, in Windows 9x and later, Windows shell tries to find the target of a broken shortcut before proposing to delete it.""" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Shortcut_(computing)>,
        <http://dbpedia.org/resource/Symbolic_link#Shortcuts> ;
    rdfs:subClassOf ns1:File .

ns1:SoftwareDeploymentTool a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Deployment Tool" ;
    ns1:definition "Software that coordinates the deployment process of software to systems, typically remotely." ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:SoftwareInventory a ns1:SoftwareInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Inventory" ;
    ns1:d3fend-id "D3-SWI" ;
    ns1:definition "Software inventorying identifies and records the software items in the organization's architecture." ;
    ns1:inventories ns1:Software ;
    ns1:kb-article """## How it works
Administrators collect information on software items in their architecture using a variety of administrative and management tools that query network nodes for information.  In limited cases, where such queries are not supported or provide specific information of interest, an administrator may also collect this information through network enumeration methods to determine services responding on network nodes.

## Considerations
* Scanning and probing techniques using mapping tools can result in side effects to information technology (IT) and operational technology (OT) systems.
* An adversary conducting network enumeration may engage in activities that parallel normal software inventorying activities, but would require escalating to admin privileges for most of the operations requiting administrative tools.

## Examples

Application-layer discovery:

* Simple Network Management Protocol (SNMP) collects MIB information
* Web-based Enterprise Management (WBEM) collects CIM information
   * Windows Management Instrumentation (WMI)
   * Windows Management Infrastructure (MI)""" ;
    ns1:kb-reference ns1:Reference-Web-BasedEnterpriseManagement,
        ns1:Reference-Windows-Management-Infrastructure,
        ns1:Reference-Windows-Management-Instrumentation ;
    ns1:synonym "Software Discovery",
        "Software Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:AssetInventory .

ns1:SoftwareLibraryFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Library File" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "A software library is a collection of software components that are used to build a software product." ;
    ns1:may-contain ns1:ExecutableBinary,
        ns1:ExecutableScript ;
    rdfs:seeAlso <https://dbpedia.org/page/Library_(computing)> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:File .

ns1:SoftwareUpdate a ns1:SoftwareUpdate,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Update" ;
    ns1:d3fend-id "D3-SU" ;
    ns1:definition "Replacing old software on a computer system component." ;
    ns1:kb-reference ns1:Reference-MethodAndSystemForProvidingSoftwareUpdatesToLocalMachines ;
    ns1:updates ns1:Software ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:StackFrameCanary a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Frame Canary" ;
    ns1:definition "Stack canaries, named for their analogy to a canary in a coal mine, are used to detect a stack buffer overflow before execution of malicious code can occur. This method works by placing a small integer, the value of which is randomly chosen at program start, in memory just before the stack return pointer. Most buffer overflows overwrite memory from lower to higher memory addresses, so in order to overwrite the return pointer (and thus take control of the process) the canary value must also be overwritten. This value is checked to make sure it has not changed before a routine uses the return pointer on the stack. This technique can greatly increase the difficulty of exploiting a stack buffer overflow because it forces the attacker to gain control of the instruction pointer by some non-traditional means such as corrupting other important variables on the stack." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Stack_buffer_overflow#Stack_canaries> ;
    rdfs:subClassOf ns1:StackComponent ;
    skos:altLabel "Stack Canary" .

ns1:StackFrameCanaryValidation a ns1:StackFrameCanaryValidation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Frame Canary Validation" ;
    ns1:d3fend-id "D3-SFCV" ;
    ns1:definition "Comparing a value stored in a stack frame with a known good value in order to prevent or detect a memory segment overwrite." ;
    ns1:kb-article """## How it works

This defense must be applied at compile-time, or via a patch to the program binary.  Stack Frame Canary Verification inserts instructions at the prologue and epilogue of desired functions.  In the prologue, a canary value, typically with the same size as the register size, is stored in the system of record and on the stack.  Typically, the canary is loaded to where it has a memory address just below that of the saved instruction pointer and base pointer.  In the epilogue, the canary value stored on the stack and, is compared to the canary value in the system of record.  If the values are different, other techniques such as those in Process Eviction might be invoked, such as Process Termination to end the current process, or Executable Blacklisting to blacklist the potentially vulnerable or malfunctioning executable.

Stack Frame Canary Verification is commonly used to detect potential tampering of a saved register value on the stack before it has been restored.  Examples of registers with values commonly saved to the stack include the instruction pointer and the base pointer.

The canary should be stored between where the start of a buffer overrun is likely, and the data to protect, in cases where the buffer size increases it will overwrite the data to be protected.

On most processor architectures, including x86, x64, and ARM, a "push" operation to store data to the stack grows the stack towards a lower memory address.  As in these architectures, saved register values are stored to the stack at a point in time just before space is made for the local function variables, the saved register values have a higher address than that of the local function variables.  Values at increasing indexes of a buffer are written to increasing memory addresses; therefore, an overwrite in the local variable buffer could overwrite saved register values, and a stack canary between these two would be useful in detecting an overwrite.

On some other processor architectures such as the B5000, the stack grows towards increasing memory addresses, and some architectures, such as System Z and RCA1802A, stack direction can be chosen.  If the stack grows towards increasing memory addresses, while this architecture inherently provides more protection against a saved register being overwritten, other data including local function variables might be overwritten.


## Considerations

There are several ways that the protection provided by a canary could be rendered ineffective.

### Performing a malicious action before the canary is checked

If the attacker alters the memory in such a way that it performs a malicious action before the epilogue is called, then this protection will not be effective.  This includes altering the logic of the program by altering the values of local variables stored on the function stack, or by causing an exception and exploiting the exception mechanism such as the SEH (Structured Exception Handling) mechanism on Windows.

### Determining the canary value

Determining the canary value is possible through reading memory either for the code used to check the canary, or from the stored canary value itself in a stack frame.

### Changing the canary value

A vulnerability such as a write-what-where condition that allows one to write data after the canary in the stack, would allow control of the value of the saved instruction pointer without needing to know the canary value.""" ;
    ns1:kb-reference ns1:Reference-GS_BufferSecurityCheck_MicrosoftDocs,
        ns1:Reference-StackSmashingProtection_StackGuard_RedHat ;
    ns1:validates ns1:StackFrame ;
    rdfs:subClassOf [ ],
        ns1:ApplicationHardening .

ns1:StandaloneHoneynet a ns1:StandaloneHoneynet,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Standalone Honeynet" ;
    ns1:d3fend-id "D3-SHN" ;
    ns1:definition "An environment created for the purpose of attracting attackers and eliciting their behaviors that is not connected to any production enterprise systems." ;
    ns1:kb-article """## How it works
A standalone honeynet does not directly interact with the real enterprise environment. It may be located near or in some portion of the enterprise address space, but it does not interact with enterprise resources.

## Considerations
A standalone honeynet is a lower risk to deploy compared to connected or integrated honeynets due to its isolation from the enterprise network. However, this comes at cost in loss of fidelity and realism. Significant extra effort must be made in order to make the environment look realistic.""" ;
    ns1:kb-reference ns1:Reference-DynamicSelectionAndGenerationOfAVirtualCloneForDetonationOfSuspiciousContentWithinAHoneyNetwork_PaloAltoNetworksInc ;
    ns1:spoofs ns1:IntranetNetwork ;
    rdfs:subClassOf [ ],
        ns1:DecoyEnvironment .

ns1:StaticAnalysisTool a owl:Class ;
    rdfs:label "Static Analysis Tool" ;
    ns1:definition "A static [program] analysis tool performs an automated analysis of computer software without actually executing programs, in contrast with dynamic analysis, which is analysis performed on programs while they are executing. In most cases the analysis is performed on some version of the source code, and in the other cases, some form of the object code." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Static_program_analysis> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Category:Program_analysis>,
        <http://dbpedia.org/resource/Program_analysis> ;
    rdfs:subClassOf ns1:CodeAnalyzer ;
    skos:altLabel "Static Program Analysis Tool" .

ns1:StorageSnapshot a owl:Class ;
    rdfs:label "Storage Snapshot" ;
    ns1:definition "A storage snapshot is a copy of a storage medium or system environment at a point in time." ;
    rdfs:subClassOf ns1:ComputingSnapshot .

ns1:StoredProcedure a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stored Procedure" ;
    ns1:definition "A stored procedure (also termed proc, storp, sproc, StoPro, StoredProc, StoreProc, sp, or SP) is a subroutine available to applications that access a relational database management system (RDBMS). Such procedures are stored in the database data dictionary." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Stored_procedure> ;
    rdfs:subClassOf ns1:Subroutine .

ns1:StrongPasswordPolicy a ns1:StrongPasswordPolicy,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Strong Password Policy" ;
    ns1:d3fend-id "D3-SPP" ;
    ns1:definition "Modifying system configuration to increase password strength." ;
    ns1:kb-article """## How it works
Password strength guidelines include increasing password length, permitting passwords that contain ASCII or Unicode characters, and requiring systems to screen new passwords against lists of commonly used or compromised passwords.
## Considerations
Extremely complex password requirements may lead users to saving passwords in text files or picking obvious passwords that meet the policy.""" ;
    ns1:kb-reference ns1:Reference-DigitalIdentityGuidelines800-63-3,
        ns1:Reference-Testing_Metrics_for_Password_Creation_Policies_by_Attacking_Large_Sets_of_Revealed_Passwords ;
    ns1:strengthens ns1:Password ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:SuspendProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Suspend Process" ;
    ns1:suspends ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:SuspendThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Suspend Thread" ;
    ns1:definition "Suspending a thread causes the thread to stop executing user-mode code." ;
    ns1:suspends ns1:Thread ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-suspendthread> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:SystemConfigurationPermissions a ns1:SystemConfigurationPermissions,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Permissions" ;
    ns1:d3fend-id "D3-SCP" ;
    ns1:definition "Restricting system configuration modifications to a specific user or group of users." ;
    ns1:kb-reference ns1:Reference-HowToChangeRegistryValuesOrPermissionsFromACommandLineOrAScript ;
    ns1:restricts ns1:SystemConfigurationDatabase ;
    rdfs:subClassOf [ ],
        ns1:PlatformHardening .

ns1:SystemDaemonMonitoring a ns1:SystemDaemonMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Daemon Monitoring" ;
    ns1:d3fend-id "D3-SDM" ;
    ns1:definition "Tracking changes to the state or configuration of critical system level processes." ;
    ns1:kb-article """## How it works
Attackers may manipulate system settings or services to disable system logging or monitoring of security tools and events. Firewall and antivirus services are popular targets for attackers. Disabling system logs will also allow an attacker's actions to go unnoticed. Analysis of logs, registries, and process monitoring help defenders locate signs of tampering. Two possible approaches are to monitor hardened system services or to monitor registry updates for modifications to security settings.""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-MethodUsingKernelModeAssistanceForTheDetectionAndRemovalOfThreatsWhichAreActivelyPreventingDetectionAndRemovalFromARunningSystem_SymantecCorporation,
        ns1:Reference-UserActivityFromStoppingWindowsDefensiveServices_MITRE ;
    ns1:monitors ns1:OperatingSystemProcess ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:SystemDependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Dependency" ;
    ns1:definition "A system dependency indicates a system has an activity, agent, or another system which relies on it in order to be functional." ;
    rdfs:seeAlso <https://dl.acm.org/doi/10.1145/960116.53994>,
        <https://r-docs.synapse.org/articles/systemDependencies.html>,
        <https://www.ibm.com/docs/en/taddm/7.3.0?topic=model-dependencies-between-resources> ;
    rdfs:subClassOf ns1:Dependency .

ns1:SystemDependencyMapping a ns1:SystemDependencyMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Dependency Mapping" ;
    ns1:d3fend-id "D3-SYSDM" ;
    ns1:definition "System dependency mapping identifies and models the dependencies of system components on each other to carry out their function." ;
    ns1:kb-article """## How it works
The organization collects and models architectural information about the software, hardware, and products and maps the dependencies between systems, including each system's internal components and dependencies.

## Considerations
* Data exchanges identified in the network mapping efforts usually indicate such dependencies, but may not be part of the intended design.
* Architectural design artifacts and SMEs may need to be consulted to determine if dependencies are intended or otherwise essential.
* System depedency mapping can identify internal dependencies of standard and pre-built systems that should be incorporated into a complete system dependency model.
* System dependencies for critical systems--those supporting critical organizational activities--should be prioritized for supply chain risk analysis.
* System dependencies should identify the integral components of a given named system and their structure to form a system.
* System dependencies with a given system may be fixed by a particular product's configuration, and leveraging external knowledge bases about dependencies available (e.g., from package managers) is essential.""" ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin,
        ns1:Reference-SoftwareVulnerabilityGraphDatabase,
        ns1:Reference-TivoliApplicationDependencyDiscoverManager7_3_0DependenciesBetweenResources,
        ns1:Reference-UnifiedArchitectureFrameworkUAF ;
    ns1:maps ns1:SystemDependency ;
    rdfs:subClassOf [ ],
        ns1:SystemMapping .

ns1:SystemFirmwareVerification a ns1:SystemFirmwareVerification,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firmware Verification" ;
    ns1:d3fend-id "D3-SFV" ;
    ns1:definition "Cryptographically verifying installed system firmware integrity." ;
    ns1:kb-article """## How it works
Cryptographic hash values are computed for system firmware. The hash values are compared against precomputed firmware hash values to determine if the firmware has been tampered with.

When system firmware verification fails a set of predefined responses is typically invoked. The responses may direct the system to disable some devices or operations.

## Considerations
* Requires the use of system provided security modules
* Secure hash values will need to be computed for firmware""" ;
    ns1:kb-reference ns1:Reference-FirmwareVerificationEclypsium,
        ns1:Reference-PlatformFirmwareResiliencyGuidelines_NIST ;
    ns1:verifies ns1:SystemFirmware ;
    rdfs:subClassOf [ ],
        ns1:FirmwareVerification .

ns1:SystemInitConfigAnalysis a ns1:SystemInitConfigAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Init Config Analysis" ;
    ns1:analyzes ns1:SystemInitConfiguration ;
    ns1:d3fend-id "D3-SICA" ;
    ns1:definition "Analysis of any system process startup configuration." ;
    ns1:kb-reference ns1:Reference-AutorunDifferences_MITRE,
        ns1:Reference-CAR-2020-09-005%3AAppInitDLLs_MITRE,
        ns1:Reference-CAR-2020-11-001%3ABootOrLogonInitializationScripts_MITRE ;
    ns1:synonym "Autorun Analysis",
        "Startup Analysis" ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring ;
    skos:altLabel "System Initialization Configuration Analysis" .

ns1:SystemInitScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Init Script" ;
    ns1:definition "A script used to initialize and configure elements of the system's environment, applications, services, or its operating system." ;
    rdfs:subClassOf ns1:ExecutableScript,
        ns1:SystemConfigurationInitResource,
        ns1:SystemInitConfiguration .

ns1:SystemStartupDirectory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Startup Directory" ;
    ns1:definition "A system startup directory is a directory containing executable files or links to executable files which are run when the system starts." ;
    rdfs:subClassOf ns1:Directory,
        ns1:SystemConfigurationInitResource,
        ns1:SystemInitConfiguration .

ns1:SystemStateImage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System State Image" ;
    ns1:definition "In computing, a system image is a serialized copy of the entire state of a computer system stored in some non-volatile form, such as a binary executable file." ;
    rdfs:isDefinedBy <https://en.wikipedia.org/wiki/System_image> ;
    rdfs:seeAlso <https://dbpedia.org/resource/System_Image> ;
    rdfs:subClassOf ns1:StorageImage ;
    skos:altLabel "System Image" .

ns1:SystemTimeApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Time Application" ;
    ns1:definition "A system time utility is utility software that can get the system time, such as the Unix date command or Windows' Net utility." ;
    rdfs:subClassOf ns1:UtilitySoftware .

ns1:SystemVulnerabilityAssessment a ns1:SystemVulnerabilityAssessment,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Vulnerability Assessment" ;
    ns1:d3fend-id "D3-SYSVA" ;
    ns1:definition "System vulnerability assessment relates all the vulnerabilities of a system's components in the context of their configuration and internal dependencies and can also include assessing risk emerging from the system's design as a whole, not just the sum of individual component vulnerabilities." ;
    ns1:evaluates ns1:DigitalSystem ;
    ns1:identifies ns1:Vulnerability ;
    ns1:kb-reference ns1:Reference-SoftwareVulnerabilityGraphDatabase ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:SystemMapping .

ns1:T1011 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Other Network Medium" ;
    ns1:attack-id "T1011" ;
    ns1:definition "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel." ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1020 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Automated Exfiltration" ;
    ns1:attack-id "T1020" ;
    ns1:definition "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.(Citation: ESET Gamaredon June 2020)" ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1052 a owl:Class ;
    rdfs:label "Exfiltration Over Physical Medium" ;
    ns1:attack-id "T1052" ;
    ns1:definition "Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems." ;
    rdfs:subClassOf ns1:ExfiltrationTechnique .

ns1:T1087.002 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Account" ;
    ns1:attack-id "T1087.002" ;
    ns1:definition "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges." ;
    ns1:enumerates ns1:DomainUserAccount ;
    rdfs:subClassOf [ ],
        ns1:T1087 .

ns1:T1485 a owl:Class ;
    rdfs:label "Data Destruction" ;
    ns1:attack-id "T1485" ;
    ns1:definition "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure." ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1518 a owl:Class ;
    rdfs:label "Software Discovery" ;
    ns1:attack-id "T1518" ;
    ns1:definition "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1554 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compromise Host Software Binary" ;
    ns1:attack-id "T1554" ;
    ns1:definition "Adversaries may modify host software binaries to establish persistent access to systems. Software binaries/executables provide a wide range of system commands or services, programs, and libraries. Common software binaries are SSH clients, FTP clients, email clients, web browsers, and many other user or server applications." ;
    ns1:modifies ns1:ClientApplication ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1599 a owl:Class ;
    rdfs:label "Network Boundary Bridging" ;
    ns1:attack-id "T1599" ;
    ns1:definition "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1614 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Location Discovery" ;
    ns1:accesses ns1:ConfigurationResource ;
    ns1:attack-id "T1614" ;
    ns1:definition "" ;
    rdfs:subClassOf [ ],
        ns1:DiscoveryTechnique .

ns1:TFTPNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "TFTP Network Traffic" ;
    ns1:definition "TFTP Network Traffic is network traffic typically used to automatically transfer configuration or boot files between machines." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:TPMBootIntegrity a ns1:TPMBootIntegrity,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "TPM Boot Integrity" ;
    ns1:d3fend-id "D3-TBI" ;
    ns1:definition "Assuring the integrity of a platform by demonstrating that the boot process starts from a trusted combination of hardware and software and continues until the operating system has fully booted and applications are running.  Sometimes called Static Root of Trust Measurement (STRM)." ;
    ns1:kb-article """## How it works
During the boot process, the BIOS boot block (which with this defense enabled, is the Core Root of Trust for Measurement) measures boot components (firmware, ROM). The TPM hashes those measurements and stores the hashes in Platform Configuration Registers (PCRs).  Upon a subsequent boot, these hashes are provided to a verifier which compares the stored measurements to the new boot measurements. Integrity of the boot components is assured if they match.

Attestation of the secure boot occurs when a verifying entity requests a Quote which is a concatenation of the requested PCR values, hashed and signed by the TPM's unique RSA key.  The TPM signature is trusted because the private key is stored securely in hardware and never leaves the TPM.

## Considerations

* The TPM does not perform the follow-on actions of acting on the PCR value information, it just provides the PCR stored information.
* The current version of TPM is 2.0.; most existing implementations use TPM 1.2.

## Citations
[1] [TPM 2.0 Library](https://trustedcomputinggroup.org/resource/tpm-library-specification/)
[2] [TCG Trusted Attestation Protocol (TAP) Use Cases for TPM Families 1.2 and 2.0 and DICE](https://trustedcomputinggroup.org/wp-content/uploads/TCG_TNC_TAP_Use_Cases_v1r0p35_published.pdf)""" ;
    ns1:kb-reference ns1:Reference-TCGTrustedAttestationProtocolUseCasesForTPMFamilies1.2And2.0AndDICE,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-TPM2.0LibrarySpecification_TrustedComputingGroup,Incorporated>,
        ns1:Reference-TrustedAttestationProtocolUseCases ;
    ns1:synonym "STRM",
        "Static Root of Trust Measurement" ;
    rdfs:subClassOf ns1:PlatformHardening .

ns1:TerminateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Terminate Process" ;
    ns1:definition "On many computer operating systems, a computer process terminates its execution by making an exit system call. More generally, an exit in a multithreading environment means that a thread of execution has stopped running. For resource management, the operating system reclaims resources (memory, files, etc.) that were used by the process. The process is said to be a dead process after it terminates." ;
    ns1:terminates ns1:Process ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Exit_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ThinClientComputer a owl:Class ;
    rdfs:label "Thin Client Computer" ;
    ns1:definition "A thin client is a lightweight computer that has been optimized for establishing a remote connection with a server-based computing environment. The server does most of the work, which can include launching software programs, performing calculations, and storing data. This contrasts with a fat client or a conventional personal computer; the former is also intended for working in a client-server model but has significant local processing power, while the latter aims to perform its function mostly locally. Thin clients are shared computers as the thin client's computing resources are provided by a remote server." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Thin_client> ;
    rdfs:subClassOf ns1:SharedComputer .

ns1:TicketGrantingTicket a owl:Class ;
    rdfs:label "Ticket Granting Ticket" ;
    ns1:definition "In some computer security systems, a Ticket Granting Ticket or Ticket to Get Tickets (TGT) is a small, encrypted identification file with a limited validity period. After authentication, this file is granted to a user for data traffic protection by the key distribution center (KDC) subsystem of authentication services such as Kerberos. The TGT file contains the session key, its expiration date, and the user's IP address, which protects the user from man-in-the-middle attacks. The TGT is used to obtain a service ticket from Ticket Granting Service (TGS). User is granted access to network services only after this service ticket is provided." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Ticket_Granting_Ticket> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Charlie_and_the_Chocolate_Factory> ;
    rdfs:subClassOf ns1:AccessToken ;
    skos:altLabel "Golden Ticket" .

ns1:Token-basedAuthentication a ns1:Token-basedAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Token-based Authentication" ;
    ns1:d3fend-id "D3-TBA" ;
    ns1:definition "Token-based authentication is an authentication protocol where users verify their identity in exchange for a unique access token. Users can then access the website, application, or resource for the life of the token without having to re-enter their credentials." ;
    ns1:kb-article """## How it works

Token-based authentication starts with a user logging into a system, device or application, typically using a password or a security question. An authorization server validates that initial authentication and then issues an access token, which is a small piece of data that lets a client application make a secure call or signal to an API server. Once this initial token-based authentication protocol is completed, the token works like a stamped ticket: The user can continue to seamlessly access the relevant resources, without re-authenticating, for the duration of the token lifecycle. That lifecycle ends when the user logs out or quits an app — and can also be triggered by a set time-out protocol.

## Considerations:

While token-based authentication is undoubtedly a major step above traditional password-based authentication, the token is still considered a “bearer token” — that is, access is granted to whomever holds the token.""" ;
    ns1:kb-reference ns1:Reference-Entrust-What-Is-Token-Based-Authentication ;
    ns1:uses ns1:AccessToken ;
    rdfs:isDefinedBy <https://www.entrust.com/resources/learn/what-is-token-based-authentication> ;
    rdfs:subClassOf [ ],
        ns1:AgentAuthentication .

ns1:TokenBinding a ns1:TokenBinding,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Token Binding" ;
    ns1:d3fend-id "D3-TB" ;
    ns1:definition "Token binding is a security mechanism used to enhance the protection of tokens, such as cookies or OAuth tokens, by binding them to a specific connection." ;
    ns1:kb-article ns1:Reference-RFC8471TheTokenBindingProtocolVersion1.0,
        """## How it works

When issuing a security token to a client that supports Token Binding, a server includes the client's Token Binding ID (or its cryptographic hash) in the token. Later on, when a client presents a security token containing a Token Binding ID, the server verifies that the ID in the token matches the ID of the Token Binding established with the client. In the case of a mismatch, the server rejects the token.

## Considerations

- While industry participation in the standards process is widespread, browser support remains limited.
- In practice, token-binding implementations are tied to Transport Security Layer (TLS).""" ;
    ns1:strengthens ns1:AccessToken ;
    rdfs:seeAlso <http://dbpedia.org/resource/Token_Binding> ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:TraceProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trace Process" ;
    ns1:definition "A trace system call provides a means by which one process (the \"tracer\") may observe and control the execution of another process (the \"tracee\"), and examine and change the tracee's memory and registers. It is primarily used to implement breakpoint debugging and system call tracing." ;
    ns1:monitors ns1:Process ;
    rdfs:seeAlso <https://dbpedia.org/resource/Ptrace>,
        <https://linux.die.net/man/2/ptrace> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall ;
    skos:altLabel "Open Process" .

ns1:TraceThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Trace Thread" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:TransferAgentAuthentication a ns1:TransferAgentAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Transfer Agent Authentication" ;
    ns1:d3fend-id "D3-TAAN" ;
    ns1:definition "Validating that server components of a messaging infrastructure are authorized to send a particular message." ;
    ns1:kb-article """## How it works
Transfer Agent Authentication can be accomplished in different ways for depending on the protocol. In Email, Sender Policy Framework (SPF), Domain Key Identified Email (DKIM) or Domain-based Message Authentication Reporting and Conformance (DMARC) are used to validate sender domain ownership.

### SPF
SPF protocol allows for mail domain owners to specify the mail servers they use when sending email. SPF requires the use of SPF records published in the Domain Name System (DNS). The records record the authorized IPs for email senders. SPF uses the return-path address for domain IP identification. Email that is forwarded may cause the return-path validation problems.
### DKIM
DKIM also uses a record entry in DNS for authentication but does not rely on the simple return-path for validation. A signature header is added to email and encryption is used for security. This adds an additional layer of complexity and requires that DKIM servers be configured identified cryptographic signatures. The additional complexity results in a validation process that can survive complex routing of emails.

### DMARC
DMARC is an email policy and authentication protocol that seeks to ensure that the "From" field of emails is not spoofed. DMARC makes use of both SPF records and DKIM published key validation. DMARC also has a decision policy framework, contained in a DMARC record, for handling of rejected email. The DMARC framework also updates DMARC domains with authentication statues for allowed senders of that domain.

## Considerations
- Additional work is required to ensure that all SPF, DKIM and DMARC records are current and up to date.
- Maintenance of DKIM signing keys is needed.
- Using SPF without DKIM and DMARC verifies the Return-Path domain however does not prevent spoofing of the displayed From: address.
- Parts of an email that are not signed or verified by email authentication methods, such as the message body or the header To: and Subject: fields, can be altered or modified.
- Email message authentication does not replace the need to do email content analysis since executables, attachments, or links or other parts of the email beyond the sender domain are not verified.""" ;
    ns1:kb-reference ns1:Reference-DomainKeysIdentifiedMail-Signatures-IETF,
        ns1:Reference-RFC7208-SenderPolicyFramework-SPF-ForAuthorizingUseOfDomainsInEmail-IETF,
        ns1:Reference-RFC7489-Domain-basedMessageAuthentication-Reporting-AndConformance-DMARC ;
    rdfs:subClassOf ns1:MessageHardening .

ns1:TranslationLookasideBuffer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Translation Lookaside Buffer" ;
    ns1:definition "A translation lookaside buffer (TLB) is a memory cache that is used to reduce the time taken to access a user memory location. It is a part of the chip's memory-management unit (MMU)." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Translation_lookaside_buffer> ;
    rdfs:subClassOf ns1:MemoryManagementUnitComponent .

ns1:TrustStore a owl:Class ;
    rdfs:label "Trust Store" ;
    ns1:definition "Stores public information necessary to determine if another party can be trusted." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public_key_certificate>,
        <https://www.educative.io/edpresso/keystore-vs-truststore> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:URLAnalysis a ns1:URLAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "URL Analysis" ;
    ns1:analyzes ns1:URL ;
    ns1:d3fend-id "D3-UA" ;
    ns1:definition "Determining if a URL is benign or malicious by analyzing the URL or its components." ;
    ns1:kb-article """## How it works

URLs may contain components, for example:

 * scheme
 * userinfo
 * host name
 * port
 * path
 * query
 * fragment

These components are used as features in analysis algorithms.

Contextual information about a URL such as where it is embedded (ex. emails, files, network protocols), header, path, location, and origin information, as well as information about the content returned from the URL request, may be incorporated into an analytic for URL analysis. For example, if a URL indicates a .pdf file but an executable is actually returned, the combination of these two pieces of information indicates suspicious activity.

Additional techniques include:

* Extracting features of a URL such as domain name length, ratio of consecutive consonants, percentage of digits in a domain, and number of vowels. Values for each feature are combined to develop a score for the URL.
* Determining the probability of a character occurring in the URL given the preceding two characters. For example, for google.com, the probability of a 'g' occurring at the beginning of a word, the probability of an 'o' occurring after a "g, the probability of an o" occurring after a 'g' and "o, and so forth. A dictionary or a list of known good domains is used to determine probability. Probabilities are multiplied to develop a score for the URL.

URL analysis may trigger follow-on analytics such as **File Analysis**

## Considerations

* Volume of URLs being analyzed, combined with the speed at which they are analyzed
* Fidelity of analysis technique at detecting brand new URLs versus analyzing URLs of established domains""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForDetectingMaliciousWebsites_EndgameInc,
        ns1:Reference-MethodAndSystemForDetectingRestrictedContentAssociatedWithRetrievedContent_SophosLtd ;
    rdfs:subClassOf [ ],
        ns1:IdentifierAnalysis .

ns1:URLReputationAnalysis a ns1:URLReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "URL Reputation Analysis" ;
    ns1:analyzes ns1:URL ;
    ns1:d3fend-id "D3-URA" ;
    ns1:definition "Analyzing the reputation of a URL." ;
    ns1:kb-reference ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf [ ],
        ns1:IdentifierReputationAnalysis .

ns1:UnloadModule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Unload Module" ;
    ns1:definition "A system call that unloads a driver or extension from the kernel." ;
    ns1:unloads ns1:HardwareDriver,
        ns1:KernelModule ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:SystemCall .

ns1:UnlockAccount a ns1:UnlockAccount,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Unlock Account" ;
    ns1:d3fend-id "D3-ULA" ;
    ns1:definition "Restoring a user account's access to resources by unlocking a locked User Account." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:RestoreUserAccountAccess .

ns1:UserAccountPermissions a ns1:UserAccountPermissions,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Account Permissions" ;
    ns1:d3fend-id "D3-UAP" ;
    ns1:definition "Restricting a user account's access to resources." ;
    ns1:kb-reference ns1:Reference-ConfigureUserAccessControlAndPermissions ;
    ns1:restricts ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:AccessPolicyAdministration .

ns1:UserDataTransferAnalysis a ns1:UserDataTransferAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Data Transfer Analysis" ;
    ns1:analyzes ns1:ResourceAccess ;
    ns1:d3fend-id "D3-UDTA" ;
    ns1:definition "Analyzing the amount of data transferred by a user." ;
    ns1:kb-article """## How it works
Unusual data transfer activity may indicate unauthorized activity. Data transfers can be analyzed by collecting network traffic or application logs.

## Considerations
* There is a potential for false positives from anomalies that are not associated with unauthorized activity.
* Attackers that move low and slow may not differentiate their data transfer behavior enough for an alert to trigger.""" ;
    ns1:kb-reference ns1:Reference-SystemAndMethodThereofForIdentifyingAndRespondingToSecurityIncidentsBasedOnPreemptiveForensics_PaloAltoNetworksInc,
        ns1:Reference-SystemForImplementingThreatDetectionUsingThreatAndRiskAssessmentOfAsset-actorInteractions_VECTRANETWORKSInc ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:UserGeolocationLogonPatternAnalysis a ns1:UserGeolocationLogonPatternAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Geolocation Logon Pattern Analysis" ;
    ns1:analyzes ns1:NetworkTraffic ;
    ns1:d3fend-id "D3-UGLPA" ;
    ns1:definition "Monitoring geolocation data of user logon attempts and comparing it to a baseline user behavior profile to identify anomalies in logon location." ;
    ns1:kb-article """## How it works
Geolocation data for each user logon attempt is collected and used to create a baseline user behavior profile. Current geolocation logon data is then compared against the user behavior profile. Logon activity that deviates from normal patterns and can help in identifying situations that may be indicative of a remote attacker using stolen credentials. For example:

* logons from locations that are different from where a user usually logs in
* logons from a location in which an enterprise has no users located
* logon that is not physically possible given the elapsed time since a logon from another location.

## Considerations
* Potential for false positives from logon anomalies that are not associated with malicious activity.
* Attackers may not differentiate their logon behavior enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-MethodAndApparatusForNetworkFraudDetectionAndRemediationThroughAnalytics_IdaptiveLLC,
        <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-System,Method,AndComputerProgramProductForDetectingAndAssessingSecurityRisksInANetwork_ExabeamInc> ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:UserGroup a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Group" ;
    ns1:contains ns1:User ;
    ns1:definition "User groups are a way to collect user accounts and/or computer accounts into manageable units. Administrators can assign permissions, roles, or access to resources, as well as modify group membership, depending on the operating system." ;
    ns1:synonym "Security Group" ;
    rdfs:subClassOf [ ],
        ns1:AccessControlGroup .

ns1:UserSessionInitConfigAnalysis a ns1:UserSessionInitConfigAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Session Init Config Analysis" ;
    ns1:analyzes ns1:UserInitConfigurationFile ;
    ns1:d3fend-id "D3-USICA" ;
    ns1:definition "Analyzing modifications to user session config files such as .bashrc or .bash_profile." ;
    ns1:kb-reference ns1:Reference-CAR-2020-09-002%3AComponentObjectModelHijacking_MITRE,
        ns1:Reference-CAR-2020-11-011%3ARegistryEditFromScreensaver,
        ns1:Reference-IdentificationAndExtractionOfKeyForensicsIndicatorsOfCompromiseUsingSubject-specificFilesystemViews,
        ns1:Reference-RegistryKeySecurityAndAccessRights ;
    ns1:synonym "User Startup Config Analysis" ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:UtilitySoftware a owl:Class ;
    rdfs:label "Utility Software" ;
    ns1:definition "Utility applications are software applications designed to help to analyze, configure, optimize or maintain a computer. It is used to support the computer infrastructure - in contrast to application software, which is aimed at directly performing tasks that benefit ordinary users. However, utilities often form part of the application systems. For example, a batch job may run user-written code to update a database and may then include a step that runs a utility to back up the database, or a job may run a utility to compress a disk before copying files." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Utility_software> ;
    rdfs:subClassOf ns1:Software ;
    skos:altLabel "Utility Application" .

ns1:VolumeBootRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Volume Boot Record" ;
    ns1:definition "A volume boot record (VBR) (also known as a volume boot sector, a partition boot record or a partition boot sector) is a type of boot sector introduced by the IBM Personal Computer. It may be found on a partitioned data storage device, such as a hard disk, or an unpartitioned device, such as a floppy disk, and contains machine code for bootstrapping programs (usually, but not necessarily, operating systems) stored in other parts of the device. On non-partitioned storage devices, it is the first sector of the device. On partitioned devices, it is the first sector of an individual partition on the device, with the first sector of the entire device being a Master Boot Record (MBR) containing the partition table." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Volume_boot_record> ;
    rdfs:subClassOf ns1:BootRecord .

ns1:WebResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Resource Access" ;
    ns1:definition "Ephemeral digital artifact comprising a request of a network resource and any response from that network resource using a standard web protocol." ;
    rdfs:subClassOf ns1:NetworkResourceAccess .

ns1:WebScriptFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Script File" ;
    ns1:definition "A file containing a script in a web-scripting programming language. Web scripts may be present and run on the client or on the server side." ;
    rdfs:subClassOf ns1:ExecutableScript ;
    skos:altLabel "Web Script" .

ns1:WebServerApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Server Application" ;
    ns1:definition "A web server application (or web app) is an application software that runs on a web server, unlike computer-based software programs that are stored locally on the Operating System (OS) of the device. Web applications are accessed by the user through a web browser with an active internet connection. These applications are programmed using a client-server modeled structure-the user (\"client\") is provided services through an off-site server that is hosted by a third-party. Examples of commonly-used, web applications, include: web-mail, online retail sales, online banking, and online auctions." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_application> ;
    rdfs:subClassOf ns1:ServiceApplication ;
    skos:altLabel "Web App",
        "Web Application" .

ns1:WebSessionActivityAnalysis a ns1:WebSessionActivityAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Session Activity Analysis" ;
    ns1:analyzes ns1:WebResourceAccess ;
    ns1:d3fend-id "D3-WSAA" ;
    ns1:definition "Monitoring changes in user web session behavior by comparing current web session activity to a baseline behavior profile or a catalog of predetermined malicious behavior." ;
    ns1:kb-article """## How it works
User web session data is collected over a period of time to create a user behavior profile. Data collected includes clicks made on a website, average time between clicks, filling out web forms, order in which pages are viewed, and downloading files. Current user web session behavior is then compared against the use behavior profile to identify anomalies and a likelihood that the current user web session is malicious. Current user web session behavior can also be compared to predetermined known malicious behavior profiles that are developed through analysis of malware in run time at a threat research facility.

## Considerations
* Potential for false positives from anomalies that are not associated with malicious activity.
* Attackers may not differentiate their web session activity enough to trigger an alert.""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-SystemAndMethodForDetectionOfAChangeInBehaviorInTheUseOfAWebsiteThroughVectorVelocityAnalysis_SilverTailSystems,
        ns1:Reference-SystemAndMethodForNetworkSecurityIncludingDetectionOfAttacksThroughPartnerWebsites_EMCIPHoldingCoLLC,
        ns1:Reference-SystemAndMethodThereofForIdentifyingAndRespondingToSecurityIncidentsBasedOnPreemptiveForensics_PaloAltoNetworksInc ;
    rdfs:subClassOf [ ],
        ns1:UserBehaviorAnalysis .

ns1:WindowsNTGetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtGetThreadContext" ;
    rdfs:subClassOf ns1:OSAPIGetThreadContext .

ns1:WindowsNtCreateFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreateFile" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:WindowsNtCreateMailslotFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreateMailslotFile" ;
    ns1:definition "Creates a special File Object called Mailslot." ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:WindowsNtCreateNamedPipeFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreateNamedPipeFile" ;
    ns1:definition "Creates Named Pipe File Object." ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:WindowsNtCreatePagingFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreatePagingFile" ;
    ns1:definition "Typically used by Control Panel's \"System\" applet for creating new paged files." ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPICreateFile .

ns1:WindowsNtCreateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreateProcess" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPICreateProcess .

ns1:WindowsNtCreateProcessEx a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreateProcessEx" ;
    rdfs:subClassOf ns1:OSAPICreateProcess .

ns1:WindowsNtCreateThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreateThread" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPICreateThread .

ns1:WindowsNtDeleteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtDeleteFile" ;
    ns1:definition "Deletes the specified file." ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIDeleteFile .

ns1:WindowsNtDuplicateToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtDuplicateToken" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPICopyToken .

ns1:WindowsNtFlushInstructionCache a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtFlushInstructionCache" ;
    rdfs:subClassOf ns1:OSAPIWriteMemory .

ns1:WindowsNtFreeVirtualMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtFreeVirtualMemory" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIFreeMemory .

ns1:WindowsNtOpenFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtOpenFile" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIOpenFile .

ns1:WindowsNtOpenProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtOpenProcess" ;
    ns1:definition "Opens a handle to process obj and sets the access rights to this object." ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntddk/nf-ntddk-ntopenprocess> ;
    rdfs:subClassOf ns1:OSAPITraceProcess .

ns1:WindowsNtOpenThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtOpenThread" ;
    ns1:definition "Opens a handle to a thread object with the access specified." ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows/win32/devnotes/ntopenthread> ;
    rdfs:subClassOf ns1:OSAPITraceThread .

ns1:WindowsNtQuerySystemTime a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtQuerySystemTime" ;
    ns1:definition "Returns current time in Coordinated Universal Time (UTC) 8-bytes format." ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIGetSystemTime .

ns1:WindowsNtReadFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtReadFile" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIReadFile .

ns1:WindowsNtReadFileScatter a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtReadFileScatter" ;
    ns1:definition "Reads specified block from file into multiple buffers. Each buffer must have one page length." ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIReadFile .

ns1:WindowsNtResumeThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtResumeThread" ;
    rdfs:subClassOf ns1:OSAPIResumeThread .

ns1:WindowsNtSetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtSetThreadContext" ;
    rdfs:subClassOf ns1:OSAPISetThreadContext .

ns1:WindowsNtSuspendThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtSuspendThread" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPISuspendThread .

ns1:WindowsNtTerminateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtTerminateProcess" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPITerminateProcess .

ns1:WindowsNtWriteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtWriteFile" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIWriteFile .

ns1:WindowsNtWriteFileGather a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtWriteFileGather" ;
    ns1:definition "Writes specified block of file with data from memory pages." ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIWriteFile .

ns1:WindowsNtWriteVirtualMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtWriteVirtualMemory" ;
    rdfs:subClassOf ns1:OSAPIWriteMemory .

ns1:WindowsRegistry a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Registry" ;
    ns1:contains ns1:WindowsRegistryKey ;
    ns1:definition "The Windows Registry is a hierarchical database that stores low-level settings for the Microsoft Windows operating system and for applications that opt to use the registry. The kernel, device drivers, services, Security Accounts Manager, and user interface can all use the registry. The registry also allows access to counters for profiling system performance." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Windows_Registry>,
        <https://learn.microsoft.com/en-us/troubleshoot/windows-server/performance/windows-registry-advanced-users> ;
    rdfs:subClassOf [ ],
        ns1:SystemConfigurationDatabase .

ns1:WindowsRegistryValue a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Registry Value" ;
    ns1:contained-by ns1:WindowsRegistryKey ;
    ns1:definition "A Windows Registry Value is a data structure consisting of a name, type, data (as a pointer), and the length. Windows Registry Values are always associated with a Windows Registry Key. They store the actual configuration data for the operating system and the programs that run on the system." ;
    rdfs:isDefinedBy <https://learn.microsoft.com/en-us/windows/win32/api/winreg/ns-winreg-valentw> ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows/win32/sysinfo/structure-of-the-registry>,
        <https://schema.ocsf.io/objects/registry_value> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:SystemConfigurationDatabaseRecord .

ns1:WindowsShortcutFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Shortcut File" ;
    ns1:definition "A Microsoft Windows shortcut file." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Shortcut_(computing)#Microsoft_Windows>,
        <http://dbpedia.org/resource/Symbolic_link#Shortcuts> ;
    rdfs:subClassOf ns1:ShortcutFile ;
    skos:altLabel "Shell Link" .

ns1:WirelessAccessPoint a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Wireless Access Point" ;
    ns1:contains ns1:RFTransmitter ;
    ns1:definition "In computer networking, a wireless access point (WAP), or more generally just access point (AP), is a networking hardware device that allows other Wi-Fi devices to connect to a wired network. The AP usually connects to a router (via a wired network) as a standalone device, but it can also be an integral component of the router itself. An AP is differentiated from a hotspot which is a physical location where Wi-Fi access is available." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Wireless_access_point> ;
    rdfs:subClassOf [ ],
        ns1:ComputerNetworkNode ;
    skos:altLabel "WAP" .

ns1:WriteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Write File" ;
    ns1:definition "The write is one of the most basic routines provided by a Unix-like operating system kernel. It writes data from a buffer declared by the user to a given device, such as a file. This is the primary way to output data from a program by directly using a system call. The destination is identified by a numeric code. The data to be written, for instance a piece of text, is defined by a pointer and a size, given in number of bytes. write thus takes three arguments." ;
    ns1:modifies ns1:File ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Write_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:WriteMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Write Memory" ;
    ns1:modifies ns1:MemoryBlock ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:AccessControlGroup a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Control Group" ;
    ns1:definition "A collection of objects that can have access controls placed on them." ;
    ns1:restricted-by ns1:AccessControlList ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/group> ;
    rdfs:subClassOf [ ],
        ns1:AccessControlConfiguration .

ns1:AccessControlList a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Control List" ;
    ns1:definition "A list of permissions attached to an object." ;
    ns1:restricts ns1:UserGroup ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Access-control_list> ;
    rdfs:subClassOf [ ],
        ns1:AccessControlConfiguration .

ns1:AllocateMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Allocate Memory" ;
    ns1:creates ns1:MemoryBlock ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:ArtifactServer a owl:Class ;
    rdfs:label "Artifact Server" ;
    ns1:definition "A digital artifact server provides access services to digital artifacts in a repository.  It provides an associated set of data management, search and access methods allowing application-independent access to the content." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Content_management>,
        <http://dbpedia.org/resource/Content_repository> ;
    rdfs:subClassOf ns1:WebServer .

ns1:AssetVulnerabilityEnumeration a ns1:AssetVulnerabilityEnumeration,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asset Vulnerability Enumeration" ;
    ns1:d3fend-id "D3-AVE" ;
    ns1:definition "Asset vulnerability enumeration enriches inventory items with knowledge identifying their vulnerabilities." ;
    ns1:evaluates ns1:PhysicalArtifact,
        ns1:Software ;
    ns1:identifies ns1:Vulnerability ;
    ns1:kb-reference ns1:Reference-AutomatedComputerVulnerabilityResolutionSystem,
        ns1:Reference-SecurityVulnerabilityInformationAggregation,
        ns1:Reference-SystemAndMethodForVulnerabilityRiskAssessment ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:AssetInventory .

ns1:AsymmetricKey a owl:Class ;
    rdfs:label "Asymmetric Key" ;
    ns1:definition "Asymmetric keys are public and private keys, paired such that asymmetric (public-key) cryptography algorithms can be implemented using them. Public-key cryptography, or asymmetric cryptography, is any cryptographic system that uses pairs of keys: public keys that may be disseminated widely paired with private keys which are known only to the owner. There are two functions that can be achieved: using a public key to authenticate that a message originated with a holder of the paired private key; or encrypting a message with a public key to ensure that only the holder of the paired private key can decrypt it." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:CryptographicKey .

ns1:AuthorizationService a owl:Class ;
    rdfs:label "Authorization Service" ;
    ns1:definition "An authorization service ensures that the user is authorized to have access to a particular resource. Authorization can be done through role-based access control (RBAC) or list-based access control (LBAC)." ;
    rdfs:isDefinedBy <https://www.sciencedirect.com/referencework/9780122272400/encyclopedia-of-information-systems> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authorization> ;
    rdfs:subClassOf ns1:NetworkService,
        ns1:ServiceApplicationProcess .

ns1:BinarySegment a owl:Class ;
    rdfs:label "Binary Segment" ;
    ns1:definition "A binary segment is a partition of binary information within a larger binary object, which arranges a set of binary objects for its purpose.   For example, code, data, heap, and stack segments are segments of the binary information used by a process.  Code and data segments are also found in object files." ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:BrowserExtension a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Browser Extension" ;
    ns1:definition "A browser extension is a plug-in that extends the functionality of a web browser in some way. Some extensions are authored using web technologies such as HTML, JavaScript, and CSS. Browser extensions can change the user interface of the web browser without directly affecting viewable content of a web page; for example, by adding a \"toolbar.\"" ;
    ns1:extends ns1:Browser ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Browser_extension> ;
    rdfs:subClassOf [ ],
        ns1:UserApplication .

ns1:BuildTool a owl:Class ;
    rdfs:label "Build Tool" ;
    ns1:definition "A tool that automates the process of creating a software build and the associated processes including: compiling computer source code into binary code, packaging binary code, and running automated tests." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Build_automation> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    skos:altLabel "Build Automation Tool" .

ns1:CacheMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Processor Cache Memory" ;
    ns1:accessed-by ns1:CentralProcessingUnit ;
    ns1:definition "Cache memory is temporary storage that is more readily available to the processor than the computer's main memory source, located between the main memory and the processor.  It is typically either integrated directly into the CPU chip (level 1 cache) or placed on a separate chip with a bus interconnect with the CPU (level 2 cache)." ;
    ns1:may-contain ns1:ProcessSegment ;
    ns1:modifies ns1:CacheMemory ;
    rdfs:isDefinedBy <https://whatis.techtarget.com/definition/memory> ;
    rdfs:seeAlso <https://dbpedia.org/page/CPU_cache> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:PrimaryStorage .

ns1:CentralProcessingUnit a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Central Processing Unit" ;
    ns1:contains ns1:ProcessorRegister ;
    ns1:definition "A central processing unit (CPU), also called a central processor, main processor or just processor, is the electronic circuitry that executes instructions comprising a computer program. The CPU performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program. This contrasts with external components such as main memory and I/O circuitry, and specialized processors such as graphics" ;
    ns1:may-contain ns1:CacheMemory,
        ns1:MemoryManagementUnit,
        ns1:MemoryProtectionUnit ;
    ns1:synonym "CPU",
        "Central Processor",
        "Main Processor" ;
    rdfs:isDefinedBy <https://en.wikipedia.org/wiki/Central_processing_unit> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:Processor .

ns1:CodeAnalyzer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Code Analyzer" ;
    ns1:definition "Code analyzers automatically analyze the composition or behavior of computer programs regarding a property such as correctness, robustness, security, and safety. Program analysis can be performed without executing the program (static program analysis), during runtime (dynamic program analysis) or in a combination of both." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Program_analysis> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    skos:altLabel "Program Analysis Tool" .

ns1:CommandHistoryLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command History Log" ;
    ns1:definition "A log of commands run in an operating system shell." ;
    rdfs:seeAlso ns1:CommandLineInterface,
        <http://dbpedia.org/resource/Command_history> ;
    rdfs:subClassOf ns1:EventLog .

ns1:CompilerConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Compiler Configuration File" ;
    ns1:definition "A file containing Information used to configure the parameters and initial settings for a compiler." ;
    rdfs:subClassOf ns1:ApplicationConfigurationFile .

ns1:ComputerPlatform a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Computer Platform" ;
    ns1:contains ns1:Firmware,
        ns1:HardwareDevice,
        ns1:OperatingSystem ;
    ns1:definition "Platform includes the hardware and OS. The term computing platform can refer to different abstraction levels, including a certain hardware architecture, an operating system (OS), and runtime libraries. In total it can be said to be the stage on which computer programs can run." ;
    ns1:synonym "Computing Platform" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Computing_platform> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Computer Platform" .

ns1:ConfigurationDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Database" ;
    ns1:contains ns1:ConfigurationDatabaseRecord ;
    rdfs:subClassOf [ ],
        ns1:ConfigurationResource .

ns1:CopyToken a ns1:SystemCall,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Copy Token" ;
    ns1:copies ns1:AccessToken ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:CreateSocket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Socket" ;
    ns1:creates ns1:Pipe ;
    ns1:definition "A create socket system call creates an endpoint for communication and returns a file descriptor that refers to that endpoint." ;
    rdfs:seeAlso <https://www.man7.org/linux/man-pages/man2/socket.2.html> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:CreateThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Thread" ;
    ns1:creates ns1:Thread ;
    ns1:definition "Threads are an execution model that exists independently from a language, as well as a parallel execution model. They enable a program to control multiple different flows of work that overlap in time." ;
    rdfs:seeAlso <http://dbpedia.org/resource/POSIX_Threads>,
        <https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createthread> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:DNSNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Network Traffic" ;
    ns1:definition "DNS network traffic is network traffic related to queries and responses involving the Domain Name System. DNS traffic can involve clients, servers such as relays or resolvers. This includes only network traffic conforming to standard DNS protocol; not custom protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:DatabaseFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database File" ;
    rdfs:subClassOf ns1:File .

ns1:DecoyArtifact a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Artifact" ;
    ns1:definition "A decoy is an imitation digital artifact in any sense of a digital artifact, object, or phenomenon that is intended to deceive a cyber attacker's surveillance devices or mislead their evaluation.  Examples include fake files, accounts, hosts (honeypots), and network segments (honeynets)." ;
    ns1:may-contain ns1:DigitalArtifact ;
    rdfs:seeAlso <http://dbpedia.org/resource/Deception_technology>,
        <https://doi.org/10.1007/978-3-319-25133-2>,
        <https://shield.mitre.org/> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Decoy",
        "Decoy Object",
        "Lure",
        "Trap" .

ns1:DigitalSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Digital System" ;
    ns1:definition "A digital system is a group of interacting or interrelated digital artifacts that act according to a set of rules to form a unified whole. A digital system, surrounded and influenced by its environment, is described by its boundaries, structure and purpose and expressed in its functioning. Systems are the subjects of study of systems theory." ;
    rdfs:seeAlso <http://dbpedia.org/resource/System> ;
    rdfs:subClassOf ns1:DigitalInformationBearer,
        ns1:System .

ns1:DirectPhysicalLinkMapping a ns1:DirectPhysicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Direct Physical Link Mapping" ;
    ns1:d3fend-id "D3-DPLM" ;
    ns1:definition "Direct physical link mapping creates a physical link map by direct observation and recording of the physical network links." ;
    ns1:kb-article """## How it works

Direct Physical Link Mapping involves a manual process where a network engineer or administrator physically observes and documents the physical connections within the network infrastructure.

## Considerations

* Constructing and maintaining physical topologies for extensive networks can be challenging and time-consuming using manual methods. Therefore, where feasible, automated methods like active physical link mapping should be considered as a partial or complete solution for physical link mapping processes.

* In scenarios where active physical link mapping is not an option, physical inspection of networks is necessary to accomplish physical link mapping. This is due to the lack of reliable techniques to accurately map physical links solely through passive network traffic monitoring.""" ;
    ns1:kb-reference ns1:Reference-NetworkMapping ;
    ns1:synonym "Manual Physical Link Mapping" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Transmission_medium> ;
    rdfs:subClassOf ns1:PhysicalLinkMapping .

ns1:DirectoryService a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Directory Service" ;
    ns1:definition "In computing, directory service or name service maps the names of network resources to their respective network addresses. It is a shared information infrastructure for locating, managing, administering and organizing everyday items and network resources, which can include volumes, folders, files, printers, users, groups, devices, telephone numbers and other objects. A directory service is a critical component of a network operating system. A directory server or name server is a server which provides such a service. Each resource on the network is considered an object by the directory server. Information about a particular resource is stored as a collection of attributes associated with that resource or object." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Directory_service> ;
    rdfs:subClassOf ns1:NetworkService .

ns1:EmailRule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Rule" ;
    ns1:definition "A configuration of an email application which is used to apply logical or data processing functions to data processed by the email  application." ;
    rdfs:subClassOf ns1:ApplicationRule .

ns1:EndpointHealthBeacon a ns1:EndpointHealthBeacon,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Endpoint Health Beacon" ;
    ns1:d3fend-id "D3-EHB" ;
    ns1:definition "Monitoring the security status of an endpoint by sending periodic messages with health status, where absence of a response may indicate that the endpoint has been compromised." ;
    ns1:kb-article """## How it works
Endpoints are configured to periodically generate and transmit a secure heartbeat that is delivered on a configured schedule and provides endpoint status information. Status information can include software details (version, configuration, etc), endpoint identification (MAC, IP address, machine ID) or other hardware/software configuration information. Interruption of the heartbeat can signal that the endpoint has been compromised.

## Considerations
* Security of heartbeat messages to ensure message integrity
* Disappearance of the heartbeat could simply mean that the endpoint is powered off or intentionally disconnected from the network. Therefore other criteria may need to be used to accurately detect endpoint compromise.
* Attacker presence on the machine may leave the heartbeat intact.
* An attacker may determine the format of the heartbeat and continue to send it even after the machine is compromised.""" ;
    ns1:kb-reference ns1:Reference-IntrusionDetectionUsingAHeartbeat_SophosLtd ;
    ns1:monitors ns1:NetworkNode ;
    ns1:synonym "Endpoint Health Telemetry" ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:FileContentAnalysis a ns1:FileContentAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Content Analysis" ;
    ns1:d3fend-id "D3-FCOA" ;
    ns1:definition "Employing a pattern matching algorithm to statically analyze the content of files." ;
    ns1:kb-article """## How it works
Analyzing a piece of code without it being executed in a sandbox, virtual machine, or simulator. Patterns or signatures in the file can indicate whati kind of software it is, including whether it is malware.""" ;
    ns1:kb-reference ns1:Reference-CyberVaccineAndPredictiveMalwareDefensiveMethodsAndSystems ;
    rdfs:subClassOf ns1:FileAnalysis .

ns1:FileEviction a ns1:FileEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Eviction" ;
    ns1:d3fend-id "D3-FEV" ;
    ns1:definition "File eviction techniques delete files from system storage." ;
    ns1:deletes ns1:File ;
    ns1:kb-article """## How it works

Adversaries may place files or programs into a computer's file system to perform malicious actions. As part of the eviction process, these files and programs should be removed to prevent further compromise or reinfection. Examples of malicious types of files are malware which is directly harmful and content files with the intent to deceive users (e.g., phishing.)

On Windows systems, antivirus (AV) software should be used to safely and permanently remove malicious files. AV software may first quarantine a suspected malicious file, which is the process of moving a file from its original location to a new location and makes changes so that it cannot be executed. Users can then verify that the file is not benign and then permanently delete it.

## Considerations

When it is determined that a file should be removed for security purposes, the organization--or systems implementing an organization's policies--may determine that the file should not simply be deleted from the enterprise's mission systems, but be quarantined to a secure system by an approved mechanism, so as to allow follow-up investigation by security staff.

On Windows systems, deleting a file in File Explorer does not permanently delete a file - it sends it to the Recycle Bin instead. The Recycle Bin must be emptied, or alternative steps must be performed to remove files completely. Even then, in some cases the data may persist in disk, so data shredder tools may be needed to completely wipe a file. Thus, AV tools are recommended.""" ;
    ns1:kb-reference ns1:Reference-HowDoesAntivirusQuarantineWork-SafetyDetectives ;
    rdfs:subClassOf [ ],
        ns1:ObjectEviction .

ns1:FreeMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Free Memory" ;
    ns1:deletes ns1:MemoryBlock ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:HardLink a owl:Class ;
    rdfs:label "Hard Link" ;
    ns1:definition "In computing, a hard link is a directory entry that associates a name with a file on a file system. All directory-based file systems must have at least one hard link giving the original name for each file. The term \"hard link\" is usually only used in file systems that allow more than one hard link for the same file. Multiple hard links -- that is, multiple directory entries to the same file -- are supported by POSIX-compliant and partially POSIX-compliant operating systems, such as Linux, Android, macOS, and also Windows NT4 and later Windows NT operating systems." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:FileSystemLink .

ns1:HostShutdown a ns1:HostShutdown,
        ns1:ProcessTermination,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host Shutdown" ;
    ns1:d3fend-id "D3-HS" ;
    ns1:definition "Initiating a host's shutdown sequence to terminate all running processes." ;
    ns1:kb-article """## How It Works

Host shutdown can either be initiated in the physical presence of the device using the power functions or remotely using the provided user interface or an installed EDR agent (with the available function). This process may allow for the removal of specific types of malware, such as fileless malware, and can also prevent further damage, for example, if the system is part of a botnet.

## Considerations

- If the attacker has achieved persistence techniques, this technique may not be effective
- Compromised systems may not respond to remote commands to shutdown or reboot, requiring physical intervention.
- Shutting down a system will usually result in the memory losing its state which can be useful in forensic activities so this should be considered when deciding to shutdown.
- Shutting down systems may disrupt access to computer resources for legitimate users.""" ;
    ns1:kb-reference ns1:Reference-NearMemoryInMemoryDetectionofFilelessMalware ;
    ns1:terminates ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:ProcessEviction .

ns1:IPAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "IP Address" ;
    ns1:definition "An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication.An IP address serves two main functions: host or network interface identification and location addressing. Internet Protocol version 4 (IPv4) defines an IP address as a 32-bit number. However, because of the growth of the Internet and the depletion of available IPv4 addresses, a new version of IP (IPv6), using 128 bits for the IP address, was standardized in 1998. IPv6 deployment has been ongoing since the mid-2000s." ;
    ns1:identifies ns1:NetworkNode ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/IP_address> ;
    rdfs:subClassOf [ ],
        ns1:Identifier .

ns1:ImageCodeSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Image Code Segment" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "An image code segment, also known as a text segment or simply as text, is a portion of an object file that contains executable instructions. The term \"segment\" comes from the memory segment, which is a historical approach to memory management that has been succeeded by paging. When a program is stored in an object file, the code segment is a part of this file; when the loader places a program into memory so that it may be executed, various memory regions are allocated (in particular, as pages), corresponding to both the segments in the object files and to segments only needed at run time. For example, the code segment of an object file is loaded into a corresponding code segment in memory." ;
    rdfs:seeAlso ns1:ProcessCodeSegment,
        <http://dbpedia.org/resource/Code_segment> ;
    rdfs:subClassOf [ ],
        ns1:ImageSegment .

ns1:ImageDataSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Image Data Segment" ;
    ns1:definition "An image data segment (often denoted .data) is a portion of an object file that contains initialized static variables, that is, global variables and static local variables. The size of this segment is determined by the size of the values in the program's source code, and does not change at run time. This segmenting of the memory space into discrete blocks with specific tasks carried over into the programming languages of the day and the concept is still widely in use within modern programming languages." ;
    rdfs:seeAlso ns1:ProcessDataSegment,
        <http://dbpedia.org/resource/Data_segment> ;
    rdfs:subClassOf ns1:ImageSegment .

ns1:ImageScannerInputDevice a owl:Class ;
    rdfs:label "Image Scanner Input Device" ;
    ns1:definition "An image scanner -- often abbreviated to just scanner, is a device that optically scans images, printed text, handwriting or an object and converts it to a digital image. Commonly used in offices are variations of the desktop flatbed scanner where the document is placed on a glass window for scanning. Hand-held scanners, where the device is moved by hand, have evolved from text scanning \"wands\" to 3D scanners used for industrial design, reverse engineering, test and measurement, orthotics, gaming and other applications. Mechanically driven scanners that move the document are typically used for large-format documents, where a flatbed design would be impractical." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Image_scanner> ;
    rdfs:subClassOf ns1:VideoInputDevice ;
    skos:altLabel "Scanner" .

ns1:ImageSegment a owl:Class ;
    rdfs:label "Image Segment" ;
    ns1:definition "Image segments are distinct partitions of an object file.  Both data and code segments are examples of image segments." ;
    rdfs:seeAlso ns1:ObjectFile,
        <http://dbpedia.org/resource/Object_file> ;
    rdfs:subClassOf ns1:BinarySegment,
        ns1:FileSection .

ns1:In-memoryPasswordStore a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "In-memory Password Store" ;
    ns1:definition "A password store held in memory." ;
    rdfs:subClassOf ns1:PasswordStore .

ns1:InboundInternetMailTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Internet Mail Traffic" ;
    ns1:definition "Inbound internet mail traffic is network traffic that is: (a) coming from a host outside a given network via an incoming connection to a host inside that same network, and (b) using a standard protocol for email." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:InboundInternetNetworkTraffic,
        ns1:InboundNetworkTraffic,
        ns1:MailNetworkTraffic .

ns1:InboundTrafficFiltering a ns1:InboundTrafficFiltering,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Traffic Filtering" ;
    ns1:d3fend-id "D3-ITF" ;
    ns1:definition "Restricting network traffic originating from untrusted networks destined towards a private host or enclave." ;
    ns1:filters ns1:InboundNetworkTraffic ;
    ns1:kb-article """## How it works
Inbound Traffic, in this context, is network traffic originating from an untrusted network towards a private host or enclave.
For example:

* An untrusted network host connecting to a internal commercial portal, shopping.example.com
* An external mail server connecting to an internal mail server, mail.example.com

Filtering policies are developed by administrators to meet business requirements and limit connectivity. These policies are implemented on edge devices such as firewalls, routers, and intrusion prevention systems. Examples of filters:

* Blocking incoming traffic from spoofed internally facing IP addresses
* Blocking specific ports and services from establishing connections
* Limiting specific IP ranges from connecting to the network
* Dynamic inbound filtering (Hole punching, STUN, NAT-T)

## Considerations
* Business requirements typically drive the development of filtering rulesets
* Protocols using non-standard ports may circumvent filtering technology, which does not detect application protocol based on traffic content

## Implementations
* OpenWRT (Embedded)
* Netfilter (Linux)
* Windows Firewall
* pf(BSD)""" ;
    ns1:kb-reference ns1:Reference-ActiveFirewallSystemAndMethodology_McAfeeLLC,
        ns1:Reference-AutomaticallyGeneratingRulesForConnectionSecurity_Microsoft,
        ns1:Reference-FWTK-FirewallToolkit_,
        ns1:Reference-FirewallForInterentAccess_SecureComputingLLC,
        ns1:Reference-FirewallForProcessingAConnectionlessNetworkPacket_NationalSecurityAgency,
        ns1:Reference-FirewallForProcessingConnection-orientedAndConnectionlessDatagramsOverAConnection-orientedNetwork_NationalSecurityAgency,
        ns1:Reference-FirewallsThatFilterBasedUponProtocolCommands_IntelCorp,
        ns1:Reference-MethodForControllingComputerNetworkSecurity_CheckpointSoftwareTechnologiesLtd,
        ns1:Reference-NetworkFirewallWithProxy_SecureComputingLLC ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficFiltering .

ns1:InitScript a owl:Class ;
    rdfs:label "Init Script" ;
    ns1:definition "An init script (or initialization script) is an executable script that initializes the an application, a process, or a service's state.  Examples include scripts run at boot by Unix or Windows, or those run to initialize a shell." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Init>,
        <https://blog.opstree.com/2020/02/11/shell-initialization-files/> ;
    rdfs:subClassOf ns1:ExecutableScript ;
    skos:altLabel "Initialization Script" .

ns1:IntranetIPCNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet IPC Network Traffic" ;
    ns1:definition "Intranet IPC network traffic is network traffic that does not cross a given network's boundaries and uses a standard inter-process communication (IPC) networking protocol." ;
    ns1:may-contain ns1:File ;
    rdfs:seeAlso <http://dbpedia.org/resource/Inter-process_communication>,
        <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf [ ],
        ns1:IPCNetworkTraffic,
        ns1:IntranetNetworkTraffic .

ns1:KerberosTicketGrantingTicket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kerberos Ticket Granting Ticket" ;
    ns1:definition "A ticket granting ticket issued by a Kerberos system; that is, a ticket that grants a user domain admin access." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Ticket_Granting_Ticket> ;
    rdfs:subClassOf ns1:KerberosTicket,
        ns1:TicketGrantingTicket .

ns1:Kernel a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel" ;
    ns1:contains ns1:KernelProcessTable ;
    ns1:definition "The kernel is a computer program that constitutes the central core of a computer's operating system. It has complete control over everything that occurs in the system. As such, it is the first program loaded on startup, and then manages the remainder of the startup, as well as input/output requests from software, translating them into data processing instructions for the central processing unit. It is also responsible for managing memory, and for managing and communicating with computing peripherals, like printers, speakers, etc. The kernel is a fundamental part of a modern computer's operating system." ;
    ns1:loads ns1:Application ;
    ns1:manages ns1:OperatingSystemProcess,
        ns1:UserProcess ;
    ns1:may-contain ns1:HardwareDriver,
        ns1:KernelModule ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Kernel_(operating_system)> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/kernel> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:SystemSoftware .

ns1:KernelProcessTable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel Process Table" ;
    ns1:definition "A data structure in the kernel which is a table containing all of the information that must be saved when the CPU switches from running one process to another in a multitasking system. It allows the operating system to track all the process's execution status, and contains the For every process managed by the kernel, there is a process control block (PCB) in the process table." ;
    rdfs:isDefinedBy <https://encyclopedia2.thefreedictionary.com/process+table> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Process_(computing)>,
        <https://www.geeksforgeeks.org/process-table-and-process-control-block-pcb/> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:Link a owl:Class ;
    rdfs:label "Link" ;
    rdfs:seeAlso <https://dbpedia.org/resource/Link> ;
    rdfs:subClassOf ns1:D3FENDCore,
        ns1:DigitalInformationBearer .

ns1:LogFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Log File" ;
    ns1:contains ns1:Log ;
    ns1:definition """A log file is a file that records either events that occur in an operating system or other software runs, or messages between different users of a communication software. Logging is the act of keeping a log. In the simplest case, messages are written to a single log file.

A transaction log is a file (i.e., log) of the communications between a system and the users of that system, or a data collection method that automatically captures the type, content, or time of transactions made by a person from a terminal with that system. For Web searching, a transaction log is an electronic record of interactions that have occurred during a searching episode between a Web search engine and users searching for information on that Web search engine.

Many operating systems, software frameworks and programs include a logging system. A widely used logging standard is syslog, defined in Internet Engineering Task Force (IETF) RFC 5424). The syslog standard enables a dedicated, standardized subsystem to generate, filter, record, and analyze log messages. This relieves software developers of having to design and code their own ad hoc logging systems.""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Log_file> ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/06515875-n> ;
    rdfs:subClassOf [ ],
        ns1:File .

ns1:LoginSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Login Session" ;
    ns1:definition "In computing, a login session is the period of activity between a user logging in and logging out of a (multi-user) system. This includes local login sessions, where a user has direct physical access to a computer, as well as domain login sessions, where a user logs into a computer that is part of a network domain." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Login_session> ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows-server/security/windows-authentication/windows-logon-scenarios> ;
    rdfs:subClassOf ns1:Session ;
    skos:altLabel "Logon Session" .

ns1:MemoryWord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Word" ;
    ns1:definition "A memory word is the natural unit of data used by a particular computer processor design; a fixed-size piece of data handled as a unit by the instruction set or the hardware of the processor." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Word_(computer_architecture)> ;
    rdfs:subClassOf ns1:MemoryExtent .

ns1:MessageTransferAgent a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Transfer Agent" ;
    ns1:definition "A message transfer agent or mail transfer agent (MTA) or mail relay is software that transfers electronic mail messages from one computer to another using a client-server application architecture. An MTA implements both the client (sending) and server (receiving) portions of the Simple Mail Transfer Protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Message_transfer_agent> ;
    rdfs:subClassOf ns1:MailService ;
    skos:altLabel "MTA",
        "Mail Transfer Agent" .

ns1:MoveFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Move File" ;
    ns1:definition "A system call to rename or move a file.  Linux's rename() is an example of this kind of system call. Another way of handling it is to call a copy file system call followed by a delete file system call." ;
    ns1:modifies ns1:FileSystemMetadata ;
    rdfs:seeAlso <https://man7.org/linux/man-pages/man2/rename.2.html> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall ;
    skos:altLabel "Rename File" .

ns1:NetworkFileResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network File Resource" ;
    ns1:contains ns1:File ;
    ns1:definition "A computer file resource made available from one host to other hosts on a computer network." ;
    rdfs:subClassOf [ ],
        ns1:NetworkFileShareResource .

ns1:NetworkResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Resource Access" ;
    ns1:accesses ns1:NetworkResource,
        ns1:Resource ;
    ns1:definition "Ephemeral digital artifact comprising a request of a network resource and any response from that network resource." ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ResourceAccess .

ns1:NetworkSensor a owl:Class ;
    rdfs:label "Network Sensor" ;
    rdfs:subClassOf ns1:CyberSensor .

ns1:OSAPIConnectSocket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Connect Socket" ;
    ns1:invokes ns1:ConnectSocket ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPICopyToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Copy Token" ;
    ns1:invokes ns1:CopyToken ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPICreateSocket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Create Socket" ;
    ns1:invokes ns1:CreateSocket ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIExec a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Exec" ;
    ns1:invokes ns1:Exec ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIGetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Get Thread Context" ;
    ns1:invokes ns1:GetThreadContext ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIResumeProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Resume Process" ;
    ns1:invokes ns1:ResumeProcess ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIResumeThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Resume Thread" ;
    ns1:invokes ns1:ResumeThread ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPISetThreadContext a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Set Thread Context" ;
    ns1:invokes ns1:SetThreadContext ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPITraceThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Trace Thread" ;
    ns1:invokes ns1:TraceThread ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OTActuator a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OT Actuator" ;
    ns1:definition "An OT actuator is an industrial-grade actuator optimized for operational technology (OT) environments, such as SCADA or process-control systems. It tolerates harsher conditions, meets stricter safety and reliability standards, and integrates seamlessly with ICS protocols to enable real-time mechanical motion or adjustments in production lines and critical infrastructure." ;
    rdfs:isDefinedBy <https://csrc.nist.gov/glossary/term/actuator> ;
    rdfs:subClassOf ns1:Actuator .

ns1:OTSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OT Sensor" ;
    ns1:definition "An OT Sensor is an industrial-grade sensing device engineered for operational technology (OT) environments (e.g. SCADA, ICS). It measures physical variables—such as pressure, temperature, or flow—under demanding conditions, converting them into reliable signals for real-time monitoring and process control loops." ;
    rdfs:comment "Components of the sensor include a sensing element and may include a power source, display, housing, communication interface or signal processor." ;
    rdfs:isDefinedBy <https://csrc.nist.rip/glossary/term/sensor> ;
    rdfs:seeAlso <https://emerson.com/en-us/catalog/rosemount-sku-3051-coplanar-pressure-transmitter>,
        <https://www.emerson.com/en-us/catalog/rosemount-sku-708-wireless-acoustic-transmitter>,
        <https://www.omega.com/en-us/pressure-measurement/pressure-gauges/c/analog-pressure-gauges>,
        <https://www.vega.com/en-us/products/product-catalog/level/radar> ;
    rdfs:subClassOf ns1:Sensor ;
    skos:example "Level sensors, pressure sensors, temperature sensors, and flow measurement devices." .

ns1:OfficeApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Application" ;
    ns1:definition "An office application is one that is part of an application suite (e.g., Microsoft Office, Open Office)." ;
    rdfs:subClassOf ns1:UserApplication .

ns1:OfficeApplicationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Office Application File" ;
    ns1:definition "A document file in a format associated with an d3f:OfficeApplication." ;
    rdfs:seeAlso ns1:OfficeApplication ;
    rdfs:subClassOf ns1:DocumentFile .

ns1:OperatingSystem a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System" ;
    ns1:contains ns1:Kernel,
        ns1:SystemServiceSoftware ;
    ns1:definition "An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs. All computer programs, excluding firmware, require an operating system to function. Time-sharing operating systems schedule tasks for efficient use of the system and may also include accounting software for cost allocation of processor time, mass storage, printing, and other resources." ;
    ns1:may-contain ns1:OperatingSystemConfigurationComponent ;
    rdfs:seeAlso <http://dbpedia.org/resource/Operating_system>,
        <https://schema.ocsf.io/objects/os> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalInformationBearer .

ns1:OperatingSystemConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Configuration" ;
    ns1:definition "Information used to configure the services, parameters, and initial settings for an operating system." ;
    rdfs:subClassOf ns1:ConfigurationResource .

ns1:OrchestrationServer a owl:Class ;
    rdfs:label "Orchestration Server" ;
    ns1:definition "A d3f:Server which is involved with the orchestration of workloads or the execution of orchestrated workloads." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Orchestration_(computing)> ;
    rdfs:subClassOf ns1:Server .

ns1:OutputDevice a owl:Class ;
    rdfs:label "Output Device" ;
    ns1:definition "An output device is any piece of computer hardware equipment which converts information into human-readable form. It can be text, graphics, tactile, audio, and video. Some of the output devices are Visual Display Units (VDU) i.e. a Monitor, Printer, Graphic Output devices, Plotters, Speakers etc. A new type of Output device is been developed these days, known as Speech synthesizer, a mechanism attached to the computer which produces verbal output sounding almost like human speeches." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Output_device> ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:PasswordRotation a ns1:PasswordRotation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Rotation" ;
    ns1:d3fend-id "D3-PR" ;
    ns1:definition "Password rotation is a security policy that mandates the periodic change of user account passwords to mitigate the risk of unauthorized access due to compromised credentials." ;
    ns1:kb-article """## How it works

Users may be requested to change their passwords on a regular schedule. Management servers with enterprise policies for account management provide the ability to change or reset passwords for accounts.

## Considerations

Requiring users to change their passwords frequently can result in insecure password practices by the user. The latest update of NIST SP 800-63B, Digital Identity Guidelines, recommends requiring password reset only when a known compromise has occurred, or every 365 days, rather than every 60 or 90 days.""" ;
    ns1:kb-reference ns1:Reference-PasswordandKeyRotation-SSH ;
    ns1:regenerates ns1:Password ;
    rdfs:seeAlso <https://pages.nist.gov/800-63-3/sp800-63-3.html>,
        <https://www.auditboard.com/blog/nist-password-guidelines/> ;
    rdfs:subClassOf [ ],
        ns1:CredentialRotation .

ns1:PointerDereferencingFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pointer Dereferencing Function" ;
    ns1:addresses ns1:MemoryBlock,
        ns1:Pointer ;
    ns1:definition "A function which has an operation which dereferences a pointer." ;
    rdfs:comment "Note, this is not the actual code which performs the dereferencing operation internal to an application runtime." ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Subroutine .

ns1:PointerValidation a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pointer Validation" ;
    ns1:d3fend-id "D3-PV" ;
    ns1:definition "Ensuring that a pointer variable has the required properties for use." ;
    ns1:kb-reference ns1:Reference-PointerValidationFunction_SEI ;
    rdfs:subClassOf ns1:SourceCodeHardening .

ns1:ProcessImage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Image" ;
    ns1:contains ns1:ProcessSegment ;
    ns1:definition "A process image is a copy of a given process's state at a given point in time. It is often used to create persistence within an otherwise volatile system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/System_image#Process_images> ;
    rdfs:subClassOf [ ],
        ns1:ComputingImage .

ns1:ProcessTermination a ns1:ProcessTermination,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Termination" ;
    ns1:d3fend-id "D3-PT" ;
    ns1:definition "Terminating a running application process on a computer system." ;
    ns1:kb-article """## How it works

Processes are managed by the operating system kernel.  Different operating system kernels manage the creation and termination of processes in a different manner, and expose this functionality via the kernel API.

A running process might be terminated to mitigate its immediate effects if it is exhibiting anomalous, unauthorized, or malicious behavior; such as after detecting anomalous behavior via <a href="https://d3fend.mitre.org/technique/d3f:AdministrativeNetworkActivityAnalysis" rdf:about="https://d3fend.mitre.org/ontologies/d3fend.owl#AdministrativeNetworkActivityAnalysis">Administrative Network Activity Analysis</a>, after a failed check from <a href="https://d3fend.mitre.org/technique/d3f:StackFrameCanaryVerification" rdf:about="https://d3fend.mitre.org/ontologies/d3fend.owl#StackFrameCanaryValidation">Stack Frame Canary Validation</a>, or after <a href="https://d3fend.mitre.org/technique/d3f:SystemCallAnalysis" rdf:about="https://d3fend.mitre.org/ontologies/d3fend.owl#SystemCallAnalysis">System Call Analysis</a> finds an attempt to execute an unauthorized system call.

### Proprietary technology
Security software might use proprietary technology to terminate processes, instead of the system-provided functions.    Further research may provide specific detail on such methods used.

### System-provided functions

#### Windows tools
In Windows, `ExitProcess()` is used to send a signal to a process to request it to exit, and `TerminateProcess()` is used to force a process to exit.

The `taskkill` executable available in the cmd shell is used to kill a process, with the `/F` switch forcing termination as with `TerminateProcess()`.  In PowerShell, `Stop-Process` is used, which is aliased by default to `spps` and `kill`.  Processes started in the Windows Subsystem for Linux (WSL) environment may be terminated there with the `kill` command.

In some cases, existing drivers can also be leveraged to kill processes.

#### Unix/Linux tools
In Unix-like systems, all process termination requests are handled using signals.  The `kill` function takes the Process ID and signal to send, and is accessible with the `kill` command.  Some shells have a `kill` builtin function which is separate than the `kill` binary, which can also kill background jobs in the shell and additionally perform the function faster, and can run from an existing instance of the shell if the process table is full.  The signal SIGTERM specifies that the process to terminate may invoke a handler that it has defined instead of terminating, and the signal SIGKILL forces immediate termination.

The related command `xkill` terminates the connection of a program to the X window server, after which the user process may decide to terminate itself; however, termination is not guaranteed as the process, which could be on the same or different host, could then run in a terminal or reconnect to a different X server on any host.  Emacs is such a program that would not terminate itself after its connection to the X server is terminated.

## Considerations

### Persistence Mechanisms
Terminating a malicious process is not enough to stop an adversary that has already gained persistence in the host via any initial access mechanism, including through that process or another access mechanism.

### Terminating Multiple Processes
On most operating systems, process termination operations typically occur independently of each other, without functionality provided to atomically terminate multiple processes.  If there are multiple malicious processes which can make system calls to spawn other processes once one of them is closed, user session termination or system restart might be required.

### Process Access Permissions
Users must have permissions to kill the process.  On Unix-like systems, either root or the process user can kill the process.  On Windows systems, process permissions are managed separately via process security tokens.

### Process Resource Handles

#### Terminating Processes with Open Resource Handles

Processes may have open resource handles, which could leave those resources in an undesired state if the process is forced to terminate.  As such, most operating systems provide a means to send a signal to a process to inform it to gracefully terminate, and on most of these operating systems, it is the typical first step used to terminate a process.

#### Signal Traps
As the process may have open resource handles, commonly-used methods of process termination involve sending a signal to the process to terminate.
On Windows, the `ExitProcess()` function is used for this purpose.  Process instructions, as well as a third-party DLL can also cause the process to exit.
On Linux, the process is sent a signal on the occurrence of various events: when it loses the console, `SIGHUP`; when termination is requested, `SIGTERM`.  The processor then redirects execution to the function registered to handle the signal.

Therefore, sending a signal to the process to ask it to terminate may not always work.

##### Avoiding Signal Traps

On Unix-like systems, sending the `SIGKILL` signal for a process does not send a message to the process or invoke an implementation-defined handler; instead, it immediately does not allow the process to execute any further processor instructions.   On Windows `TerminateProcess()` instead of `ExitProcess()` performs the equivalent.

#### Hang on System Call Execution

Even still, as the operating system kernel manages the processes, kernel code may block process signals, including those which cannot be trapped, and does in certain circumstances.  Signals are blocked and queued for the duration of the system call when interrupting the system call would result in a kernel invariant being violated, such as when an action results in a malformed data structure; this blocking is common for filesystem requests.  Such system calls can hang when a filesystem has gone offline, leading to a long-term uninterruptible sleep, represented in POSIX command `ps` output as D state.
Any malicious system calls or system call handlers are issues of a much larger problem (a kernel-level rootkit) and the system should be redeployed entirely or restored from a backup known to be prior to compromise, and other systems accessible directly and indirectly from that one should also be examined.

A process that is truly hung in a system call may prevent the system from shutting down and leave it in an unresponsive state; a hard power off is required.

To speed up the action of terminating a process in uninterruptible sleep, the process resource accesses (handles) could be analyzed.

On Linux, [`sync` followed by `echo 3 > /proc/sys/vm/drop_caches`](https://www.kernel.org/doc/Documentation/sysctl/vm.txt) is a safe way to free up some inactive resource handles.


#### Kernel Processes and Threads
The kernel may not allow kernel processes, which are created via methods other than user-space processes, to be terminated.

#### Other Code using the Process

Terminating a shared library can lead to unexpected errors; such shared libraries have their own mechanisms for termination.

On Windows, a DLL is unloaded when the reference count of the library reaches 0.

#### Zombie process

After a process has been terminated, it may still take up an entry in the operating system process table until another event occurs.

##### Windows
In Windows, a process object is deleted when the last handle to the process is closed.

##### Linux
In Linux, a process is removed from the process table when it is reaped by its parent process.  If the parent terminates, historically the parent has been changed to pid 1; however, in the Linux kernel 3.4 and above, processes can set a different process as the subreaper using the `prctl()` system call.

Zombie processes and hung processes could be resolved with a restart of the system.

#### System restart
Finally a system restart might be required to kill a process.
Systems which are only accessible via a remote in-band connection may become inaccessible if a process termination operation that is necessary for reboot does not complete.

### Subsystems
Processes that are started in a subsystem might not be fully terminated if they are terminated using the command for that subsystem.  For example, in the Windows Subsystem for Linux (WSL), processes started and terminated via WSL calls such as with the `kill` command in Bash may still have an entry in the Windows process table.""" ;
    ns1:kb-reference ns1:Reference-InstantProcessTerminationToolToRecoverControlOfAnInformationHandlingSystem_DellProductsLP,
        ns1:Reference-MalwareDetectionUsingLocalComputationalModels_CrowdstrikeInc ;
    ns1:terminates ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:ProcessEviction .

ns1:Processor a owl:Class ;
    rdfs:label "Processor" ;
    ns1:synonym "Computer Processor" ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:ProcessorComponent a owl:Class ;
    rdfs:label "Processor Component" ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:ProxyServer a owl:Class ;
    rdfs:label "Proxy Server" ;
    ns1:definition "In computer networking, a proxy server is a server application or appliance that acts as an intermediary for requests from clients seeking resources from servers that provide those resources. A proxy server thus functions on behalf of the client when requesting service, potentially masking the true origin of the request to the resource server." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Proxy_server> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/network_proxy> ;
    rdfs:subClassOf ns1:ComputerNetworkNode,
        ns1:Server .

ns1:PublicKey a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Public Key" ;
    ns1:definition "A public key can be disseminated widely as part of an asymmetric cryptography framework and be used to encrypt messages to send to the public key's owner or to authenticate signed messages from that sender." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:AsymmetricKey .

ns1:RDPSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RDP Session" ;
    ns1:definition "A Remote Desktop Protocol (RDP) session is a session established using the RDP protocol to access Remove Desktop Services (RDS)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Remote_Desktop_Protocol>,
        <http://dbpedia.org/resource/Remote_Desktop_Services> ;
    rdfs:subClassOf ns1:RemoteSession ;
    skos:altLabel "Remote Desktop Session",
        "Terminal Services" .

ns1:ReadFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Read File" ;
    ns1:definition "A program that needs to access data from a file stored in a file system uses the read system call. The file is identified by a file descriptor that is normally obtained from a previous call to open. This system call reads in data in bytes, the number of which is specified by the caller, from the file and stores then into a buffer supplied by the calling process." ;
    ns1:reads ns1:File ;
    rdfs:seeAlso <http://dbpedia.org/resource/Read_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:RemoteCommand a owl:Class ;
    rdfs:label "Remote Command" ;
    ns1:definition "A remote command is a command sent from one computer to another to be executed on the remote computer.  One example of this, is through a command-line interface (CLI) like using Invoke-Command from PowerShell or a command sent through an ssh session. This class generalizes to all means of sending a command through an established protocol to control capabilities on a remote computer." ;
    rdfs:subClassOf ns1:Command .

ns1:ResourceFork a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Fork" ;
    ns1:definition "The resource fork is a fork or section of a file on Apple's classic Mac OS operating system, which was also carried over to the modern macOS for compatibility, used to store structured data along with the unstructured data stored within the data fork." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Resource_fork> ;
    rdfs:subClassOf ns1:FileSection .

ns1:RestoreFile a ns1:RestoreFile,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore File" ;
    ns1:d3fend-id "D3-RF" ;
    ns1:definition "Restoring a file for an entity to access." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:File ;
    rdfs:subClassOf [ ],
        ns1:RestoreObject .

ns1:RestoreUserAccountAccess a ns1:RestoreUserAccountAccess,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore User Account Access" ;
    ns1:d3fend-id "D3-RUAA" ;
    ns1:definition "Restoring a user account's access to resources." ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    ns1:restores ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:RestoreAccess .

ns1:SSHSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "SSH Session" ;
    ns1:definition "A Secure Shell Protocol (SSH) session is a session over a secure channel established using SSH to connect a client to a server and establish the remote session." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Secure_Shell_Protocol> ;
    rdfs:subClassOf ns1:RemoteSession .

ns1:SessionCookie a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Session Cookie" ;
    ns1:definition "A session cookie, also known as an in-memory cookie, transient cookie or non-persistent cookie, exists only in temporary memory while the user navigates the website. Web browsers normally delete session cookies when the user closes the browser. Unlike other cookies, session cookies do not have an expiration date assigned to them, which is how the browser knows to treat them as session cookies." ;
    rdfs:isDefinedBy <https://schema.ocsf.io/objects/http_cookie> ;
    rdfs:seeAlso <http://dbpedia.org/resource/HTTP_cookie>,
        <https://schema.ocsf.io/objects/http_cookie> ;
    rdfs:subClassOf ns1:Credential ;
    skos:altLabel "In-memory Cookie",
        "Non-persistent Cookie",
        "Transient Cookie",
        "Web Session Cookie" .

ns1:SessionToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Session Token" ;
    ns1:definition "In computer science, a session identifier, session ID or session token is a piece of data that is used in network communications (often over HTTPS) to identify a session, a series of related message exchanges." ;
    ns1:kb-article """## How it works

Session identifiers become necessary in cases where the communications infrastructure uses a stateless protocol such as HTTP. For example, a buyer who visits a seller's website wants to collect a number of articles in a virtual shopping cart and then finalize the shopping by going to the site's checkout page. This typically involves an ongoing communication where several webpages are requested by the client and sent back to them by the server. In such a situation, it is vital to keep track of the current state of the shopper's cart, and a session ID is one way to achieve that goal.""" ;
    ns1:synonym "Session ID",
        "Session Identifier",
        "Session Token" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Session_ID> ;
    rdfs:subClassOf ns1:AccessToken .

ns1:SlowSymbolicLink a owl:Class ;
    rdfs:label "Slow Symbolic Link" ;
    ns1:definition "A slow symbolic link is any symbolic link on a Unix filesystem that is not a fast symbolic link; slow symlink is thus retroactively termed from fast symlink.  Slow symbolic links stored the symbolic link information as data in regular files." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Symbolic_link#Storage_of_symbolic_links> ;
    rdfs:subClassOf ns1:SymbolicLink,
        ns1:UnixLink ;
    skos:altLabel "Slow Symlink" .

ns1:SoftwarePackagingTool a owl:Class ;
    rdfs:label "Software Packaging Tool" ;
    ns1:definition "A tool that automates the process of packaging either or both binary code  and source code for use on one or more target platforms." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Build_automation>,
        <http://dbpedia.org/resource/Package_manager> ;
    rdfs:subClassOf ns1:BuildTool .

ns1:SystemCallAnalysis a ns1:SystemCallAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Call Analysis" ;
    ns1:analyzes ns1:SystemCall ;
    ns1:d3fend-id "D3-SCA" ;
    ns1:definition "Analyzing system calls to determine whether a process is exhibiting unauthorized behavior." ;
    ns1:kb-article """## How it works

System calls are APIs between a user application and the operating system [1].

By analyzing a process's use of these APIs, it is, in some cases, possible to ascertain whether a program is exhibiting unauthorized behavior, including trying to escalate its privileges.

### Gathering System Calls
A common method to capture system calls is to use kernel APIs to hook [2] a process's system call invocations.

The Linux system call `ptrace` tracks other system calls in a process and allows their alteration; this is made use of by GDB.  `strace` utilizes `ptrace` and will print to stdout each system call invoked. Other applications record this data in local or remote databases.

The log entry for each system call, which may reference additional information such as the date and time, and the process tree for the process which made the system call, is relayed, in real time or post-facto, to an analysis module which consults a catalog or model to determine whether the distribution matches a known-good or known-bad pattern.


### Analysis

System calls are analyzed with a variety of methods. Some analytics look for specific sequences of instructions, others may apply statistical methods to identify abnormal behavior. Sequences of instructions can be abstracted into conceptually higher order user activities, for example:

* An attacker executes many system calls in a short period of time, with several sequences which could be used to escalate privileges.
* Getting the contents from a URL, writing to a new file, and then executing the same file.
* A ransomware program which either uses a loop or creates many threads to: read a specified file, encrypt its contents, create an output file with a similar name to the original file, and delete the unencrypted original.

## Considerations

* Duplicative or extraneous system calls may be added to malware to defeat analytics.
* Malware could replace API hooking instructions to allow system calls to be made without being monitored.
* A model built from a training set of system calls and related data may not be updated fast enough to detect new threats.


[1] [Syscalls](http://man7.org/linux/man-pages/man2/syscalls.2.html)

[2] [Hooking](http://dbpedia.org/resource/Hooking)""" ;
    ns1:kb-reference ns1:Reference-CAR-2020-05-001%3AMiniDumpOfLSASS_MITRE,
        ns1:Reference-CAR-2021-05-011%3ACreateRemoteThreadIntoLSASS_MITRE,
        ns1:Reference-CredentialDumpingViaWindowsTaskManager_MITRE,
        ns1:Reference-DLLInjectionViaLoadLibrary_MITRE,
        ns1:Reference-DeterministicMethodForDetectingAndBlockingOfExploitsOnInterpretedCode_K2CyberSecurityInc,
        ns1:Reference-Hardware-assistedSystemAndMethodForDetectingAndAnalyzingSystemCallsMadeToAnOpertingSystemKernel_EndgameInc,
        ns1:Reference-MalwareDetectionInEventLoops_CrowdstrikeInc,
        ns1:Reference-PostSandboxMethodsAndSystemsForDetectingAndBlockingZero-dayExploitsViaApiCallValidation_K2CyberSecurityInc ;
    rdfs:subClassOf [ ],
        ns1:ProcessAnalysis .

ns1:SystemCallFiltering a ns1:SystemCallFiltering,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Call Filtering" ;
    ns1:d3fend-id "D3-SCF" ;
    ns1:definition "Controlling access to local computer system resources with kernel-level capabilities." ;
    ns1:filters ns1:SystemCall ;
    ns1:isolates ns1:Process ;
    ns1:kb-article """## How it works
System call filtering uses a mandatory access control paradigm (that is, a non-discretionary access control) system because the rules and polices that determine access is determined by a security control authority and not distributed to local users. Access determinations are based on designed access control polices and are not based on local resource owner determinations.

Access is typically granted by defining sets of subjects and sets of objects. Subjects are the entities requesting access and objects are the resources that subjects are trying to access. Rules and policies are defined that associate subjects and object permissions and access controls.

### Common implementations
#### Security label access control
A fine-grained form control is to apply security labels to individual resources, including processes, and the access control decisions are against a particular resource and a given user attempting to gain access. This type of control requires that the file system has built-in support for security labels.

Access controls are typically implemented through the use of label identifiers for every file system object. Identifier labels are applied to resources and users are assigned a similar access identifier. Users attempting to access a resource will result in the operating system performing an access control check. The access control check will compare the assigned user's credentials to that of the resource or object they are attempting to access.

A security context is associated with resources and is used to determine assess. Typical basic access control elements include users, roles and types and together they form a security context which is the basis for the security labels.

This type of access control is what is employed in SELinux [2]. This form of security kernel access control is considered the most flexible implementation, but it also is the most complex to deploy across the enterprise. Where multiple virtual machines (VM) are run together this type of access control is typically employed to ensure true isolation of processes and VMs.

#### File path level controls
A less fine-grained form of mandatory access control is to apply security labels that allow for access control at the file path level.  Access control is filesystem agnostic and no relabeling of resources is required. Pathname access control usually seems more natural for implementation and corresponding access audits.

This type of system call filtering is what is employed in AppArmor [3]. AppArmor was developed to provide a simpler alternative method with much less management overhead. A simple access policy is maintained that defines path resource access rules. Access control attributes are typically associated with programs instead of users.


## Considerations
Some implementations of security label-based control contain complex rules set that are hard to verify and complex to maintain over time.

Initial planning of access model and continuous monitoring of the available users, resources and object is necessary.

## Implementations

 * Linux C-Groups, and policy engines like SELinux and AppArmor
 * Windows Mandatory Integrity Control introduced in Windows Vista


### Citations
1. [SELinux](https://selinuxproject.org/)
2. [AppArmor](https://www.apparmor.net/)""" ;
    ns1:kb-reference ns1:Reference-AnalysisOfTheWindowsVistaSecurityModel_SymantecCorporation,
        ns1:Reference-ArchitectureOfTransparentNetworkSecurityForApplicationContainers_NeuvectorInc,
        ns1:Reference-OverviewOfTheSeccompSandbox ;
    ns1:synonym "System Call Control" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:AccessMediation ;
    skos:altLabel "Mandatory Access Control",
        "System Call Mediation" .

ns1:SystemConfigSystemCall a owl:Class ;
    rdfs:label "System Config System Call" ;
    rdfs:subClassOf ns1:SystemCall .

ns1:SystemFileAnalysis a ns1:SystemFileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System File Analysis" ;
    ns1:analyzes ns1:OperatingSystemFile ;
    ns1:d3fend-id "D3-SFA" ;
    ns1:definition "Monitoring system files such as authentication databases, configuration files, system logs, and system executables for modification or tampering." ;
    ns1:kb-article """## How it works
This technique ensures the integrity of system owned file resources. System files can impact the behavior below the user level.


## Considerations
* Need to manage the size of log file analysis.
* False positives are a concern with this technique and filtering will need to be given additional thought.
* A baseline or snapshot of file checksums should be established for future comparison.""" ;
    ns1:kb-reference ns1:Reference-AccessPermissionModification_MITRE,
        ns1:Reference-AutorunDifferences_MITRE,
        ns1:Reference-UserActivityFromClearingEventLogs_MITRE ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemMonitoring .

ns1:SystemFirewallConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firewall Configuration" ;
    ns1:configures ns1:Host-basedFirewall ;
    ns1:definition "The configuration for a individual host operating system's firewall." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Firewall_(computing)> ;
    rdfs:subClassOf [ ],
        ns1:OperatingSystemConfigurationComponent .

ns1:SystemPasswordDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Password Database" ;
    ns1:definition "A password database used by a system service or process to authenticate users (e.g., Security Account Manager)" ;
    rdfs:subClassOf ns1:PasswordDatabase .

ns1:SystemSoftware a owl:Class ;
    rdfs:label "System Software" ;
    ns1:definition "Computer software which enables operating system or platform functionality." ;
    rdfs:subClassOf ns1:Software .

ns1:T1016 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Network Configuration Discovery" ;
    ns1:attack-id "T1016" ;
    ns1:definition "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103)." ;
    ns1:may-execute ns1:ExecutableScript ;
    ns1:may-invoke ns1:CreateProcess,
        ns1:GetSystemNetworkConfigValue ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DiscoveryTechnique .

ns1:T1074 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Staged" ;
    ns1:attack-id "T1074" ;
    ns1:definition "Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)" ;
    ns1:reads ns1:Resource ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1127 a owl:Class ;
    rdfs:label "Trusted Developer Utilities Proxy Execution" ;
    ns1:attack-id "T1127" ;
    ns1:definition "Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.(Citation: engima0x3 DNX Bypass)(Citation: engima0x3 RCSI Bypass)(Citation: Exploit Monday WinDbg)(Citation: LOLBAS Tracker) These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1132 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Encoding" ;
    ns1:attack-id "T1132" ;
    ns1:definition "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1205 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Traffic Signaling" ;
    ns1:attack-id "T1205" ;
    ns1:definition "Adversaries use traffic signaling techniques, such as sending specific network sequences or magic packets, to covertly trigger actions like opening ports, activating backdoors, or installing filters, facilitating command and control, persistence, and defense evasion." ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique,
        ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1216 a owl:Class ;
    rdfs:label "System Script Proxy Execution" ;
    ns1:attack-id "T1216" ;
    ns1:definition "Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.(Citation: LOLBAS Project) This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.(Citation: GitHub Ultimate AppLocker Bypass List)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:T1222 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File and Directory Permissions Modification" ;
    ns1:attack-id "T1222" ;
    ns1:definition "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)." ;
    ns1:modifies ns1:AccessControlConfiguration ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique .

ns1:T1480 a owl:Class ;
    rdfs:label "Execution Guardrails" ;
    ns1:attack-id "T1480" ;
    ns1:definition "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1484 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain or Tenant Policy Modification" ;
    ns1:attack-id "T1484" ;
    ns1:definition "Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation." ;
    ns1:modifies ns1:GroupPolicy ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1491 a owl:Class ;
    rdfs:label "Defacement" ;
    ns1:attack-id "T1491" ;
    ns1:definition "Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages." ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1561 a owl:Class ;
    rdfs:label "Disk Wipe" ;
    ns1:attack-id "T1561" ;
    ns1:definition "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted." ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1563 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Service Session Hijacking" ;
    ns1:accesses ns1:RemoteSession ;
    ns1:attack-id "T1563" ;
    ns1:definition "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service." ;
    ns1:produces ns1:AdministrativeNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:LateralMovementTechnique .

ns1:T1569 a owl:Class ;
    rdfs:label "System Services" ;
    ns1:attack-id "T1569" ;
    ns1:definition "This technique has been deprecated." ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1573 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Encrypted Channel" ;
    ns1:attack-id "T1573" ;
    ns1:definition "Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files." ;
    ns1:produces ns1:OutboundInternetEncryptedTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique ;
    skos:altLabel "Custom Command and Control Protocol",
        "Custom Cryptographic Protocol",
        "Multilayer Encryption" .

ns1:T1597 a owl:Class ;
    rdfs:label "Search Closed Sources" ;
    ns1:attack-id "T1597" ;
    ns1:definition "Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data.(Citation: D3Secutrity CTI Feeds) Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.(Citation: ZDNET Selling Data)" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1600 a owl:Class ;
    rdfs:label "Weaken Encryption" ;
    ns1:attack-id "T1600" ;
    ns1:definition "Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1601 a owl:Class ;
    rdfs:label "Modify System Image" ;
    ns1:attack-id "T1601" ;
    ns1:definition "Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1602 a owl:Class ;
    rdfs:label "Data from Configuration Repository" ;
    ns1:attack-id "T1602" ;
    ns1:definition "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices." ;
    rdfs:subClassOf ns1:CollectionTechnique .

ns1:T1606 a owl:Class ;
    rdfs:label "Forge Web Credentials" ;
    ns1:attack-id "T1606" ;
    ns1:definition "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access." ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:TestExecutionTool a owl:Class ;
    rdfs:label "Test Execution Tool" ;
    ns1:definition "A test execution tool is a type of software used to test software, hardware or complete systems.  Synonyms of test execution tool include test execution engine, test executive, test manager, test sequencer.  Two common forms in which a test execution engine may appear are as a: (a) module of a test software suite (test bench) or an integrated development environment, or (b) stand-alone application software." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Test_execution_engine> ;
    rdfs:subClassOf ns1:DeveloperApplication ;
    skos:altLabel "Test Execution Engine",
        "Test Executive",
        "Test Manager" .

ns1:User a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User" ;
    ns1:definition "A user is a person [or agent] who uses a computer or network service. Users generally use a system or a software product without the technical expertise required to fully understand it. Power users use advanced features of programs, though they are not necessarily capable of computer programming and system administration. A user often has a user account and is identified to the system by a username (or user name). Other terms for username include login name, screenname (or screen name), nickname (or nick) and handle, which is derived from the identical Citizen's Band radio term. Some software products provide services to other systems and have no direct end users." ;
    ns1:has-account ns1:UserAccount ;
    ns1:restricted-by ns1:AccessControlList ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_(computing)> ;
    rdfs:seeAlso ns1:UserAccount,
        <http://wordnet-rdf.princeton.edu/id/10761247-n> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Agent,
        ns1:DigitalInformationBearer .

ns1:UserAction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Action" ;
    ns1:definition "An action performed by a user. Executing commands, granting permissions, and accessing resources are examples of user actions." ;
    ns1:records ns1:Action ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:UserInterface a owl:Class ;
    rdfs:label "User Interface" ;
    ns1:definition "The user interface (UI), in the industrial design field of human-machine interaction, is the space where interactions between humans and machines occur. The goal of this interaction is to allow effective operation and control of the machine from the human end, whilst the machine simultaneously feeds back information that aids the operators' decision-making process. Examples of this broad concept of user interfaces include the interactive aspects of computer operating systems, hand tools, heavy machinery operator controls, and process controls. The design considerations applicable when creating user interfaces are related to or involve such disciplines as ergonomics and psychology." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_interface> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "UI" .

ns1:UserProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Process" ;
    ns1:definition "A user process is a process running to perform functions in the name of on particular user and user account, such as run an application or application service serving any number users.  This is in contrast to a system process, which executes software to fulfill operating system functions." ;
    rdfs:subClassOf ns1:Process .

ns1:UserToUserMessage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User to User Message" ;
    ns1:definition "Personal message, private message (PM), direct message (DM), or personal chat (PC) is a private form of messaging between different members on a given platform. It is only seen and accessible by the users participating in the message." ;
    ns1:has-recipient ns1:UserAccount ;
    ns1:has-sender ns1:UserAccount ;
    ns1:may-contain ns1:Email ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Personal_message> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Personal Message",
        "Private Message" .

ns1:VideoInputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Video Input Device" ;
    ns1:definition "Video input devices are used to digitize images or video from the outside world into the computer. The information can be stored in a multitude of formats depending on the user's requirement." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Input_device#Video_input_devices> ;
    rdfs:subClassOf ns1:InputDevice .

ns1:VirtualAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Virtual Address" ;
    ns1:definition "A virtual address in memory is a pointer or marker for a memory space that an operating system allows a process to use. The virtual address points to a location in primary storage that a process can use independently of other processes." ;
    ns1:synonym "Logical Address" ;
    rdfs:isDefinedBy <https://www.techopedia.com/definition/9934/virtual-address-va> ;
    rdfs:seeAlso <https://dbpedia.org/page/Virtual_address_space>,
        <https://en.wikipedia.org/wiki/Memory_address#Logical_addresses> ;
    rdfs:subClassOf ns1:MemoryAddress .

ns1:VirtualizationSoftware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Virtualization Software" ;
    ns1:definition "Virtualization software allows a single host computer to create and run one or more virtual environments. Virtualization software is most often used to emulate a complete computer system in order to allow a guest operating system to be run, for example allowing Linux to run as a guest on top of a PC that is natively running a Microsoft Windows operating system (or the inverse, running Windows as a guest on Linux)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Category:Virtualization_software> ;
    rdfs:subClassOf ns1:ServiceApplication .

ns1:VolumeSnapshot a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Volume Snapshot" ;
    ns1:definition "A volume snapshot is a point-in-time copy of a storage volume." ;
    rdfs:isDefinedBy <https://kubernetes-csi.github.io/docs/snapshot-restore-feature.html> ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Shadow_Copy> ;
    rdfs:subClassOf ns1:StorageSnapshot .

ns1:WebFileResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web File Resource" ;
    ns1:addressed-by ns1:URL ;
    ns1:definition "A web file resource is a file resource identified by a Uniform Resource Identifier (URI) and made available from one host to another host via a web protocol and across a network or networks." ;
    rdfs:subClassOf [ ],
        ns1:NetworkFileResource,
        ns1:WebResource .

ns1:WebResource a owl:Class ;
    rdfs:label "Web Resource" ;
    ns1:definition "A web resource is a resource identified by a Uniform Resource Identifier (URI) and made available from one host to another host via a web protocol and across a network or networks." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Web_resource> ;
    rdfs:subClassOf ns1:NetworkResource .

ns1:WindowsNtAllocateVirtualMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtAllocateVirtualMemory" ;
    rdfs:seeAlso <https://j00ru.vexillium.org/syscalls/nt/64/> ;
    rdfs:subClassOf ns1:OSAPIAllocateMemory .

ns1:WindowsNtCreateThreadEx a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtCreateThreadEx" ;
    rdfs:subClassOf ns1:OSAPICreateThread .

ns1:ApplicationConfigurationDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration Database" ;
    ns1:contains ns1:ApplicationConfigurationDatabaseRecord ;
    ns1:definition "A database used to hold application configuration data." ;
    rdfs:subClassOf [ ],
        ns1:ConfigurationDatabase .

ns1:ApplicationConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration File" ;
    ns1:contains ns1:ApplicationConfiguration ;
    ns1:definition "A file containing Information used to configure the parameters and initial settings for an application.. A plist file is an example of this type of file for macOS.  Usually text-based." ;
    rdfs:subClassOf [ ],
        ns1:ConfigurationFile .

ns1:ApplicationProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Process" ;
    ns1:definition "An application process is an instance of an application computer program that is being executed." ;
    ns1:runs ns1:Application ;
    rdfs:seeAlso <http://dbpedia.org/resource/Application_software> ;
    rdfs:subClassOf [ ],
        ns1:UserProcess .

ns1:BootRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Boot Record" ;
    ns1:definition "A d3f:Record which is an essential component of the early boot (system initialization) process." ;
    rdfs:subClassOf ns1:Record .

ns1:CertificateAnalysis a ns1:CertificateAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate Analysis" ;
    ns1:analyzes ns1:CertificateFile ;
    ns1:d3fend-id "D3-CA" ;
    ns1:definition "Analyzing Public Key Infrastructure certificates to detect if they have been misconfigured or spoofed using both network traffic, certificate fields and third-party logs." ;
    ns1:kb-article """## How it works
Certificate Analysis ensures that the data elements of the certificate are current and anchored in a known trust model. Certificate authorities, revocation lists, and third-party secure logs are used in the analysis. Analysis includes detection of server impersonation, phishing domains, and forged certificates.

TLS certificates are designed to expire to ensure that the cryptographic keys are forced to be changed on a regular basis. The certificates in the trust path also expire and can cause a break in the trust chain. This means that even if a server certificate is updated correctly, intermediate certificates can expire and the trust chain is not maintained. This can cause services to become unavailable.""" ;
    ns1:kb-reference ns1:Reference-SecuringWebTransactions ;
    rdfs:subClassOf [ ],
        ns1:NetworkTrafficAnalysis .

ns1:ClientComputer a owl:Class ;
    rdfs:label "Client Computer" ;
    ns1:definition "A client computer is a host that accesses a service made available by a server. The server is often (but not always) on another computer system, in which case the client accesses the service by way of a network." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Client_(computing)> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Host_(network)> ;
    rdfs:subClassOf ns1:Host .

ns1:CloudConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud Configuration" ;
    ns1:definition "Information used to configure the services, parameters, and initial settings for a virtual server instance running in a cloud service." ;
    rdfs:subClassOf ns1:ConfigurationResource ;
    skos:altLabel "Cloud Configuration Information" .

ns1:CloudUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cloud User Account" ;
    ns1:definition "A user account on a given host is a local user account for a given cloud and specified resources within that cloud." ;
    rdfs:subClassOf ns1:UserAccount .

ns1:CollaborativeSoftware a owl:Class ;
    rdfs:label "Collaborative Software" ;
    ns1:definition "Collaborative software or groupware is application software designed to help people working on a common task to attain their goals. One of the earliest definitions of groupware is \"intentional group processes plus software to support them\". Collaborative software is a broad concept that overlaps considerably with computer-supported cooperative work (CSCW). According to Carstensen and Schmidt (1999) groupware is part of CSCW. The authors claim that CSCW, and thereby groupware, addresses \"how collaborative activities and their coordination can be supported by means of computer systems.\"" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Collaborative_software> ;
    rdfs:subClassOf ns1:UserApplication .

ns1:ComputingImage a owl:Class ;
    rdfs:label "Computing Image" ;
    ns1:definition "A computing image captures the full state or contents of a computing entity, such as a process or volume." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/System_image#Process_images> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:ConfigurationDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Database Record" ;
    ns1:synonym "Configuration Record" ;
    rdfs:subClassOf ns1:ConfigurationResource,
        ns1:Record .

ns1:ContainerImage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Container Image" ;
    ns1:definition """A container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.

:S

Container images become containers at runtime and in the case of Docker containers - images become containers when they run on Docker Engine. Available for both Linux and Windows-based applications, containerized software will always run the same, regardless of the infrastructure. Containers isolate software from its environment and ensure that it works uniformly despite differences for instance between development and staging.""" ;
    rdfs:isDefinedBy <https://www.docker.com/resources/what-container> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/image> ;
    rdfs:subClassOf ns1:ComputingImage,
        ns1:SoftwarePackage .

ns1:CredentialRotation a ns1:CredentialRotation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Rotation" ;
    ns1:d3fend-id "D3-CRO" ;
    ns1:definition "Credential rotation is a security procedure in which authentication credentials, such as passwords, API keys, or certificates, are regularly changed or replaced to minimize the risk of unauthorized access." ;
    ns1:kb-article """## How it works

Credentials can be systematically changed at predetermined intervals or based on specific events.  Credentials such as user passwords may be rotated manually, but it is increasingly common to use an automated system to manage rotation of enterprise passwords, certificates and keys.

## Considerations

- Rotation of credentials must be managed carefully to avoid inadvertent service interruption
- Management servers with enterprise policies for account management provide the ability to change or reset passwords for accounts. Some organizations rotate credentials periodically to limit the risk of stolen credentials.
- When responding to an incident, severity of compromise should be considered to determine what credentials to what accounts should be regenerated
- If proactively rotating credentials periodically, several factors should be considered to determine the frequency. Also introduces some risk including promoting the creation of weak passwords and poor storage practices for employees and presents challenges in proper tracking.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-EvictionGuidanceforNetworksAffectedbytheSolarWindsandActiveDirectory/M365Compromise-CISA>,
        ns1:Reference-PasswordandKeyRotation-SSH ;
    ns1:regenerates ns1:Credential ;
    rdfs:seeAlso <https://www.ituonline.com/tech-definitions/what-is-credential-rotation/> ;
    rdfs:subClassOf [ ],
        ns1:CredentialHardening .

ns1:CryptographicKey a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Cryptographic Key" ;
    ns1:definition "In cryptography, a key is a piece of information (a parameter) that determines the functional output of a cryptographic algorithm. For encryption algorithms, a key specifies the transformation of plaintext into ciphertext, and vice versa for decryption algorithms. Keys also specify transformations in other cryptographic algorithms, such as digital signature schemes and message authentication codes." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Public-key_cryptography> ;
    rdfs:subClassOf ns1:DigitalInformation .

ns1:DatabaseQuery a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database Query" ;
    ns1:definition "A specific query expressed in SQL, SPARQL, or similar language against a database." ;
    rdfs:subClassOf ns1:Command .

ns1:DiskFormatting a ns1:DiskFormatting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Disk Formatting" ;
    ns1:d3fend-id "D3-DKF" ;
    ns1:definition "Disk Formatting is the process of preparing a data storage device, such as a hard drive, solid-state drive, or USB flash drive, for initial use." ;
    ns1:kb-article """### How it works

This process involves setting up an empty file system on the disk, which includes creating a directory structure and initializing metadata structures. In cybersecurity, disk formatting can be used to remove all existing data on a disk, making it a clean slate for new data storage or to prevent unauthorized access to previously stored data.""" ;
    ns1:kb-reference <http://d3fend.mitre.org/ontologies/d3fend.owl#Reference-Remembranceofdatapassed:Astudyofdisksanitizationpractices> ;
    ns1:modifies ns1:SecondaryStorage ;
    rdfs:subClassOf [ ],
        ns1:ObjectEviction .

ns1:FileSection a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Section" ;
    ns1:definition "A file section is one of the portions of a file in which the file is regarded as divided and where together the file sections constitute the whole file." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/05876035-n> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "File Part" .

ns1:FirmwareVerification a ns1:FirmwareVerification,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware Verification" ;
    ns1:d3fend-id "D3-FV" ;
    ns1:definition "Cryptographically verifying firmware integrity." ;
    ns1:kb-article """## How it works
Cryptographic hash values are computed for system and peripheral firmware. The hash values are compared against precomputed hash values for the identified firmware. A hash value mismatch may indicate that the firmware may have been tampered with or updated with a non-current release indicating a misconfiguration for the system.

## Considerations
* Requires cryptographically computed hash values of firmware
* Requires storage of precomputed firmware hash values""" ;
    ns1:kb-reference ns1:Reference-FirmwareVerificationEclypsium,
        ns1:Reference-FirmwareVerificationTrapezoid,
        ns1:Reference-PlatformFirmwareResiliencyGuidelines_NIST ;
    ns1:verifies ns1:Firmware ;
    rdfs:subClassOf [ ],
        ns1:PlatformMonitoring .

ns1:ForwardResolutionDomainDenylisting a ns1:ForwardResolutionDomainDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Forward Resolution Domain Denylisting" ;
    ns1:blocks ns1:OutboundInternetDNSLookupTraffic ;
    ns1:d3fend-id "D3-FRDDL" ;
    ns1:definition "Blocking a lookup based on the query's domain name value." ;
    ns1:kb-article """## How it works

Policies are created that filter DNS queries using fully qualified domain name (FQDN) of record in the query. A DNS policy can be created for blocking DNS queries from FQDNs that have been identified as unauthorized.

## Considerations

Continuous maintenance of unauthorized domain lists is needed to keep up to date as updates occur.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "Forward Resolution Domain Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:DNSDenylisting .

ns1:GetRunningProcesses a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get Running Processes" ;
    ns1:enumerates ns1:Process ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:GetSystemConfigValue a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get System Config Value" ;
    ns1:reads ns1:SystemConfigurationDatabaseRecord ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regopenkeyexa> ;
    rdfs:subClassOf [ ],
        ns1:SystemConfigSystemCall .

ns1:GetSystemTime a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Get System Time" ;
    ns1:definition "A system call that gets the system time.  For POSIX.1 systems, time() invokes a call to get the system time." ;
    rdfs:seeAlso <https://man7.org/linux/man-pages/man2/time.2.html> ;
    rdfs:subClassOf ns1:SystemCall .

ns1:GroupPolicy a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Group Policy" ;
    ns1:definition "Group Policy is a feature of the Microsoft Windows NT family of operating systems that controls the working environment of user accounts and computer accounts. Group Policy provides the centralized management and configuration of operating systems, applications, and users' settings in an Active Directory environment. A version of Group Policy called Local Group Policy (\"LGPO\" or \"LocalGPO\") also allows Group Policy Object management on standalone and non-domain computers." ;
    rdfs:subClassOf ns1:AccessControlConfiguration .

ns1:InboundNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Network Traffic" ;
    ns1:definition "Inbound traffic is network traffic originating from another host (client), to the host of interest (server)." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:IntranetNetwork a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Network" ;
    ns1:definition "An intranet is a private network accessible only to an organization's staff or delegates. Generally a wide range of information and services from the organization's internal IT systems are available that would not be available to the public from the Internet. A company-wide intranet can constitute an important focal point of internal communication and collaboration, and provide a single starting point to access internal and external resources. In its simplest form an intranet is established with the technologies for local area networks (LANs) and wide area networks (WANs)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:Network .

ns1:JobSchedulerSoftware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Job Scheduler Software" ;
    ns1:creates ns1:ScheduledJob ;
    ns1:definition "A job scheduler software is operating system software that when run executes scheduled tasks (time-scheduling in the sense of wall clock time; not operating system scheduling of processes for multitasking). Processes running such software are task scheduler processes. In Windows, Scheduled Tasks are created and managed by the Task Scheduler. In Unix-like OSes, the `cron` utitility serves a similar role." ;
    ns1:modifies ns1:JobSchedule,
        ns1:ScheduledJob ;
    ns1:synonym "Task Scheduler Software" ;
    rdfs:seeAlso ns1:ScheduledJob,
        <http://dbpedia.org/resource/Cron>,
        <http://dbpedia.org/resource/Windows_Task_Scheduler> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:SystemServiceSoftware .

ns1:LocalAreaNetwork a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Area Network" ;
    ns1:definition "A local area network (LAN) is a computer network that interconnects computers within a limited area such as a residence, school, laboratory, university campus or office building and has its network equipment and interconnects locally managed. Ethernet and Wi-Fi are the two most common transmission technologies in use for local area networks. Historical technologies include ARCNET, Token ring, and AppleTalk." ;
    ns1:may-contain ns1:Host ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Local_area_network> ;
    rdfs:subClassOf [ ],
        ns1:Network ;
    skos:altLabel "LAN" .

ns1:LogicalLinkMapping a ns1:LogicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logical Link Mapping" ;
    ns1:d3fend-id "D3-LLM" ;
    ns1:definition "Logical link mapping creates a model of existing or previous node-to-node connections using network-layer data or metadata." ;
    ns1:kb-reference ns1:Reference-LibreNMSDocsNetworkMapExtension ;
    ns1:maps ns1:LogicalLink,
        ns1:Network,
        ns1:NetworkNode ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:NetworkMapping .

ns1:MailServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Mail Server" ;
    ns1:definition "Within the Internet email system, a message transfer agent or mail transfer agent (MTA) or mail relay is software that transfers electronic mail messages from one computer to another using SMTP. The terms mail server, mail exchanger, and MX host are also used in some contexts. Messages exchanged across networks are passed between mail servers, including any attached data files (such as images, multimedia or documents). These servers also often keep mailboxes for email. Access to this email by end users is typically either via webmail or an email client." ;
    ns1:runs ns1:MessageTransferAgent ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Message_transfer_agent> ;
    rdfs:subClassOf [ ],
        ns1:Server ;
    skos:altLabel "Email Server Resource",
        "MTA",
        "MX Host",
        "Mail Exchanger",
        "Mail transfer agent",
        "Message transfer agent" .

ns1:MemoryAddress a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Address" ;
    ns1:addresses ns1:MemoryWord ;
    ns1:definition "In computing, a memory address is a reference to a specific memory location used at various levels by software and hardware." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Memory_address> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformation .

ns1:MemoryExtent a owl:Class ;
    rdfs:label "Memory Extent" ;
    rdfs:subClassOf ns1:DigitalInformation .

ns1:MemoryFreeFunction a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Free Function" ;
    ns1:definition "Releases previously reserved memory associated with a process." ;
    ns1:invokes ns1:FreeMemory ;
    rdfs:subClassOf [ ],
        ns1:Subroutine .

ns1:MessageAnalysis a ns1:MessageAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Analysis" ;
    ns1:d3fend-id "D3-MA" ;
    ns1:definition "Analyzing email or instant message content to detect unauthorized activity." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview

Email and messaging are frequently used to deliver malicious content to targets. These enterprise capabilities are used to deliver software exploits or social engineering tricks. If the recipient of a message trusts the sender, attackers can avoid escalating suspicion.

Emails and messages are also complex data structures. They contain files and links, and complex data encodings which vary region to region. Thus the defensive techniques used to analyze emails and messages are highly varied ranging from deep content analysis and execution to social network graph-style analytics to analyze trust or risk.""" ;
    ns1:synonym "Electronic Message Analysis",
        "Email Or Messaging Analysis" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Modem a owl:Class ;
    rdfs:label "Modem" ;
    ns1:definition "A modem -- a portmanteau of \"modulator-demodulator\" -- is a hardware device that converts data into a format suitable for a transmission medium so that it can be transmitted from one computer to another (historically along telephone wires). A modem modulates one or more carrier wave signals to encode digital information for transmission and demodulates signals to decode the transmitted information. The goal is to produce a signal that can be transmitted easily and decoded reliably to reproduce the original digital data. Modems can be used with almost any means of transmitting analog signals from light-emitting diodes to radio. A common type of modem is one that turns the digital data of a computer into modulated electrical signal for transmission over telephone lines and demodulated by another modem at the receiver side to recover the digital data." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Modem> ;
    rdfs:subClassOf ns1:ComputerNetworkNode .

ns1:NTFSLink a owl:Class ;
    rdfs:label "NTFS Link" ;
    ns1:definition "The NTFS filesystem defines various ways to link files, i.e. to make a file point to another file or its contents. The object being pointed to is called the target. There are three classes of NTFS links: (a) Hard links, which have files share the same MFT entry (inode), in the same filesystem; (b) Symbolic links, which record the path of another file that the links contents should show and can accept relative paths; and (c) Junction points, which are similar to symlinks but defined only for directories and only accepts local absolute paths" ;
    rdfs:subClassOf ns1:File,
        ns1:FileSystemLink .

ns1:NetworkAccessMediation a ns1:NetworkAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Access Mediation" ;
    ns1:d3fend-id "D3-NAM" ;
    ns1:definition "Network access mediation is the control method for authorizing access to a system by a user (or a process acting on behalf of a user) communicating through a network, including a local area network, a wide area network, and the Internet." ;
    ns1:isolates ns1:Network ;
    ns1:kb-article """## How it works

Network Access Mediation is a crucial process in telecommunications and IT networks that involves controlling access to network resources. It acts as an intermediary layer between network access requests and the actual network resources, ensuring that only authorized users and devices can access the network.""" ;
    ns1:kb-reference ns1:Reference-WhatIsNetworkAccessControl ;
    ns1:synonym "Network Access Control" ;
    rdfs:seeAlso <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-160v1r1.pdf> ;
    rdfs:subClassOf [ ],
        ns1:AccessMediation .

ns1:NetworkResourceAccessMediation a ns1:NetworkResourceAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Resource Access Mediation" ;
    ns1:d3fend-id "D3-NRAM" ;
    ns1:definition "Control of access to organizational systems and services by users or processes over a network." ;
    ns1:isolates ns1:NetworkResource ;
    ns1:kb-article """## How it works

Network Resource Access Control involves managing and regulating access to resources within an organization's network. This includes ensuring that only authorized users or processes can access specific systems or data, often through authentication and authorization mechanisms. Examples include accessing internal databases, file servers, or application services.""" ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-53-Revision-5 ;
    ns1:synonym "Remote Access Control" ;
    rdfs:subClassOf [ ],
        ns1:AccessMediation .

ns1:NetworkTrafficFiltering a ns1:NetworkTrafficFiltering,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Filtering" ;
    ns1:d3fend-id "D3-NTF" ;
    ns1:definition "Restricting network traffic originating from any location." ;
    ns1:filters ns1:NetworkTraffic ;
    ns1:kb-reference ns1:Reference-ActiveFirewallSystemAndMethodology_McAfeeLLC,
        ns1:Reference-AutomaticallyGeneratingRulesForConnectionSecurity_Microsoft,
        ns1:Reference-FWTK-FirewallToolkit_,
        ns1:Reference-FirewallForInterentAccess_SecureComputingLLC,
        ns1:Reference-FirewallForProcessingAConnectionlessNetworkPacket_NationalSecurityAgency,
        ns1:Reference-FirewallForProcessingConnection-orientedAndConnectionlessDatagramsOverAConnection-orientedNetwork_NationalSecurityAgency,
        ns1:Reference-FirewallsThatFilterBasedUponProtocolCommands_IntelCorp,
        ns1:Reference-MethodForControllingComputerNetworkSecurity_CheckpointSoftwareTechnologiesLtd,
        ns1:Reference-NetworkFirewallWithProxy_SecureComputingLLC ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:OSAPIFreeMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Free Memory" ;
    ns1:invokes ns1:FreeMemory ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIGetSystemTime a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Get System Time" ;
    ns1:invokes ns1:GetSystemTime ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIMoveFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Move File" ;
    ns1:invokes ns1:MoveFile ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPISuspendProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Suspend Process" ;
    ns1:invokes ns1:SuspendProcess ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPISuspendThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Suspend Thread" ;
    ns1:invokes ns1:SuspendThread ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPITraceProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Trace Process" ;
    ns1:invokes ns1:TraceProcess ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OpenFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Open File" ;
    ns1:accesses ns1:File ;
    ns1:definition "For most file systems, a program initializes access to a file in a file system using the open system call. This allocates resources associated to the file (the file descriptor), and returns a handle that the process will use to refer to that file. In some cases the open is performed by the first access. During the open, the filesystem may allocate memory for buffers, or it may wait until the first operation. Various other errors which may occur during the open include directory update failures, un-permitted multiple connections, media failures, communication link failures and device failures." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Open_(system_call)> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:OutboundInternetEncryptedWebTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Encrypted Web Traffic" ;
    ns1:definition "Outbound internet encrypted web traffic is network traffic using a standard web protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:OutboundInternetEncryptedTraffic,
        ns1:OutboundInternetWebTraffic .

ns1:Partition a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Partition" ;
    ns1:definition "A partition is a region on secondary storage device created so that the region can be managed by itself; separate from any other regions (partitions) on that secondary storage device. Creating partitions is typically the first step of preparing a newly installed storage device, before any file system is created. The device stores the information about the partitions' locations and sizes in an area known as the partition table that the operating system reads before any other part of the disk. Each partition then appears to the operating system as a distinct \"logical\" storage device that uses part of the actual device. System administrators use a program called a partition editor to create, resize, delete, and manipulate the partitions. Partitioning allows the use of different filesystems to be installed for different kinds of files. Separating user data from system data can prevent the system partition from becoming full and rendering the system unusable. Partitioning can also make backing up easier. [Definition adapted as generalization from definition of disk partitioning and distinct from in-memory partitions.]" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Disk_partitioning> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Memory_management_(operating_systems)>,
        <http://dbpedia.org/resource/Partition_table> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "Disk Partition",
        "Disk Slice" .

ns1:PasswordDatabase a owl:Class ;
    rdfs:label "Password Database" ;
    ns1:definition "A password database is a database that holds passwords for user accounts and is usually encrypted (i.e.., the passwords are hashed). Password databases are found supporting system services (such as SAM) or part of user applications such as password managers." ;
    rdfs:subClassOf ns1:Database .

ns1:PasswordFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password File" ;
    ns1:definition "Simple form of password database held in a single file (e.g., /etc/password)" ;
    rdfs:subClassOf ns1:File,
        ns1:PasswordDatabase .

ns1:PasswordStore a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password Store" ;
    ns1:definition "A user repository of account passwords, often accessed via a password manager." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Password_manager> ;
    rdfs:subClassOf ns1:PasswordDatabase .

ns1:PhysicalLinkMapping a ns1:PhysicalLinkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Physical Link Mapping" ;
    ns1:d3fend-id "D3-PLM" ;
    ns1:definition "Physical link mapping identifies and models the link connectivity of the network devices within a physical network." ;
    ns1:kb-reference ns1:Reference-LibreNMSDocsNetworkMapExtension ;
    ns1:maps ns1:NetworkNode,
        ns1:PhysicalLink ;
    ns1:synonym "Layer 1 Mapping" ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Network_topology#Links> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:NetworkMapping .

ns1:ProcessSpawnAnalysis a ns1:ProcessSpawnAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Spawn Analysis" ;
    ns1:analyzes ns1:CreateProcess,
        ns1:Process ;
    ns1:d3fend-id "D3-PSA" ;
    ns1:definition "Analyzing spawn arguments or attributes of a process to detect processes that are unauthorized." ;
    ns1:kb-article """## How it works
Process attributes are established when an operating system spawns a new process. These attributes are analyzed to look for the presence or absence of specific values or patterns.

Some attributes of interest are:
 - user
 - process name
 - image path
 - security content

## Considerations

 - Attackers can spoof the parent process identifier (PPID), which could bypass this defense to allow execution of a malicious process from an arbitrary parent process.
 - Attackers could have legitimately compromised any of the process properties, such as the user, to make the execution appear legitimate.
 - Location: If the full image path is not checked, there could be a conflict with an executable that appears earlier due to resolution involving the system environment path/classpath variable.
 - Parsing issues: If the raw command from a shell is analyzed, rather than the actual function call, it is important to identify the actual command  being run from its arguments.  In Windows, services with unquoted file paths containing spaces will try to use the first token as the executable and the rest as arguments -- and shift tokens to the executable until a valid one is found.
 - Some [operating systems](/dao/artifact/d3f:OperatingSystem) can spawn processes without forking.""" ;
    ns1:kb-reference ns1:Reference-ActiveDirectoryDumpingViaNTDSUtil_MITRE,
        ns1:Reference-CAR-2020-04-001%3AShadowCopyDeletion_MITRE,
        ns1:Reference-CAR-2020-05-003%3ARareLolBASCommandLines_MITRE,
        ns1:Reference-CAR-2020-08-001%3ANTFSAlternateDataStreamExecution-SystemUtilities_MITRE,
        ns1:Reference-CAR-2020-09-003%3AIndicatorBlocking-DriverUnloaded_MITRE,
        ns1:Reference-CAR-2020-09-004%3ACredentialsInFiles%26Registry_MITRE,
        ns1:Reference-CAR-2020-11-001%3ABootOrLogonInitializationScripts_MITRE,
        ns1:Reference-CAR-2020-11-003%3ADLLInjectionWithMavinject_MITRE,
        ns1:Reference-CAR-2020-11-005%3AClearPowershellConsoleCommandHistory_MITRE,
        ns1:Reference-CAR-2020-11-006%3ALocalPermissionGroupDiscovery_MITRE,
        ns1:Reference-CAR-2020-11-007%3ANetworkShareConnectionRemoval_MITRE,
        ns1:Reference-CAR-2020-11-008%3AMSBuildAndMsxsl_MITRE,
        ns1:Reference-CAR-2020-11-009%3ACompiledHTMLAccess_MITRE,
        ns1:Reference-CAR-2021-01-002%3AUnusuallyLongCommandLineStrings_MITRE,
        ns1:Reference-CAR-2021-01-003%3AClearingWindowsLogsWithWevtutil_MITRE,
        ns1:Reference-CAR-2021-01-004%3AUnusualChildProcessForSpoolsv.ExeOrConnhost.Exe_MITRE,
        ns1:Reference-CAR-2021-01-006%3AUnusualChildProcessSpawnedUsingDDEExploit_MITRE,
        ns1:Reference-CAR-2021-01-007%3ADetectingTamperingOfWindowsDefenderCommandPrompt_MITRE,
        ns1:Reference-CAR-2021-01-008%3ADisableUAC_MITRE,
        ns1:Reference-CAR-2021-01-009%3ADetectingShadowCopyDeletionViaVssadmin.exe_MITRE,
        ns1:Reference-CAR-2021-02-001%3AWebshell-IndicativeProcessTree_MITRE,
        ns1:Reference-CAR-2021-04-001%3ACommonWindowsProcessMasquerading_MITRE,
        ns1:Reference-CAR-2021-05-001%3AAttemptToAddCertificateToUntrustedStore_MITRE,
        ns1:Reference-CAR-2021-05-002%3ABatchFileWriteToSystem32_MITRE,
        ns1:Reference-CAR-2021-05-003%3ABCDEditFailureRecoveryModification_MITRE,
        ns1:Reference-CAR-2021-05-004%3ABITSJobPersistence_MITRE,
        ns1:Reference-CAR-2021-05-005%3ABITSAdminDownloadFile_MITRE,
        ns1:Reference-CAR-2021-05-006%3ACertUtilDownloadWithURLCacheAndSplitArguments_MITRE,
        ns1:Reference-CAR-2021-05-007%3ACertUtilDownloadWithVerifyCtlAndSplitArguments_MITRE,
        ns1:Reference-CAR-2021-05-008%3ACertutilExeCertificateExtraction_MITRE,
        ns1:Reference-CAR-2021-05-009%3ACertUtilWithDecodeArgument_MITRE,
        ns1:Reference-CAR-2021-05-010%3ACreateLocalAdminAccountsUsingNetExe_MITRE,
        ns1:Reference-CommandLineUsageOfArchivingSoftware_MITRE,
        ns1:Reference-CreateRemoteProcessViaWMIC_MITRE_Other,
        ns1:Reference-CredentialDumpingViaMimikatz_MITRE,
        ns1:Reference-HostDiscoveryCommands_MITRE,
        ns1:Reference-LsassProcessDumpViaProcdump_MITRE,
        ns1:Reference-PowershellExecution_MITRE,
        ns1:Reference-RunDLL32.exeMonitoring_MITRE,
        ns1:Reference-Squiblydoo_MITRE,
        ns1:Reference-SuspiciousArguments_MITRE,
        ns1:Reference-SuspiciousRunLocations_MITRE ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ProcessAnalysis .

ns1:ProcessorRegister a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Processor Register" ;
    ns1:contained-by ns1:CentralProcessingUnit ;
    ns1:definition "A processor register is a quickly accessible location available to a computer's processor. Registers usually consist of a small amount of fast storage, although some registers have specific hardware functions, and may be read-only or write-only." ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Processor_register> ;
    rdfs:seeAlso <https://www.techtarget.com/whatis/definition/register> ;
    rdfs:subClassOf [ ],
        ns1:PrimaryStorage .

ns1:RFNode a owl:Class ;
    rdfs:label "RF Node" ;
    rdfs:subClassOf ns1:NetworkNode .

ns1:RemoteSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Session" ;
    ns1:definition "A remote login session is a login session where a client has logged in from their local host machine to a server via a network." ;
    rdfs:subClassOf ns1:NetworkSession .

ns1:ResourceAccess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Access" ;
    ns1:definition "Ephemeral digital artifact comprising a request of a resource and any response from that resource." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Computer_access_control> ;
    rdfs:subClassOf ns1:UserAction .

ns1:Sensor a owl:Class ;
    rdfs:label "Sensor" ;
    ns1:definition "In the broadest definition, a sensor is a device, module, machine, or subsystem that detects events or changes in its environment and sends the information to other electronics, frequently a computer." ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Sensor> ;
    rdfs:subClassOf ns1:D3FENDCore,
        ns1:DigitalInformationBearer .

ns1:Session a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Session" ;
    ns1:definition "In computer science, in particular networking, a session is a semi-permanent interactive information interchange, also known as a dialogue, a conversation or a meeting, between two or more communicating devices, or between a computer and user (see Login session). A session is set up or established at a certain point in time, and then torn down at some later point. An established communication session may involve more than one message in each direction. A session is typically, but not always, stateful, meaning that at least one of the communicating parts needs to save information about the session history in order to be able to communicate, as opposed to stateless communication, where the communication consists of independent requests with responses." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Session_(computer_science)> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/session> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:Shim a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shim" ;
    ns1:definition "In computer programming, a shim is a small library that transparently intercepts API calls and changes the arguments passed, handles the operation itself, or redirects the operation elsewhere. Shims can be used to support an old API in a newer environment, or a new API in an older environment. Shims can also be used for running programs on different software platforms than those for which they were developed." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Shim_(computing)> ;
    rdfs:subClassOf ns1:Software .

ns1:StackComponent a owl:Class ;
    rdfs:label "Stack Component" ;
    ns1:definition "A stack component is any component of a call stack used for stack-based memory allocation in a running process.  Examples include saved instruction pointers, stack frames, and stack frame canaries." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Call_stack> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:StorageImage a owl:Class ;
    rdfs:label "Storage Image" ;
    ns1:definition "A storage image is a complete, encapsulated representation of a storage medium or system environment. It contains all the data, files, and configurations necessary to replicate or deploy a specific system state or software setup." ;
    rdfs:subClassOf ns1:ComputingImage,
        ns1:File .

ns1:SystemConfigurationInitDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Init Database Record" ;
    ns1:definition "A database record holding information used to configure the services, parameters, and initial settings for an operating system at startup." ;
    rdfs:subClassOf ns1:SystemConfigurationDatabaseRecord,
        ns1:SystemConfigurationInitResource,
        ns1:SystemInitConfiguration ;
    skos:altLabel "System Configuration Startup Database Record" .

ns1:SystemConfigurationInitResource a owl:Class ;
    rdfs:label "System Configuration Init Resource" ;
    ns1:definition "A system configuration initialization resource has information for initializing (booting) a system." ;
    rdfs:subClassOf ns1:LocalResource ;
    skos:altLabel "System Init Resource" .

ns1:SystemFirmware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Firmware" ;
    ns1:definition "Firmware that is installed on a computer's main board which manages the initial boot process. It can also continue to run or function after the operating system boots." ;
    rdfs:subClassOf ns1:Firmware ;
    skos:altLabel "BIOS Firmware",
        "UEFI Firmware" .

ns1:T1001 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data Obfuscation" ;
    ns1:attack-id "T1001" ;
    ns1:definition "Adversaries may obfuscate command and control traffic to make it more difficult to detect.(Citation: Bitdefender FunnyDream Campaign November 2020) Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols." ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1048 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Alternative Protocol" ;
    ns1:attack-id "T1048" ;
    ns1:definition "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server." ;
    ns1:produces ns1:InternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1069 a owl:Class ;
    rdfs:label "Permission Groups Discovery" ;
    ns1:attack-id "T1069" ;
    ns1:definition "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions." ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1102 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Service" ;
    ns1:attack-id "T1102" ;
    ns1:definition "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection." ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1114 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email Collection" ;
    ns1:accesses ns1:Resource ;
    ns1:attack-id "T1114" ;
    ns1:definition "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients." ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1195 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Supply Chain Compromise" ;
    ns1:attack-id "T1195" ;
    ns1:definition "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise." ;
    ns1:modifies ns1:DigitalArtifact ;
    rdfs:subClassOf [ ],
        ns1:InitialAccessTechnique .

ns1:T1204 a owl:Class ;
    rdfs:label "User Execution" ;
    ns1:attack-id "T1204" ;
    ns1:definition "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566)." ;
    rdfs:subClassOf ns1:ExecutionTechnique .

ns1:T1497 a owl:Class ;
    rdfs:label "Virtualization/Sandbox Evasion" ;
    ns1:attack-id "T1497" ;
    ns1:definition "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1498 a owl:Class ;
    rdfs:label "Network Denial of Service" ;
    ns1:attack-id "T1498" ;
    ns1:definition "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1499 a owl:Class ;
    rdfs:label "Endpoint Denial of Service" ;
    ns1:attack-id "T1499" ;
    ns1:definition "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)" ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1559 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inter-Process Communication" ;
    ns1:attack-id "T1559" ;
    ns1:definition "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern." ;
    ns1:injects ns1:InterprocessCommunication ;
    rdfs:subClassOf [ ],
        ns1:ExecutionTechnique .

ns1:T1560 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive Collected Data" ;
    ns1:attack-id "T1560" ;
    ns1:creates ns1:ArchiveFile ;
    ns1:definition "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network.(Citation: DOJ GRU Indictment Jul 2018) Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender." ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique .

ns1:T1565 a owl:Class ;
    rdfs:label "Data Manipulation" ;
    ns1:attack-id "T1565" ;
    ns1:definition "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: Sygnia Elephant Beetle Jan 2022) By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making." ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1568 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dynamic Resolution" ;
    ns1:attack-id "T1568" ;
    ns1:definition "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control." ;
    ns1:produces ns1:OutboundInternetDNSLookupTraffic ;
    rdfs:subClassOf [ ],
        ns1:CommandAndControlTechnique .

ns1:T1585 a owl:Class ;
    rdfs:label "Establish Accounts" ;
    ns1:attack-id "T1585" ;
    ns1:definition "Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1586 a owl:Class ;
    rdfs:label "Compromise Accounts" ;
    ns1:attack-id "T1586" ;
    ns1:definition "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona." ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1589 a owl:Class ;
    rdfs:label "Gather Victim Identity Information" ;
    ns1:attack-id "T1589" ;
    ns1:definition "Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations." ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1593 a owl:Class ;
    rdfs:label "Search Open Websites/Domains" ;
    ns1:attack-id "T1593" ;
    ns1:definition "Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.(Citation: Cyware Social Media)(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1595 a owl:Class ;
    rdfs:label "Active Scanning" ;
    ns1:attack-id "T1595" ;
    ns1:definition "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction." ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:UserInitConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Init Configuration File" ;
    ns1:definition "A user initialization configuration file is a file containing the information necessary to configure that part of a user's environment which is common to all applications and actions. User configurations may be overridden by more specific configuration information (such as that found in a application configuration file.)" ;
    rdfs:subClassOf ns1:ConfigurationFile,
        ns1:UserLogonInitResource ;
    skos:altLabel "User Configuration File" .

ns1:UserStartupScriptFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Startup Script File" ;
    ns1:definition "A user startup script file is a shortcut file that is executed when a user logs in and starts a session on the host.  These indicate applications the user wants started at login.  For Windows, these are typically found in the user's startup directory." ;
    rdfs:subClassOf ns1:ExecutableScript,
        ns1:UserLogonInitResource .

ns1:Volume a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Volume" ;
    ns1:definition "In the context of computer operating systems, a volume or logical drive is a single accessible storage area with a single file system, typically (though not necessarily) resident on a single partition of a hard disk. Although a volume might be different from a physical disk drive, it can still be accessed with an operating system's logical interface. However, a volume differs from a partition." ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "Drive Volume",
        "Logical Drive" .

ns1:WebServer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Server" ;
    ns1:definition "A web server is server software, or hardware dedicated to running this software, that can satisfy client requests on the World Wide Web. A web server can, in general, contain one or more websites. A web server processes incoming network requests over HTTP and several other related protocols. While the major function is to serve content, a full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting web forms, including uploading of files." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Web_server> ;
    rdfs:subClassOf ns1:Server .

ns1:WebSessionAccessMediation a ns1:WebSessionAccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Session Access Mediation" ;
    ns1:d3fend-id "D3-WSAM" ;
    ns1:definition "Web session access mediation secures user sessions in web applications by employing robust authentication and integrity validation, along with adaptive threat mitigation techniques, to ensure that access to web resources is authorized and protected from session-related attacks." ;
    ns1:isolates ns1:ServiceApplicationProcess ;
    ns1:kb-article """## How it works

Web Session Access Mediation involves managing user access to web applications and services, ensuring secure and authorized sessions. This includes authenticating users, maintaining session integrity, and protecting against threats like session hijacking. Examples include accessing corporate intranets, SaaS applications, or online portals.""" ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-41-Revision-1 ;
    rdfs:subClassOf [ ],
        ns1:NetworkResourceAccessMediation .

ns1:WindowsNtProtectVirtualMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows NtProtectVirtualMemory" ;
    rdfs:seeAlso <https://www.delphibasics.info/home/delphibasicssnippets/nativewriteprocessmemoryapireplacement> ;
    rdfs:subClassOf ns1:OSAPIAllocateMemory .

ns1:AccessPolicyAdministration a ns1:AccessPolicyAdministration,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Policy Administration" ;
    ns1:d3fend-id "D3-APA" ;
    ns1:definition "Access policy administration is the systematic process of defining, implementing, and managing access control policies that dictate user permissions to resources." ;
    ns1:enables ns1:Isolate ;
    ns1:synonym "Access Control Administration" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:AdministrativeNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Administrative Network Traffic" ;
    ns1:definition "Administrative network traffic is network traffic related to the remote administration or control of hosts or devices through a standard remote administrative protocol.  Remote shells, terminals, RDP, and VNC are examples of these protocols, which are typically only used by administrators." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Remote_administration> ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:AuthenticationLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Log" ;
    ns1:definition "A log of authentication events." ;
    ns1:records ns1:Authentication ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authorization>,
        <http://wordnet-rdf.princeton.edu/id/00155053-n> ;
    rdfs:subClassOf [ ],
        ns1:EventLog .

ns1:BootLoader a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Boot Loader" ;
    ns1:definition "A bootloader is software that is responsible for booting a computer. When a computer is turned off, its software‍-‌including operating systems, application code, and data‍-‌remains stored on non-volatile memory. When the computer is powered on, it typically does not have an operating system or its loader in random-access memory (RAM). The computer first executes a relatively small program stored in read-only memory (ROM, and later EEPROM, NOR flash) along with some needed data, to initialize RAM (especially on x86 systems) to access the nonvolatile device (usually block device, eg NAND flash) or devices from which the operating system programs and data can be loaded into RAM." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Bootloader> ;
    rdfs:subClassOf ns1:Software ;
    skos:altLabel "Bootloader" .

ns1:CollectorAgent a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Agent" ;
    ns1:definition "A network agent is software installed on a network node or device that transmits information back to a collector agent or management system.  Kinds of network agents include SNMP Agent, IPMI agents, WBEM agents, and many proprietary agents capturing network monitoring and management information." ;
    ns1:synonym "Exporter" ;
    rdfs:subClassOf ns1:Software .

ns1:Command a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command" ;
    ns1:definition "In computing, a command is a directive to a computer program acting as an interpreter of some kind, in order to perform a specific task. Most commonly a command is either a directive to some kind of command-line interface, such as a shell, or an event in a graphical user interface triggered by the user selecting an option in a menu." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Command_(computing)> ;
    rdfs:subClassOf ns1:DigitalInformation .

ns1:CreateFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create File" ;
    ns1:creates ns1:File ;
    ns1:definition "System call to create a new file on a file system. Some operating systems implement this functionality as part of their d3f:OpenFile system call." ;
    rdfs:seeAlso <https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2>,
        <https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea>,
        <https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilew>,
        <https://linux.die.net/man/2/creat> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall .

ns1:CredentialEviction a ns1:CredentialEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Eviction" ;
    ns1:d3fend-id "D3-CE" ;
    ns1:definition "Credential Eviction techniques disable or remove compromised credentials from a computer network." ;
    ns1:enables ns1:Evict ;
    ns1:kb-reference ns1:Reference-AccountMonitoring_ForescoutTechnologies ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:CyberSensor a owl:Class ;
    rdfs:label "Cyber Sensor" ;
    rdfs:subClassOf ns1:Sensor .

ns1:DNSDenylisting a ns1:DNSDenylisting,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Denylisting" ;
    ns1:blocks ns1:DNSNetworkTraffic ;
    ns1:d3fend-id "D3-DNSDL" ;
    ns1:definition "Blocking DNS Network Traffic based on criteria such as IP address, domain name, or DNS query type." ;
    ns1:kb-article """## How it works
Rules are implemented that filter DNS queries using criteria such as:
- Client subnet
- Type of network protocol used in query
- Fully qualified domain name (FQDN) of record in the query
- DNS Server IP address that received the DNS request
- Type of DNS record being queried
- Time of day the query is received
- Size of the response

For example, a DNS policy can be created for blocking DNS queries for FQDNs that have been identified as unauthorized.

## Considerations
- Implementation considerations for DNS filtering policies to avoid over-blocking or under-blocking domains.
- Continuous maintenance of unauthorized domain lists is needed to keep up to date with possible site content changes.
- File sharing or content delivery networks may require other filtering techniques that are more fine-grained (URL blocking).
- Access to malicious websites or other network resources directly by IP instead of by DNS record, or after alteration of local DNS hosts file, may not result in DNS network traffic.""" ;
    ns1:kb-reference ns1:Reference-UseDNSPolicyForApplyingFiltersOnDNSQueries ;
    ns1:synonym "DNS Blacklisting" ;
    rdfs:subClassOf [ ],
        ns1:NetworkIsolation .

ns1:DecoyEnvironment a ns1:DecoyEnvironment,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Environment" ;
    ns1:d3fend-id "D3-DE" ;
    ns1:definition "A Decoy Environment comprises hosts and networks for the purposes of deceiving an attacker." ;
    ns1:enables ns1:Deceive ;
    ns1:kb-article """## Technique Overview

Systems in a decoy environment are typically configured so that some detectable means of communication does not have any legitimate business purpose.  Any communication via these means should be logged and analyzed to find potential indicators of compromise for a possible past or future attack against other systems.""" ;
    ns1:manages ns1:DecoyArtifact ;
    ns1:synonym "Honeypot" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefensiveTechnique .

ns1:DomainName a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain Name" ;
    ns1:definition "A domain name is an identification string that defines a realm of administrative autonomy, authority or control within the Internet. Domain names are formed by the rules and procedures of the Domain Name System (DNS). Any name registered in the DNS is a domain name.Domain names are used in various networking contexts and application-specific naming and addressing purposes. In general, a domain name represents an Internet Protocol (IP) resource, such as a personal computer used to access the Internet, a server computer hosting a web site, or the web site itself or any other service communicated via the Internet. In 2015, 294 million domain names had been registered." ;
    ns1:identifies ns1:IPAddress ;
    rdfs:subClassOf [ ],
        ns1:Identifier .

ns1:FileTransferNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Transfer Network Traffic" ;
    ns1:definition "File transfer network traffic is network traffic related to file transfers between network nodes. This includes only network traffic conforming to standard file transfer protocols, not custom transfer protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:KerberosTicket a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kerberos Ticket" ;
    ns1:definition "An access ticket/token issued by a Kerberos system." ;
    rdfs:subClassOf ns1:AccessToken .

ns1:LocalUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local User Account" ;
    ns1:definition "A user account on a given host is a local user account for that specific host." ;
    rdfs:subClassOf ns1:UserAccount .

ns1:Log a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Log" ;
    ns1:definition "A record of events in the order of their occurrence." ;
    rdfs:isDefinedBy <http://wordnet-rdf.princeton.edu/id/06515215-n> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Chronology> ;
    rdfs:subClassOf ns1:D3FENDCore,
        ns1:DigitalInformationBearer ;
    skos:altLabel "Chronology" .

ns1:MessageHardening a ns1:MessageHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Message Hardening" ;
    ns1:d3fend-id "D3-MH" ;
    ns1:definition "Email or Messaging Hardening includes measures taken to ensure the confidentiality and integrity of user to user computer messages." ;
    ns1:enables ns1:Harden ;
    ns1:synonym "Email Or Messaging Hardening" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:NetworkFileShareResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network File Share Resource" ;
    ns1:definition "A shared file resource, or network file share, is a computer file made available from one host to other hosts on a computer network. Network sharing is made possible by inter-process communication over the network. It includes both files and directories." ;
    rdfs:subClassOf ns1:NetworkResource .

ns1:OSAPITerminateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Terminate Process" ;
    ns1:invokes ns1:TerminateProcess ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIWriteMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Write Memory" ;
    ns1:invokes ns1:WriteMemory ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:ObjectFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Object File" ;
    ns1:definition "An object file is a file that contains relocatable machine code." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Object_file> ;
    rdfs:subClassOf ns1:File .

ns1:PartitionTable a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Partition Table" ;
    ns1:addresses ns1:Partition ;
    ns1:definition "A partition is a fixed-size subset of a storage device which is treated as a unit by the operating system. A partition table is a table maintained on the storage device by the operating system describing the partitions on that device. The terms partition table and partition map are most commonly associated with the MBR partition table of a Master Boot Record (MBR) in IBM PC compatibles, but it may be used generically to refer to other \"formats\" that divide a disk drive into partitions, such as: GUID Partition Table (GPT), Apple partition map (APM), or BSD disklabel." ;
    ns1:may-contain ns1:BootRecord ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Partition_table> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalInformationBearer .

ns1:RPCNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "RPC Network Traffic" ;
    ns1:definition "RPC network traffic is network traffic related to remote procedure calls between network nodes..This includes only network traffic conforming to a standard RPC protocol; not custom protocols." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:RestoreAccess a ns1:RestoreAccess,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Access" ;
    ns1:d3fend-id "D3-RA" ;
    ns1:definition "Restoring an entity's access to resources." ;
    ns1:enables ns1:Restore ;
    ns1:kb-reference ns1:Reference-CybersecurityIncidentandVulnerabilityResponsePlaybooks ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:SharedComputer a owl:Class ;
    rdfs:label "Shared Computer" ;
    ns1:definition "A computer whose resources are intended to be shared widely." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Time-sharing> ;
    rdfs:subClassOf ns1:ClientComputer .

ns1:SoftwarePackage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software Package" ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/package> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:SystemInitConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Init Configuration" ;
    ns1:definition "System initialization configuration information is configuration information used to configure the services, parameters, and initial settings for an operating system at startup." ;
    rdfs:subClassOf ns1:OperatingSystemConfigurationComponent ;
    skos:altLabel "Autoruns" .

ns1:T1056 a owl:Class ;
    rdfs:label "Input Capture" ;
    ns1:attack-id "T1056" ;
    ns1:definition "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003))." ;
    rdfs:subClassOf ns1:CollectionTechnique,
        ns1:CredentialAccessTechnique .

ns1:T1078 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Valid Accounts" ;
    ns1:attack-id "T1078" ;
    ns1:definition "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence." ;
    ns1:produces ns1:Authentication,
        ns1:Authorization ;
    ns1:uses ns1:UserAccount ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefenseEvasionTechnique,
        ns1:InitialAccessTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1087 a owl:Class ;
    rdfs:label "Account Discovery" ;
    ns1:attack-id "T1087" ;
    ns1:definition "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078))." ;
    rdfs:seeAlso ns1:T1136 ;
    rdfs:subClassOf ns1:DiscoveryTechnique .

ns1:T1090 a owl:Class ;
    rdfs:label "Proxy" ;
    ns1:attack-id "T1090" ;
    ns1:definition "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic." ;
    rdfs:subClassOf ns1:CommandAndControlTechnique .

ns1:T1110 a owl:Class ;
    rdfs:label "Brute Force" ;
    ns1:attack-id "T1110" ;
    ns1:definition "Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.(Citation: TrendMicro Pawn Storm Dec 2020) Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism.(Citation: Dragos Crashoverride 2018) Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes." ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1136 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Account" ;
    ns1:attack-id "T1136" ;
    ns1:creates ns1:UserAccount ;
    ns1:definition "Adversaries may create an account to maintain access to victim systems.(Citation: Symantec WastedLocker June 2020) With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system." ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1496 a owl:Class ;
    rdfs:label "Resource Hijacking" ;
    ns1:attack-id "T1496" ;
    ns1:definition "Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability." ;
    rdfs:subClassOf ns1:ImpactTechnique .

ns1:T1550 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Use Alternate Authentication Material" ;
    ns1:accesses ns1:AuthenticationService ;
    ns1:attack-id "T1550" ;
    ns1:definition "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls." ;
    rdfs:subClassOf [ ],
        ns1:DefenseEvasionTechnique,
        ns1:LateralMovementTechnique .

ns1:T1557 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Adversary-in-the-Middle" ;
    ns1:attack-id "T1557" ;
    ns1:definition "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)" ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique,
        ns1:CredentialAccessTechnique .

ns1:T1566 a owl:Class ;
    rdfs:label "Phishing" ;
    ns1:attack-id "T1566" ;
    ns1:definition "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns." ;
    rdfs:subClassOf ns1:InitialAccessTechnique .

ns1:T1567 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Over Web Service" ;
    ns1:attack-id "T1567" ;
    ns1:definition "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services." ;
    ns1:produces ns1:OutboundInternetWebTraffic ;
    rdfs:subClassOf [ ],
        ns1:ExfiltrationTechnique .

ns1:T1587 a owl:Class ;
    rdfs:label "Develop Capabilities" ;
    ns1:attack-id "T1587" ;
    ns1:definition "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1591 a owl:Class ;
    rdfs:label "Gather Victim Org Information" ;
    ns1:attack-id "T1591" ;
    ns1:definition "Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees." ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1592 a owl:Class ;
    rdfs:label "Gather Victim Host Information" ;
    ns1:attack-id "T1592" ;
    ns1:definition "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.)." ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1598 a owl:Class ;
    rdfs:label "Phishing for Information" ;
    ns1:attack-id "T1598" ;
    ns1:definition "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code." ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:UnixLink a owl:Class ;
    rdfs:label "Unix Link" ;
    ns1:definition "A Unix link is a file link in a Unix file system." ;
    rdfs:subClassOf ns1:FileSystemLink .

ns1:UserInitScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Init Script" ;
    ns1:definition "A script used to initialize and configure elements of the user's applications and user environment." ;
    rdfs:subClassOf ns1:ExecutableScript,
        ns1:InitScript,
        ns1:UserLogonInitResource .

ns1:WebNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Web Network Traffic" ;
    ns1:definition "Web network traffic is network traffic that uses a standard web protocol." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:ArchiveFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Archive File" ;
    ns1:definition "An archive file is a file that is composed of one or more computer files along with metadata. Archive files are used to collect multiple data files together into a single file for easier portability and storage, or simply to compress files to use less storage space. Archive files often store directory structures, error detection and correction information, arbitrary comments, and sometimes use built-in encryption." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Archive_file> ;
    rdfs:subClassOf ns1:File .

ns1:BootSector a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Boot Sector" ;
    ns1:definition "A boot record [boot sector] is the sector of a persistent data storage device (e.g., hard disk, floppy disk, optical disc, etc.) which contains machine code to be loaded into random-access memory (RAM) and then executed by a computer system's built-in firmware (e.g., the BIOS, Das U-Boot, etc.)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Boot_sector> ;
    rdfs:subClassOf ns1:BootRecord .

ns1:Certificate a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate" ;
    ns1:contains ns1:Identifier,
        ns1:PublicKey ;
    ns1:definition "In cryptography, a public key certificate, also known as a digital certificate or identity certificate, is an electronic document used to prove the ownership of a public key. The certificate includes information about the key, information about the identity of its owner (called the subject), and the digital signature of an entity that has verified the certificate's contents (called the issuer). If the signature is valid, and the software examining the certificate trusts the issuer, then it can use that key to communicate securely with the certificate's subject. In email encryption, code signing, and e-signature systems, a certificate's subject is typically a person or organization. However, in Transport Layer Security (TLS) a certificate's subject is typically a computer or other device." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Public_key_certificate> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/certificate> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Public Key Certificate" .

ns1:ConfigurationFile a owl:Class ;
    rdfs:label "Configuration File" ;
    ns1:definition "A file containing Information used to configure the parameters and initial settings for some computer programs. They are used for user applications, server processes and operating system settings." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Configuration_file> ;
    rdfs:subClassOf ns1:File ;
    skos:altLabel "Settings File" .

ns1:CredentialHardening a ns1:CredentialHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Hardening" ;
    ns1:d3fend-id "D3-CH" ;
    ns1:definition "Credential Hardening techniques modify system or network properties in order to protect system or network/domain credentials." ;
    ns1:enables ns1:Harden ;
    ns1:hardens ns1:Credential ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefensiveTechnique .

ns1:DNSLookup a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "DNS Lookup" ;
    ns1:definition "A Domain Name System (DNS) lookup is a record returned from a DNS resolver after querying a DNS name server.  Typically considered an A or AAAA record, where a domain name is resolved to an IPv4 or IPv6 address, respectively." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Domain_Name_System>,
        <http://dbpedia.org/resource/List_of_DNS_record_types>,
        <https://schema.ocsf.io/objects/dns_query> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:DeveloperApplication a owl:Class ;
    rdfs:label "Developer Application" ;
    ns1:definition "An application used to develop computer software including applications used for software construction, analysis, testing, packaging, or management." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Application_development>,
        <http://dbpedia.org/resource/Application_software> ;
    rdfs:subClassOf ns1:UserApplication .

ns1:EncryptedCredential a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Encrypted Credential" ;
    ns1:definition "A credential that is encrypted." ;
    rdfs:subClassOf ns1:Credential .

ns1:FileAnalysis a ns1:FileAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File Analysis" ;
    ns1:analyzes ns1:File ;
    ns1:d3fend-id "D3-FA" ;
    ns1:definition "File Analysis is an analytic process to determine a file's status. For example: virus, trojan, benign, malicious, trusted, unauthorized, sensitive, etc." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview
Some techniques use file signatures or file metadata to compare against historical collections of malware. Files may also be compared against a source of ground truth such as cryptographic signatures. Examining files for potential malware using pattern matching against file contents/file behavior. Binary code may be dissembled and analyzed for predictive malware behavior, such as API call signatures. Analysis might occur within a protected environment such as a sandbox or live system.""" ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DefensiveTechnique .

ns1:FileSystemLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System Link" ;
    ns1:definition "A file system link associates a name with a file on a file system.  Most generally, this may be a direct reference (a hard link) or an indirect one (a soft link)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Hard_link> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:HardwareDriver a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Driver" ;
    ns1:definition "In computing, a device driver (commonly referred to simply as a driver) is a computer program that operates or controls a particular type of device that is attached to a computer. A driver provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details of the hardware being used. A driver communicates with the device through the computer bus or communications subsystem to which the hardware connects. When a calling program invokes a routine in the driver, the driver issues commands to the device. Once the device sends data back to the driver, the driver may invoke routines in the original calling program. Drivers are hardware dependent and operating-system-specific. They usually provide the interrupt handling required for any necessary asynchronous time-dependent hardware interface." ;
    ns1:drives ns1:HardwareDevice ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Device_driver> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Device Driver" .

ns1:IdentifierAnalysis a ns1:IdentifierAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier Analysis" ;
    ns1:d3fend-id "D3-ID" ;
    ns1:definition "Analyzing identifier artifacts such as IP address, domain names, or URL(I)s." ;
    ns1:enables ns1:Detect ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:IdentifierReputationAnalysis a ns1:IdentifierReputationAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier Reputation Analysis" ;
    ns1:d3fend-id "D3-IRA" ;
    ns1:definition "Analyzing the reputation of an identifier." ;
    ns1:kb-reference ns1:Reference-Finding_phishing_sites ;
    rdfs:subClassOf ns1:IdentifierAnalysis .

ns1:JobSchedule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Job Schedule" ;
    ns1:contains ns1:ScheduledJob ;
    ns1:definition "A job schedule contains specification of tasks to be executed at particular times or time intervals.  The schedule is a plan that enacted by a task scheduling process. In Windows, the schedule can be accessed at 'C:\\Windows\\System32\\Tasks' or in the registry. In Linux, the schedule is located at '/etc/crontab'" ;
    ns1:modified-by ns1:JobSchedulerSoftware ;
    ns1:synonym "Task Schedule" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Cron>,
        <http://dbpedia.org/resource/Windows_Task_Scheduler> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalInformation .

ns1:KernelModule a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Kernel Module" ;
    ns1:definition """A loadable kernel module (LKM) is an object file that contains code to extend the running kernel, or so-called base kernel, of an operating system. LKMs are typically used to add support for new hardware (as device drivers) and/or filesystems, or for adding system calls. When the functionality provided by a LKM is no longer required, it can be unloaded in order to free memory and other resources.

Most current Unix-like systems and Microsoft Windows support loadable kernel modules, although they might use a different name for them, such as kernel loadable module (kld) in FreeBSD, kernel extension (kext) in macOS,[1] kernel extension module in AIX, kernel-mode driver in Windows NT[2] and downloadable kernel module (DKM) in VxWorks. They are also known as kernel loadable modules (or KLM), and simply as kernel modules (KMOD).""" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Loadable_kernel_module> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/kernel_driver> ;
    rdfs:subClassOf ns1:ObjectFile ;
    skos:altLabel "LKM",
        "Loadable Kernel Module" .

ns1:LogicalLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Logical Link" ;
    rdfs:subClassOf ns1:Link .

ns1:NetworkMapping a ns1:NetworkMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Mapping" ;
    ns1:d3fend-id "D3-NM" ;
    ns1:definition "Network mapping encompasses the techniques to identify and model the physical layer, network layer, and data exchange layers of the organization's network and their physical location, and determine allowed pathways through that network." ;
    ns1:display-order 3 ;
    ns1:enables ns1:Model ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Network_topology> ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:NetworkService a owl:Class ;
    rdfs:label "Network Service" ;
    ns1:definition "In computer networking, a network service is an application running at the network application layer and above, that provides data storage, manipulation, presentation, communication or other capability which is often implemented using a client-server or peer-to-peer architecture based on application layer network protocols. Clients and servers will often have a user interface, and sometimes other hardware associated with it." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Network_service> ;
    rdfs:subClassOf ns1:ServiceApplicationProcess .

ns1:NetworkSession a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Session" ;
    ns1:definition "A network session is a temporary and interactive information interchange between two or more devices communicating over a network. A session is established at a certain point in time, and then 'torn down' - brought to an end - at some later point. An established communication session may involve more than one message in each direction. A session is typically stateful, meaning that at least one of the communicating parties needs to hold current state information and save information about the session history in order to be able to communicate, as opposed to stateless communication, where the communication consists of independent requests with responses. Network sessions may be established and implemented as part of protocols and services at the application, session, or transport layers of the OSI model." ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:seeAlso <http://dbpedia.org/resource/OSI_model>,
        <http://dbpedia.org/resource/Session_(computer_science)>,
        <https://schema.ocsf.io/objects/network_connection_info> ;
    rdfs:subClassOf [ ],
        ns1:Session .

ns1:OSAPIDeleteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Delete File" ;
    ns1:invokes ns1:DeleteFile ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIReadFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Read File" ;
    ns1:invokes ns1:ReadFile ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIWriteFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Write File" ;
    ns1:invokes ns1:WriteFile ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OperatingSystemConfigurationComponent a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Configuration Component" ;
    ns1:definition "An component of the overall information necessary for the configuration of an operating system." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/03085025-n> ;
    rdfs:subClassOf ns1:OperatingSystemConfiguration ;
    skos:altLabel "Operating System Configuration Information",
        "System Configuration" .

ns1:OperatingSystemProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Process" ;
    ns1:definition "An operating system process, or system process, is a process running to perform operating system functions." ;
    rdfs:seeAlso <http://people.scs.carleton.ca/~maheshwa/courses/300/l4/node7.html> ;
    rdfs:subClassOf ns1:Process ;
    skos:altLabel "System Process" .

ns1:OperationalActivityMapping a ns1:OperationalActivityMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operational Activity Mapping" ;
    ns1:d3fend-id "D3-OAM" ;
    ns1:definition "Operational activity mapping identifies activities of the organization and the organization's suborganizations, groups, roles, and individuals that carry out the activities and then establishes the dependencies of the activities on the systems and people that perform those activities." ;
    ns1:enables ns1:Model ;
    ns1:kb-reference ns1:Reference-CatiaUAFPlugin ;
    ns1:synonym "Mission Mapping" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:OutboundNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Network Traffic" ;
    ns1:definition "Outbound traffic is network traffic originating from a host of interest (client), to another host (server)." ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:PersonalComputer a owl:Class ;
    rdfs:label "Personal Computer" ;
    ns1:definition "A personal computer (PC) is a multi-purpose computer whose size, capabilities, and price make it feasible for individual use. Personal computers are intended to be operated directly by an end user, rather than by a computer expert or technician. Unlike large, costly minicomputers and mainframes, time-sharing by many people at the same time is not used with personal computers. PCs have in practice become powerful enough that they may be shared by multiple users at any given time, though this is not common practice nor the primary purpose of a PC." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Personal_computer> ;
    rdfs:subClassOf ns1:ClientComputer .

ns1:Pipe a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pipe" ;
    ns1:definition "In Unix-like computer operating systems, a pipeline is a mechanism for inter-process communication using message passing.  In the strictest sense, a pipe is a single segment of a pipeline, allowing one process to pass information forward to another.  Network pipes allow processes on different hosts to interact." ;
    rdfs:isDefinedBy <http://www.linfo.org/pipe.html> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Pipeline_(Unix)> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "Pipeline" .

ns1:Pointer a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Pointer" ;
    ns1:definition "In computer science, a pointer is a programming language object, whose value refers to (or \"points to\") another value stored elsewhere in the computer memory using its memory address. A pointer references a location in memory, and obtaining the value stored at that location is known as dereferencing the pointer. As an analogy, a page number in a book's index could be considered a pointer to the corresponding page; dereferencing such a pointer would be done by flipping to the page with the given page number." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Pointer_(computer_programming)> ;
    rdfs:subClassOf ns1:DigitalInformation .

ns1:PrimaryStorage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Primary Storage" ;
    ns1:contains ns1:PageFrame,
        ns1:ProcessSegment ;
    ns1:definition "Primary memory of a computer is memory that is wired directly to the processor, consisting of RAM and possibly ROM.  These terms are used in contrast to mass storage devices and cache memory (although we may note that when a program accesses main memory, it is often actually interacting with a cache)." ;
    rdfs:isDefinedBy <https://www.memorymanagement.org/glossary/m.html#term-main-memory> ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Computer_data_storage#Primary_storage> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:HardwareDevice,
        ns1:Storage .

ns1:ProcessEviction a ns1:ProcessEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Eviction" ;
    ns1:d3fend-id "D3-PE" ;
    ns1:definition "Process eviction techniques terminate or remove running process." ;
    ns1:enables ns1:Evict ;
    ns1:kb-reference ns1:Reference-MalwareDetectionUsingLocalComputationalModels_CrowdstrikeInc ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:RemovableMediaDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Removable Media Device" ;
    ns1:definition "A removable media device is a hardware device used for computer storage and that is designed to be inserted and removed from the system.  It is distinct from other removable media in that all the hardware required to read the data are built into the device.  So USB flash drives and external hard drives are removable media devices, whereas tapes and disks are not, as they require additional hardware to perform read/write operations." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Removable_media> ;
    rdfs:subClassOf ns1:HardwareDevice .

ns1:SecondaryStorage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Secondary Storage" ;
    ns1:definition "Secondary memory (storage, hard disk) is the computer component holding information that does not need to be accessed quickly and that needs to be retained long-term." ;
    rdfs:isDefinedBy <https://whatis.techtarget.com/definition/memory> ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Computer_data_storage#Secondary_storage> ;
    rdfs:subClassOf ns1:HardwareDevice,
        ns1:Storage .

ns1:ServiceApplicationProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Application Process" ;
    rdfs:subClassOf ns1:ApplicationProcess .

ns1:Storage a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Storage" ;
    ns1:definition "Computer data storage, often called storage or memory, is a technology consisting of computer components and recording media used to retain digital data. It is a core function and fundamental component of computers. In the Von Neumann architecture, the CPU consists of two main parts: The control unit and the arithmetic / logic unit (ALU). The former controls the flow of data between the CPU and memory, while the latter performs arithmetic and logical operations on data." ;
    ns1:may-contain ns1:FileSystem ;
    ns1:synonym "Computer data storage",
        "Storage" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_data_storage> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:SystemMapping a ns1:SystemMapping,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Mapping" ;
    ns1:d3fend-id "D3-SYSM" ;
    ns1:definition "System mapping encompasses the techniques to identify the organization's systems, how they are configured and decomposed into subsystems and components, how they are dependent on one another, and where they are physically located." ;
    ns1:display-order 2 ;
    ns1:enables ns1:Model ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:SystemServiceSoftware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Service Software" ;
    ns1:contains ns1:OperatingSystemFile ;
    ns1:definition "Software services provided as part of the operating system, typically accessed through system calls." ;
    rdfs:seeAlso <https://www.os-book.com/OS9/slide-dir/PPT-dir/ch2.ppt> ;
    rdfs:subClassOf [ ],
        ns1:Software .

ns1:T1037 a owl:Class ;
    rdfs:label "Boot or Logon Initialization Scripts" ;
    ns1:attack-id "T1037" ;
    ns1:definition "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely." ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1071 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Layer Protocol" ;
    ns1:attack-id "T1071" ;
    ns1:definition "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server." ;
    ns1:may-transfer ns1:CertificateFile ;
    ns1:pref-label "Application Layer Protocol C2" ;
    ns1:produces ns1:OutboundInternetNetworkTraffic ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CommandAndControlTechnique .

ns1:T1134 a owl:Class ;
    rdfs:label "Access Token Manipulation" ;
    ns1:attack-id "T1134" ;
    ns1:definition "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1213 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Data from Information Repositories" ;
    ns1:accesses ns1:Resource ;
    ns1:attack-id "T1213" ;
    ns1:definition "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization." ;
    rdfs:subClassOf [ ],
        ns1:CollectionTechnique,
        ns1:DiscoveryTechnique .

ns1:T1505 a owl:Class ;
    rdfs:label "Server Software Component" ;
    ns1:attack-id "T1505" ;
    ns1:definition "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.(Citation: volexity_0day_sophos_FW)" ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1542 a owl:Class ;
    rdfs:label "Pre-OS Boot" ;
    ns1:attack-id "T1542" ;
    ns1:definition "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique .

ns1:T1543 a owl:Class ;
    rdfs:label "Create or Modify System Process" ;
    ns1:attack-id "T1543" ;
    ns1:definition "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons)" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1558 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Steal or Forge Kerberos Tickets" ;
    ns1:attack-id "T1558" ;
    ns1:definition "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as “realms”, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access." ;
    ns1:may-access ns1:KerberosTicket ;
    ns1:may-create ns1:KerberosTicket ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1578 a owl:Class ;
    rdfs:label "Modify Cloud Compute Infrastructure" ;
    ns1:attack-id "T1578" ;
    ns1:definition "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1596 a owl:Class ;
    rdfs:label "Search Open Technical Databases" ;
    ns1:attack-id "T1596" ;
    ns1:definition "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS)(Citation: Medium SSL Cert)(Citation: SSLShopper Lookup)(Citation: DigitalShadows CDN)(Citation: Shodan)" ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:UserLogonInitResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Logon Init Resource" ;
    ns1:definition "A user logon initialization resource contains information used to configure a user's environment when a user logs into a system." ;
    rdfs:subClassOf ns1:LocalResource .

ns1:WindowsRegistryKey a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Windows Registry Key" ;
    ns1:definition "Windows Registry Keys are container objects similar to folders that contain subkeys and/or data entries called values. A key can be a 'Registry Hive' when it is root key of a logical group of keys, subkeys, and values that has a set of supporting files loaded into memory when the operating system is started or a user logs in." ;
    ns1:may-contain ns1:WindowsRegistryKey,
        ns1:WindowsRegistryValue ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Windows_Registry#Keys_and_values>,
        <https://learn.microsoft.com/en-us/windows/win32/sysinfo/structure-of-the-registry> ;
    rdfs:seeAlso <https://learn.microsoft.com/en-us/windows/win32/sysinfo/registry-hives>,
        <https://schema.ocsf.io/objects/registry_key> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:SystemConfigurationDatabaseRecord .

ns1:AgentAuthentication a ns1:AgentAuthentication,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Agent Authentication" ;
    ns1:authenticates ns1:Agent ;
    ns1:d3fend-id "D3-AA" ;
    ns1:definition "Agent authentication is the process of verifying the identities of agents to ensure they are authorized and trustworthy participants within a system." ;
    ns1:enables ns1:Harden ;
    ns1:kb-reference ns1:Reference-NIST-Special-Publication-800-53-Revision-5 ;
    ns1:strengthens ns1:UserAccount ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DefensiveTechnique .

ns1:Database a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Database" ;
    ns1:definition "A database is an organized collection of data, generally stored and accessed electronically from a computer system. Where databases are more complex they are often developed using formal design and modeling techniques." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Database> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Database> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:Dependency a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Dependency" ;
    ns1:definition "A dependency is the relationship of relying on or being controlled by someone or something else.  This class reifies dependencies that correspond to the object property depends-on." ;
    ns1:dependent ns1:D3FENDCore ;
    ns1:provider ns1:D3FENDCore ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/14024833-n>,
        <https://www.cisa.gov/what-are-dependencies> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalInformationBearer .

ns1:DigitalArtifact a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Digital Artifact" ;
    ns1:definition "An information-bearing artifact (object) that is, or is encoded to be used with, a digital computer system. This concept is broad to include the literal instances of an artifact, or an implicit summarization of changes to or properties of other artifacts." ;
    ns1:display-baseurl "/dao/artifact/" ;
    ns1:synonym "Digital Asset" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Digital_artifactual_value>,
        <http://dbpedia.org/resource/Virtual_artifact>,
        <https://www.iso.org/obp/ui/#iso:std:iso-iec:19770:-1:ed-3:v1:en> ;
    rdfs:subClassOf ns1:Artifact .

ns1:DomainUserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Domain User Account" ;
    ns1:definition "A domain user account in Microsoft Windows (2000) defines that user's access to a logical group of network objects (computers, users, devices) that share the same Active Directory databases; that is, a user's access to a domain." ;
    rdfs:seeAlso <https://networkencyclopedia.com/global-user-account> ;
    rdfs:subClassOf ns1:UserAccount .

ns1:EndpointSensor a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Endpoint Sensor" ;
    ns1:definition "A sensor application installed on a endpoint (platform) to collect information on platform components." ;
    rdfs:seeAlso ns1:ComputerPlatform ;
    rdfs:subClassOf ns1:CyberSensor .

ns1:ExecutionIsolation a ns1:ExecutionIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Execution Isolation" ;
    ns1:d3fend-id "D3-EI" ;
    ns1:definition "Execution Isolation techniques prevent application processes from accessing non-essential system resources, such as memory, devices, or files." ;
    ns1:enables ns1:Isolate ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Host a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Host" ;
    ns1:contains ns1:Application ;
    ns1:definition "A host is a computer or other device, typically connected to a computer network. A network host may offer information resources, services, and applications to users or other nodes on the network. A network host is a network node that is assigned a network layer host address. Network hosts that participate in applications that use the client-server model of computing, are classified as server or client systems. Network hosts may also function as nodes in peer-to-peer applications, in which all nodes share and consume resources in an equipotent manner." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Host_(network)> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/device> ;
    rdfs:subClassOf [ ],
        ns1:ComputerNetworkNode ;
    skos:altLabel "Network Host" .

ns1:InputDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Input Device" ;
    ns1:definition "In computing, an input device is a piece of equipment used to provide data and control signals to an information processing system such as a computer or information appliance. Examples of input devices include keyboards, mouse, scanners, digital cameras, joysticks, and microphones. Input devices can be categorized based on:" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Input_device> ;
    rdfs:subClassOf ns1:HardwareDevice,
        ns1:LocalResource .

ns1:LocalResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Local Resource" ;
    ns1:definition "In computing, a system resource, or simply resource, is any physical or virtual component of limited availability within a computer system. Every device connected to a computer system is a resource. Every internal system component is a resource. Virtual system resources include files (concretely file handles), network connections (concretely network sockets), and memory areas. Managing resources is referred to as resource management, and includes both preventing resource leaks (releasing a resource when a process has finished using it) and dealing with resource contention (when multiple processes wish to access a limited resource)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/System_resource> ;
    rdfs:subClassOf ns1:Resource ;
    skos:altLabel "System Resource" .

ns1:NetworkIsolation a ns1:NetworkIsolation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Isolation" ;
    ns1:d3fend-id "D3-NI" ;
    ns1:definition "Network Isolation techniques prevent network hosts from accessing non-essential system network resources." ;
    ns1:enables ns1:Isolate ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:OSAPICreateThread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Create Thread" ;
    ns1:invokes ns1:CreateThread ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPIOpenFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Open File" ;
    ns1:invokes ns1:OpenFile ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:ObjectEviction a ns1:ObjectEviction,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Object Eviction" ;
    ns1:d3fend-id "D3-OE" ;
    ns1:definition "Terminate or remove an object from a host machine. This is the broadest class for object eviction." ;
    ns1:enables ns1:Evict ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:OperatingSystemConfigurationFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Configuration File" ;
    ns1:definition "An operating system configuration file is a file used to configure the operating system." ;
    rdfs:seeAlso ns1:ConfigurationFile,
        ns1:OperatingSystem,
        <http://dbpedia.org/resource/Configuration_file> ;
    rdfs:subClassOf ns1:ConfigurationFile,
        ns1:OperatingSystemFile ;
    skos:altLabel "System Configuration File" .

ns1:OutboundInternetDNSLookupTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet DNS Lookup Traffic" ;
    ns1:definition "Outbound internet DNS lookup traffic is network traffic using the DNS protocol on an outgoing connection initiated from a host within a network to a host outside the network." ;
    ns1:may-contain ns1:DNSLookup ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:DNSNetworkTraffic,
        ns1:OutboundInternetNetworkTraffic,
        ns1:OutboundNetworkTraffic .

ns1:OutboundInternetWebTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Web Traffic" ;
    ns1:definition "Outbound internet web traffic is network traffic that is: (a) on an outgoing connection initiated from a host within a network to a host outside the network, and (b) using a standard web protocol." ;
    ns1:may-contain ns1:URL ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:OutboundInternetNetworkTraffic,
        ns1:WebNetworkTraffic .

ns1:PeripheralFirmware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Peripheral Firmware" ;
    ns1:definition "Firmware that is installed on computer peripheral devices." ;
    rdfs:seeAlso ns1:Firmware,
        <http://dbpedia.org/resource/Peripheral> ;
    rdfs:subClassOf ns1:Firmware .

ns1:PlatformMonitoring a ns1:PlatformMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Platform Monitoring" ;
    ns1:d3fend-id "D3-PM" ;
    ns1:definition "Monitoring platform components such as operating systems software, hardware devices, or firmware." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """Platform monitoring consists of the analysis and monitoring of system level devices and low-level components, including hardware devices, to detect unauthorized modifications or suspicious activity.

Monitored platform components includes system files and embedded devices such as:

 * Kernel software modules
 * Boot process code and load logic
 * Operating system components and device files
 * System libraries and dynamically loaded files
 * Hardware device drivers
 * Embedded firmware devices""" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:PropertyListFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Property List File" ;
    ns1:definition "In the OS X, iOS, NeXTSTEP, and GNUstep programming frameworks, property list files are files that store serialized objects. Property list files use the filename extension .plist, and thus are often referred to as p-list files. Property list files are often used to store a user's settings. They are also used to store information about bundles and applications, a task served by the resource fork in the old Mac OS." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Property_list> ;
    rdfs:subClassOf ns1:ConfigurationFile ;
    skos:altLabel "Plist File" .

ns1:Record a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Record" ;
    ns1:definition "In computer science, a record (also called struct or compound data) is a basic data structure. A record is a collection of fields, possibly of different data types, typically in fixed number and sequence . The fields of a record may also be called members, particularly in object-oriented programming. Fields may also be called elements, though these risk confusion with the elements of a collection. A tuple may or may not be considered a record, and vice versa, depending on conventions and the specific programming language." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Record_(computer_science)> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:RestoreObject a ns1:RestoreObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Restore Object" ;
    ns1:d3fend-id "D3-RO" ;
    ns1:definition "Restoring an object for an entity to access. This is the broadest class for object restoral." ;
    ns1:enables ns1:Restore ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:ScheduledJob a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Job" ;
    ns1:contained-by ns1:JobSchedule ;
    ns1:created-by ns1:JobSchedulerSoftware ;
    ns1:definition "A task scheduler process is an operating system process that executes scheduled tasks (time-scheduling in the sense of wall clock time; not operating system scheduling of processes for multitasking)." ;
    ns1:modified-by ns1:JobSchedulerSoftware ;
    ns1:synonym "Scheduled Task",
        "Task Scheduler Process" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Cron>,
        <http://dbpedia.org/resource/Windows_Task_Scheduler>,
        <https://linux.die.net/man/1/at>,
        <https://schema.ocsf.io/objects/job> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:OperatingSystemProcess .

ns1:SymbolicLink a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Symbolic Link" ;
    ns1:addresses ns1:File ;
    ns1:definition "A symbolic link (also symlink or soft link) is a term for any file that contains a reference to another file or directory in the form of an absolute or relative path and that affects pathname resolution." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Symbolic_link> ;
    rdfs:subClassOf [ ],
        ns1:File,
        ns1:FileSystemLink ;
    skos:altLabel "Soft Link",
        "Softlink",
        "Symlink" .

ns1:T1137 a owl:Class ;
    rdfs:label "Office Application Startup" ;
    ns1:attack-id "T1137" ;
    ns1:definition "Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins." ;
    rdfs:subClassOf ns1:PersistenceTechnique .

ns1:T1548 a owl:Class ;
    rdfs:label "Abuse Elevation Control Mechanism" ;
    ns1:attack-id "T1548" ;
    ns1:definition "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk.(Citation: TechNet How UAC Works)(Citation: sudo man page 2018) An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.(Citation: OSX Keydnap malware)(Citation: Fortinet Fareit)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1553 a owl:Class ;
    rdfs:label "Subvert Trust Controls" ;
    ns1:attack-id "T1553" ;
    ns1:definition "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1555 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credentials from Password Stores" ;
    ns1:accesses ns1:PasswordStore ;
    ns1:attack-id "T1555" ;
    ns1:definition "Adversaries may search for common password storage locations to obtain user credentials.(Citation: F-Secure The Dukes) Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information." ;
    ns1:may-access ns1:DatabaseFile ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CredentialAccessTechnique .

ns1:T1590 a owl:Class ;
    rdfs:label "Gather Victim Network Information" ;
    ns1:attack-id "T1590" ;
    ns1:definition "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations." ;
    rdfs:subClassOf ns1:ReconnaissanceTechnique .

ns1:T1608 a owl:Class ;
    rdfs:label "Stage Capabilities" ;
    ns1:attack-id "T1608" ;
    ns1:definition "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities](https://attack.mitre.org/techniques/T1587)) or obtained ([Obtain Capabilities](https://attack.mitre.org/techniques/T1588)) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.(Citation: Volexity Ocean Lotus November 2020)(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)" ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:UserApplication a owl:Class ;
    rdfs:label "User Application" ;
    ns1:definition "A user application is executed for that an individual user on a user's personal computer or remotely by means of virtualization.  This is in contrast to service applications or enterprise software." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Enterprise_software> ;
    rdfs:subClassOf ns1:Application .

ns1:AccessMediation a ns1:AccessMediation,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Mediation" ;
    ns1:d3fend-id "D3-AMED" ;
    ns1:definition "Access mediation is the process of granting or denying specific requests to: 1) obtain and use information and related information processing services; and 2) enter specific physical facilities (e.g., Federal buildings, military establishments, border crossing entrances)." ;
    ns1:enables ns1:Isolate ;
    ns1:kb-reference ns1:Reference-CNNSI-4009 ;
    ns1:synonym "Access Control" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Access_control>,
        <https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1451869>,
        <https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.201-2.pdf>,
        <https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-160v1r1.pdf>,
        <https://www.cs.cmu.edu/afs/cs/usr/bsy/security/CSC-STD-001-83.txt> ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:AssetInventory a ns1:AssetInventory,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Asset Inventory" ;
    ns1:d3fend-id "D3-AI" ;
    ns1:definition "Asset inventorying identifies and records the organization's assets and enriches each inventory item with knowledge about their vulnerabilities." ;
    ns1:display-order 1 ;
    ns1:enables ns1:Model ;
    ns1:synonym "Asset Discovery",
        "Asset Inventorying" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:AuthenticationService a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Authentication Service" ;
    ns1:definition "An authentication service is a mechanism, analogous to the use of passwords on time-sharing systems, for the secure authentication of the identity of network clients by servers and vice versa, without presuming the operating system integrity of either (e.g., Kerberos)." ;
    rdfs:isDefinedBy <https://www.gartner.com/en/information-technology/glossary/authentication-service> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Authentication> ;
    rdfs:subClassOf ns1:ServiceApplicationProcess .

ns1:CertificateFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Certificate File" ;
    ns1:contains ns1:Certificate ;
    ns1:definition "A file containing a digital certificate. In cryptography, a public key certificate (also known as a digital certificate or identity certificate) is an electronic document used to prove the ownership of a public key. The certificate includes information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Public_key_certificate> ;
    rdfs:subClassOf [ ],
        ns1:File .

ns1:ComputerNetworkNode a owl:Class ;
    rdfs:label "Computer Network Node" ;
    ns1:definition "A network node running on a computer platform." ;
    rdfs:subClassOf ns1:ComputerPlatform,
        ns1:NetworkNode .

ns1:DecoyObject a ns1:DecoyObject,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Decoy Object" ;
    ns1:d3fend-id "D3-DO" ;
    ns1:definition "A Decoy Object is created and deployed for the purposes of deceiving attackers." ;
    ns1:enables ns1:Deceive ;
    ns1:kb-article """## Technique Overview
Decoy objects are typically configured with detectable means of communication but do not have any legitimate business purpose. Any communication via or to these objects should be logged and analyzed to find potential indicators of compromise for a possible past or future attack against other systems.""" ;
    ns1:synonym "Lure" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Directory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Directory" ;
    ns1:definition "In computing, a directory is a file system cataloging structure which contains references to other computer files, and possibly other directories. On many computers, directories are known as folders, or drawers to provide some relevancy to a workbench or the traditional office file cabinet." ;
    ns1:may-contain ns1:File ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Directory_(computing)> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:InboundInternetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Inbound Internet Network Traffic" ;
    ns1:definition "Inbound internet traffic is network traffic from a host outside a given network initiated on an incoming connection to a host inside that network." ;
    ns1:produces ns1:NetworkTraffic ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf [ ],
        ns1:InboundNetworkTraffic,
        ns1:InternetNetworkTraffic .

ns1:NetworkNode a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Node" ;
    ns1:definition "In telecommunications networks, a node (Latin nodus, 'knot') is either a redistribution point or a communication endpoint. The definition of a node depends on the network and protocol layer referred to. A physical network node is an electronic device that is attached to a network, and is capable of creating, receiving, or transmitting information over a communications channel. A passive distribution point such as a distribution frame or patch panel is consequently not a node." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Node_(networking)> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:OSAPIAllocateMemory a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Allocate Memory" ;
    ns1:invokes ns1:AllocateMemory ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OSAPICreateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Create Process" ;
    ns1:invokes ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:OutboundInternetEncryptedTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Encrypted Traffic" ;
    ns1:definition "Outbound internet encrypted traffic is encrypted network traffic on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:OutboundInternetNetworkTraffic .

ns1:SourceCodeHardening a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Source Code Hardening" ;
    ns1:d3fend-id "D3-SCH" ;
    ns1:definition "Hardening source code with the intention of making it more difficult to exploit and less error prone." ;
    ns1:enables ns1:Harden ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:T1053 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Scheduled Task/Job" ;
    ns1:attack-id "T1053" ;
    ns1:definition "The sub-techniques of this are specific software implementations of scheduling capabilities" ;
    ns1:executes ns1:ScheduledJob ;
    ns1:invokes ns1:CreateProcess ;
    ns1:modifies ns1:JobSchedule ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:ExecutionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1098 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Account Manipulation" ;
    ns1:attack-id "T1098" ;
    ns1:definition "Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.(Citation: FireEye SMOKEDHAM June 2021) These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials." ;
    ns1:modifies ns1:UserAccount ;
    rdfs:subClassOf [ ],
        ns1:PersistenceTechnique .

ns1:T1588 a owl:Class ;
    rdfs:label "Obtain Capabilities" ;
    ns1:attack-id "T1588" ;
    ns1:definition "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle." ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:Thread a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Thread" ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:Application a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application" ;
    ns1:definition "A program that gives a computer instructions that provide the user with tools to accomplish a task; \"he has tried several different word processing applications\".  Distinct from system software that is intrinsically part of the operating system.  An application can be made up of executable files, configuration files, shared libraries, etc." ;
    ns1:may-contain ns1:ApplicationConfiguration ;
    rdfs:seeAlso <http://dbpedia.org/resource/Application_software>,
        <http://wordnet-rdf.princeton.edu/id/06582286-n> ;
    rdfs:subClassOf [ ],
        ns1:Software .

ns1:ApplicationHardening a ns1:ApplicationHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Hardening" ;
    ns1:d3fend-id "D3-AH" ;
    ns1:definition "Application Hardening makes an executable application more resilient to a class of exploits which either introduce new code or execute unwanted existing code. These techniques may be applied at compile-time or on an application binary." ;
    ns1:enables ns1:Harden ;
    ns1:kb-article """## Technique Overview

Exploits may, for example, rely on knowledge of addresses in a process's memory, they may alter memory contents, and they may cause a program to use instructions in a way that they were not intended.  By, for example, including code that dynamically changes the memory address of data or code on each run, introducing logic to validating the memory contents before certain potentially dangerous flows are executed, or monitoring a program for unusual sequence of instructions, this makes it harder for an attacker to craft a working exploit.""" ;
    ns1:synonym "Process Hardening" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:DocumentFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Document File" ;
    ns1:definition "A document is a written, drawn, presented or recorded representation of thoughts. An electronic document file is usually used to describe a primarily textual file, along with its structure and design, such as fonts, colors and additional images." ;
    ns1:may-contain ns1:ExecutableScript ;
    rdfs:seeAlso <http://dbpedia.org/resource/Document> ;
    rdfs:subClassOf [ ],
        ns1:File .

ns1:Password a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Password" ;
    ns1:definition "A password, sometimes called a passcode, is a memorized secret, typically a string of characters, usually used to confirm the identity of a user. Using the terminology of the NIST Digital Identity Guidelines, the secret is memorized by a party called the claimant while the party verifying the identity of the claimant is called the verifier. When the claimant successfully demonstrates knowledge of the password to the verifier through an established authentication protocol, the verifier is able to infer the claimant's identity." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Password> ;
    rdfs:subClassOf ns1:Credential ;
    skos:altLabel "Passcode" .

ns1:ResourceDevelopmentTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource Development Technique" ;
    ns1:enables ns1:TA0042 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:T1003 a owl:Class ;
    rdfs:label "OS Credential Dumping" ;
    ns1:attack-id "T1003" ;
    ns1:definition "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information." ;
    rdfs:subClassOf ns1:CredentialAccessTechnique .

ns1:T1021 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Remote Services" ;
    ns1:attack-id "T1021" ;
    ns1:definition "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user." ;
    ns1:produces ns1:IntranetNetworkTraffic ;
    rdfs:subClassOf [ ],
        ns1:LateralMovementTechnique .

ns1:T1552 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Unsecured Credentials" ;
    ns1:accesses ns1:Credential ;
    ns1:attack-id "T1552" ;
    ns1:definition "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)),  or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).(Citation: Brining MimiKatz to Unix)" ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique .

ns1:T1583 a owl:Class ;
    rdfs:label "Acquire Infrastructure" ;
    ns1:attack-id "T1583" ;
    ns1:definition "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.(Citation: Free Trial PurpleUrchin) Additionally, botnets are available for rent or purchase." ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:T1584 a owl:Class ;
    rdfs:label "Compromise Infrastructure" ;
    ns1:attack-id "T1584" ;
    ns1:definition "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage." ;
    rdfs:subClassOf ns1:ResourceDevelopmentTechnique .

ns1:AccessControlConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Control Configuration" ;
    ns1:definition "Information about what access permissions are granted to particular users for particular objects" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Access-control_list> ;
    rdfs:subClassOf ns1:ConfigurationResource .

ns1:ExecutableBinary a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Binary" ;
    ns1:contains ns1:ImageCodeSegment,
        ns1:ImageDataSegment ;
    ns1:definition "An executable binary contains machine code instructions for a physical CPU. D3FEND also considers byte code for a virtual machine to be binary code.  This is in contrast to executable scripts written in a scripting language." ;
    ns1:may-interpret ns1:ExecutableScript ;
    rdfs:seeAlso <http://dbpedia.org/resource/Executable> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:ExecutableFile .

ns1:FileSystemMetadata a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File System Metadata" ;
    ns1:definition "Metadata about the files and directories in a file system.  For example file name, file length, time modified, group and user ids, and other file attributes." ;
    rdfs:seeAlso <http://dbpedia.org/resource/File_system#Metadata> ;
    rdfs:subClassOf ns1:Metadata .

ns1:Identifier a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Identifier" ;
    ns1:definition "An identifier is a name that identifies (that is, labels the identity of) either a unique object or a unique class of objects, where the \"object\" or class may be an idea, physical [countable] object (or class thereof), or physical [noncountable] substance (or class thereof). The abbreviation ID often refers to identity, identification (the process of identifying), or an identifier (that is, an instance of identification). An identifier may be a word, number, letter, symbol, or any combination of those." ;
    ns1:identifies ns1:Artifact ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Identifier> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformation ;
    skos:altLabel "ID" .

ns1:InternetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Internet Network Traffic" ;
    ns1:definition "Internet network traffic is network traffic that crosses a boundary between networks. [This is the general sense of inter-networking; It may or may not cross to or from the Internet]" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:IntranetAdministrativeNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Administrative Network Traffic" ;
    ns1:definition "Intranet administrative network traffic is administrative network traffic that does not cross a given network's boundaries and uses a standard administrative protocol." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:AdministrativeNetworkTraffic,
        ns1:IntranetNetworkTraffic .

ns1:Network a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network" ;
    ns1:definition "A network is a group of computers that use a set of common communication protocols over digital interconnections for the purpose of sharing resources located on or provided by the network nodes. The interconnections between nodes are formed from a broad spectrum of telecommunication network technologies, based on physically wired, optical, and wireless radio-frequency methods that may be arranged in a variety of network topologies." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/03826490-n> ;
    rdfs:subClassOf ns1:DigitalInformationBearer ;
    skos:altLabel "Computer Network" .

ns1:NetworkResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Resource" ;
    ns1:definition "In computing, a shared resource, or network share, is a computer resource made available from one host to other hosts on a computer network. It is a device or piece of information on a computer that can be remotely accessed from another computer, typically via a local area network or an enterprise intranet, transparently as if it were a resource in the local machine.Network sharing is made possible by inter-process communication over the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Shared_resource> ;
    rdfs:subClassOf ns1:RemoteResource ;
    skos:altLabel "Shared Resource" .

ns1:OperatingSystemFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System File" ;
    ns1:definition "An operating system file is a file that is part of, or used to store information about, the operating system itself." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Operating_system>,
        <http://dbpedia.org/resource/System_file> ;
    rdfs:subClassOf ns1:File .

ns1:OperatingSystemMonitoring a ns1:OperatingSystemMonitoring,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Operating System Monitoring" ;
    ns1:d3fend-id "D3-OSM" ;
    ns1:definition "The operating system software, for D3FEND's purposes, includes the kernel and its process management functions, hardware drivers, initialization or boot logic. It also includes and other key system daemons and their configuration. The monitoring or analysis of these components for unauthorized activity constitute **Operating System Monitoring**." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview

"An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs." [1]

Operating System Monitoring Techniques have varied implementations including built-in kernel modules, third-party privileged system daemons, or even standard systems administration tools included with an operating system.

1. http://dbpedia.org/resource/Operating_system""" ;
    ns1:kb-reference ns1:Reference-HostIntrusionPreventionSystemUsingSoftwareAndUserBehaviorAnalysis_SophosLtd,
        ns1:Reference-UserActivityFromClearingEventLogs_MITRE ;
    rdfs:subClassOf ns1:PlatformMonitoring .

ns1:StackFrame a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Stack Frame" ;
    ns1:definition "A machine-dependent and application-binary-dependent (ABI-dependent) data structure containing subroutine state information including the arguments passed into the routine, the return address back to the routine's caller, and space for local variables of the routine." ;
    ns1:may-contain ns1:Pointer,
        ns1:StackFrameCanary ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Call_stack#Structure> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Call_stack> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:StackComponent ;
    skos:altLabel "Activation Frame",
        "Activation Record" .

ns1:T1556 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Modify Authentication Process" ;
    ns1:attack-id "T1556" ;
    ns1:definition "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts](https://attack.mitre.org/techniques/T1078)." ;
    ns1:modifies ns1:AuthenticationService ;
    rdfs:subClassOf [ ],
        ns1:CredentialAccessTechnique,
        ns1:DefenseEvasionTechnique .

ns1:ConfigurationResource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Configuration Resource" ;
    ns1:definition "A resource used to configure a system including software and hardware." ;
    rdfs:subClassOf ns1:Resource .

ns1:OSAPICreateFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "OS API Create File" ;
    ns1:invokes ns1:CreateFile ;
    rdfs:subClassOf [ ],
        ns1:OSAPISystemFunction .

ns1:PlatformHardening a ns1:PlatformHardening,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Platform Hardening" ;
    ns1:d3fend-id "D3-PH" ;
    ns1:definition """Hardening components of a Platform with the intention of making them more difficult to exploit.

Platforms includes components such as:
* BIOS UEFI Subsystems
* Hardware security devices such as Trusted Platform Modules
* Boot process logic or code
* Kernel software components""" ;
    ns1:enables ns1:Harden ;
    ns1:synonym "Endpoint Hardening",
        "System Hardening" ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:ProcessAnalysis a ns1:ProcessAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Analysis" ;
    ns1:d3fend-id "D3-PA" ;
    ns1:definition "Process Analysis consists of observing a running application process and analyzing it to watch for certain behaviors or conditions which may indicate adversary activity. Analysis can occur inside of the process or through a third-party monitoring application. Examples include monitoring system and privileged calls, monitoring process initiation chains, and memory boundary allocations." ;
    ns1:enables ns1:Detect ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:ProcessCodeSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Code Segment" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "A process code segment, also known as a text segment or simply as text, is a portion of the program's virtual address space that contains executable instructions and corresponds to the loaded image code segment. Includes additional sections such as an import table." ;
    ns1:may-contain ns1:ProcessSegment ;
    rdfs:seeAlso ns1:ImageCodeSegment,
        <http://dbpedia.org/resource/Code_segment> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:ProcessSegment ;
    skos:altLabel "Process Text Segment" .

ns1:ReconnaissanceTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Reconnaissance Technique" ;
    ns1:enables ns1:TA0043 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:ServiceApplication a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Service Application" ;
    ns1:definition "An application that provides a set of software functionalities so that multiple clients who can reuse the functionality, provided they are authorized for use of the service." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Server_(computing)>,
        <http://dbpedia.org/resource/Service_(systems_architecture)> ;
    rdfs:subClassOf ns1:Application .

ns1:T1036 a owl:Class ;
    rdfs:label "Masquerading" ;
    ns1:attack-id "T1036" ;
    ns1:definition "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1070 a owl:Class ;
    rdfs:label "Indicator Removal" ;
    ns1:attack-id "T1070" ;
    ns1:definition "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:ApplicationConfiguration a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Application Configuration" ;
    ns1:definition "Information used to configure the parameters and initial settings for an application." ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/05739724-n> ;
    rdfs:subClassOf ns1:ConfigurationResource .

ns1:EventLog a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Event Log" ;
    ns1:contains ns1:DigitalEventRecord ;
    ns1:definition "Event logs record events taking place in the execution of a system in order to provide an audit trail that can be used to understand the activity of the system and to diagnose problems. They are essential to understand the activities of complex systems, particularly in the case of applications with little user interaction (such as server applications)." ;
    ns1:synonym "Digital Event Log" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Log_file#Event_logs> ;
    rdfs:subClassOf [ ],
        ns1:Log .

ns1:ExfiltrationTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Exfiltration Technique" ;
    ns1:enables ns1:TA0010 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:MemoryBlock a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Memory Block" ;
    ns1:contains ns1:MemoryWord ;
    ns1:definition "In computing (specifically data transmission and data storage), a block, sometimes called a physical record, is a sequence of bytes or bits, usually containing some whole number of records, having a maximum length; a block size. Data thus structured are said to be blocked. The process of putting data into blocks is called blocking, while deblocking is the process of extracting data from blocks. Blocked data is normally stored in a data buffer and read or written a whole block at a time." ;
    ns1:may-contain ns1:Record ;
    rdfs:isDefinedBy <https://dbpedia.org/page/Block_(data_storage)> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:MemoryExtent .

ns1:T1059 a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command and Scripting Interpreter" ;
    ns1:attack-id "T1059" ;
    ns1:definition "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)." ;
    ns1:executes ns1:ExecutableScript ;
    rdfs:subClassOf [ ],
        ns1:ExecutionTechnique .

ns1:T1562 a owl:Class ;
    rdfs:label "Impair Defenses" ;
    ns1:attack-id "T1562" ;
    ns1:definition "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:URL a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "URL" ;
    ns1:addresses ns1:Resource ;
    ns1:definition "A Uniform Resource Locator (URL), commonly informally termed a web address (a term which is not defined identically) is a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it.A URL is a specific type of Uniform Resource Identifier (URI), although many people use the two terms interchangeably. A URL implies the means to access an indicated resource, which is not true of every URI. URLs occur most commonly to reference web pages (http), but are also used for file transfer (ftp), email (mailto), database access (JDBC), and many other applications." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Uniform_Resource_Locator> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/url> ;
    rdfs:subClassOf [ ],
        ns1:Identifier ;
    skos:altLabel "Uniform Resource Locator" .

ns1:AccessToken a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Access Token" ;
    ns1:definition "In computer systems, an access token contains the security credentials for a login session and identifies the user, the user's groups, the user's privileges, and, in some cases, a particular application. Typically one may be asked to enter the access token (e.g. 40 random characters) rather than the usual password (it therefore should be kept secret just like a password)." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Access_token> ;
    rdfs:subClassOf ns1:Credential ;
    skos:altLabel "Ticket",
        "Token" .

ns1:DigitalInformation a owl:Class ;
    rdfs:label "Digital Information" ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:IntranetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Intranet Network Traffic" ;
    ns1:definition "Intranet network traffic is network traffic traversing that does not traverse a given network's boundaries." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Intranet> ;
    rdfs:subClassOf ns1:NetworkTraffic .

ns1:T1055 a owl:Class ;
    rdfs:label "Process Injection" ;
    ns1:attack-id "T1055" ;
    ns1:definition "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:T1564 a owl:Class ;
    rdfs:label "Hide Artifacts" ;
    ns1:attack-id "T1564" ;
    ns1:definition "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)" ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:UserBehaviorAnalysis a ns1:UserBehaviorAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Behavior Analysis" ;
    ns1:d3fend-id "D3-UBA" ;
    ns1:definition "User behavior analytics (\"UBA\") as defined by Gartner, is a cybersecurity process about detection of insider threats, targeted attacks, and financial fraud. UBA solutions look at patterns of human behavior, and then apply algorithms and statistical analysis to detect meaningful anomalies from those patterns-anomalies that indicate potential threats.' Instead of tracking devices or security events, UBA tracks a system's users. Big data platforms are increasing UBA functionality by allowing them to analyze petabytes worth of data to detect insider threats and advanced persistent threats." ;
    ns1:enables ns1:Detect ;
    ns1:kb-article """## Technique Overview

Some techniques monitor patterns of human behavior and then apply algorithms and to identify patterns such as repeated login attempts from a single IP address or large file downloads, or abnormal accesses.

Other techniques may have explicit or rigid definitions of "bad behavior" which are then matched against instances in a computer network environment.""" ;
    ns1:synonym "Credential Monitoring",
        "UBA" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_behavior_analytics> ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:Email a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Email" ;
    ns1:definition "An email, or email message, is a document that is sent between computer users across computer networks." ;
    ns1:may-contain ns1:File,
        ns1:URL ;
    rdfs:seeAlso <http://dbpedia.org/resource/Email>,
        <https://schema.ocsf.io/objects/email> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DocumentFile .

ns1:Firmware a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Firmware" ;
    ns1:definition "In electronic systems and computing, firmware is a type of software that provides control, monitoring and data manipulation of engineered products and systems. Typical examples of devices containing firmware are embedded systems (such as traffic lights, consumer appliances, remote controls and digital watches), computers, computer peripherals, mobile phones, and digital cameras. The firmware contained in these devices provides the low-level control program for the device." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Firmware> ;
    rdfs:subClassOf ns1:Software .

ns1:InitialAccessTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Initial Access Technique" ;
    ns1:enables ns1:TA0001 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:Resource a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Resource" ;
    ns1:definition "In computing, a system resource, or simply resource, is any physical or virtual component of limited availability within a computer system. Every device connected to a computer system is a resource. Every internal system component is a resource. Virtual system resources include files (concretely file handles), network connections (concretely network sockets), and memory areas. Managing resources is referred to as resource management, and includes both preventing resource leaks (releasing a resource when a process has finished using it) and dealing with resource contention (when multiple processes wish to access a limited resource)." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/System_resource> ;
    rdfs:subClassOf ns1:DigitalInformationBearer .

ns1:T1574 a owl:Class ;
    rdfs:label "Hijack Execution Flow" ;
    ns1:attack-id "T1574" ;
    ns1:definition "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:OffensiveTechnique a owl:Class ;
    rdfs:label "Offensive Technique" ;
    ns1:display-baseurl "/offensive-technique/attack/" ;
    rdfs:isDefinedBy <https://attack.mitre.org/docs/ATTACK_Design_and_Philosophy_March_2020.pdf> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:CyberTechnique .

ns1:SystemConfigurationDatabase a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Database" ;
    ns1:definition "A database used to hold system configuration data." ;
    rdfs:subClassOf ns1:Database .

ns1:T1027 a owl:Class ;
    rdfs:label "Obfuscated Files or Information" ;
    ns1:attack-id "T1027" ;
    ns1:definition "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique .

ns1:T1218 a owl:Class ;
    rdfs:label "System Binary Proxy Execution" ;
    ns1:attack-id "T1218" ;
    ns1:definition "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands." ;
    rdfs:subClassOf ns1:DefenseEvasionTechnique,
        ns1:ExecutionTechnique .

ns1:Server a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Server" ;
    ns1:definition "In computing, a server is a piece of computer hardware or software (computer program) that provides functionality for other programs or devices, called \"clients\". This architecture is called the client-server model. Servers can provide various functionalities, often called \"services\", such as sharing data or resources among multiple clients, or performing computation for a client. A single server can serve multiple clients, and a single client can use multiple servers. A client process may run on the same device or may connect over a network to a server on a different device. Typical servers are database servers, file servers, mail servers, print servers, web servers, game servers, and application servers." ;
    ns1:manages ns1:ServiceApplicationProcess ;
    ns1:runs ns1:ServiceApplication ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Server_(computing)> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:Host .

ns1:T1547 a owl:Class ;
    rdfs:label "Boot or Logon Autostart Execution" ;
    ns1:attack-id "T1547" ;
    ns1:definition "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel." ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:ProcessSegment a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process Segment" ;
    ns1:definition "Process segments are distinct partitions of the memory space of a running process.  Heap, data, code, and stack segments are examples of process segments." ;
    ns1:synonym "Process Memory" ;
    rdfs:subClassOf ns1:BinarySegment .

ns1:CollectionTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Collection Technique" ;
    ns1:enables ns1:TA0009 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:Credential a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential" ;
    ns1:authenticates ns1:UserAccount ;
    ns1:definition "A credential is a physical/tangible object, a piece of knowledge, or a facet of a person's physical being that enables an individual access to a given physical facility or computer-based information system. Typically, credentials can be something a person knows (such as a number or PIN), something they have (such as an access badge), something they are (such as a biometric feature), something they do (measurable behavioral patterns) or some combination of these items. This is known as multi-factor authentication. The typical credential is an access card or key-fob, and newer software can also turn users' smartphones into access devices." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Access_control#Credential> ;
    rdfs:seeAlso <http://dbpedia.org/resource/Access_control> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:NetworkTrafficAnalysis a ns1:NetworkTrafficAnalysis,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic Analysis" ;
    ns1:d3fend-id "D3-NTA" ;
    ns1:definition "Analyzing intercepted or summarized computer network traffic to detect unauthorized activity." ;
    ns1:enables ns1:Detect ;
    rdfs:subClassOf [ ],
        ns1:DefensiveTechnique .

ns1:SharedLibraryFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Shared Library File" ;
    ns1:definition "A shared library file is a file that is intended to be shared by executable files and further shared library (object) files. Modules used by a program are loaded from individual shared objects into memory at load time or runtime, rather than being copied by a linker when it creates a single monolithic executable file for the program" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Library_(computing)#Shared_libraries> ;
    rdfs:subClassOf ns1:ObjectFile ;
    skos:altLabel "Shared Library",
        "Shared Object" .

ns1:T1546 a owl:Class ;
    rdfs:label "Event Triggered Execution" ;
    ns1:attack-id "T1546" ;
    ns1:definition "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)" ;
    rdfs:subClassOf ns1:PersistenceTechnique,
        ns1:PrivilegeEscalationTechnique .

ns1:ExecutableFile a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable File" ;
    ns1:contains ns1:Subroutine ;
    ns1:definition "In computing, executable code or an executable file or executable program, sometimes simply an executable, causes a computer \"to perform indicated tasks according to encoded instructions,\" as opposed to a data file that must be parsed by a program to be meaningful. These instructions are traditionally machine code instructions for a physical CPU. However, in a more general sense, a file containing instructions (such as bytecode) for a software interpreter may also be considered executable; even a scripting language source file may therefore be considered executable in this sense. The exact interpretation depends upon the use; while the term often refers only to machine code files, in the context of protection against computer viruses all files which cause potentially hazardous instruction" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Executable> ;
    rdfs:subClassOf [ ],
        ns1:File ;
    skos:altLabel "Executable" .

ns1:ExecutableScript a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Executable Script" ;
    ns1:definition "An executable script is written in a scripting language and interpreted at run time. This is in contrast with an executable binary, which contains machine code instructions for a physical CPU or byte code for a virtual machine." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Executable> ;
    rdfs:subClassOf ns1:ExecutableFile .

ns1:HardwareDevice a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Hardware Device" ;
    ns1:definition "Hardware devices are the physical artifacts that constitute a network or computer system. Hardware devices are the physical parts or components of a computer, such as the monitor, keyboard, computer data storage, hard disk drive (HDD), graphic cards, sound cards, memory (RAM), motherboard, and so on, all of which are tangible physical objects. By contrast, software is instructions that can be stored and run by hardware. Hardware is directed by the software to execute any command or instruction. A combination of hardware and software forms a usable computing system." ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Computer_hardware> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/device_hw_info> ;
    rdfs:subClassOf ns1:DigitalInformationBearer,
        ns1:PhysicalArtifact .

ns1:ImpactTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Impact Technique" ;
    ns1:enables ns1:TA0040 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:LateralMovementTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Lateral Movement Technique" ;
    ns1:enables ns1:TA0008 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:OutboundInternetNetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Outbound Internet Network Traffic" ;
    ns1:definition "Outbound internet network traffic is network traffic on an outgoing connection initiated from a host within a network to a host outside the network." ;
    rdfs:seeAlso <http://dbpedia.org/resource/Internetworking> ;
    rdfs:subClassOf ns1:InternetNetworkTraffic,
        ns1:OutboundNetworkTraffic .

ns1:Software a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Software" ;
    ns1:contains ns1:ExecutableFile ;
    ns1:definition "Computer software, or simply software, is that part of a computer system that consists of encoded information or computer instructions, in contrast to the physical hardware from which the system is built." ;
    ns1:implements ns1:Subroutine ;
    ns1:instructs ns1:Process ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Software> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalInformation .

ns1:SystemConfigurationDatabaseRecord a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Configuration Database Record" ;
    ns1:definition "A database record holding information used to configure the services, parameters, and initial settings for an operating system." ;
    rdfs:subClassOf ns1:ConfigurationDatabaseRecord,
        ns1:OperatingSystemConfigurationComponent .

ns1:UserAccount a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "User Account" ;
    ns1:definition "A user account allows a user to authenticate to a system and potentially to receive authorization to access resources provided by or connected to that system; however, authentication does not imply authorization. To log into an account, a user is typically required to authenticate oneself with a password or other credentials for the purposes of accounting, security, logging, and resource management." ;
    ns1:identified-by ns1:DigitalIdentity ;
    ns1:used-by ns1:Agent ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/User_(computing)#User_account> ;
    rdfs:seeAlso <http://dbpedia.org/resource/User_account>,
        <https://schema.ocsf.io/objects/user> ;
    rdfs:subClassOf [ ],
        [ ],
        ns1:DigitalInformationBearer .

ns1:CommandAndControlTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Command and Control Technique" ;
    ns1:enables ns1:TA0011 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:DefensiveTechnique a ns1:DefensiveTechnique,
        owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Defensive Technique" ;
    ns1:definition "A method which makes a computer system more difficult to attack." ;
    ns1:display-baseurl "/technique/" ;
    ns1:synonym "Countermeasure Technique",
        "Defensive Capability Feature",
        "Technical Security Control" ;
    rdfs:seeAlso <https://csrc.nist.gov/glossary/term/security_control> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:CyberTechnique .

ns1:Process a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Process" ;
    ns1:contains ns1:ProcessImage ;
    ns1:definition "A process is an instance of a computer program that is being executed. It contains the program code and its current activity. Depending on the operating system (OS), a process may be made up of multiple threads of execution that execute instructions concurrently. A computer program is a passive collection of instructions, while a process is the actual execution of those instructions. Several processes may be associated with the same program; for example, opening up several instances of the same program often means more than one process is being executed." ;
    ns1:instructed-by ns1:Software ;
    ns1:may-execute ns1:Thread ;
    ns1:process-image-path ns1:ExecutableBinary ;
    ns1:process-user ns1:UserAccount ;
    ns1:uses ns1:Resource ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/Process_(computing)> ;
    rdfs:seeAlso <https://schema.ocsf.io/objects/process> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        [ ],
        ns1:DigitalInformationBearer .

ns1:CredentialAccessTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Credential Access Technique" ;
    ns1:accesses ns1:Credential ;
    ns1:enables ns1:TA0006 ;
    ns1:may-access ns1:PasswordFile ;
    ns1:may-invoke ns1:CreateProcess ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:CreateProcess a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Create Process" ;
    ns1:definition "A process spawn refers to a function that loads and executes a new child process.The current process may wait for the child to terminate or may continue to execute asynchronously. Creating a new subprocess requires enough memory in which both the child process and the current program can execute. There is a family of spawn functions in DOS, inherited by Microsoft Windows. There is also a different family of spawn functions in an optional extension of the POSIX standards.  Fork-exec is another technique combining two Unix system calls, which can effect a process spawn.",
        "Creates a process.",
        "Executes a process." ;
    ns1:executes ns1:Process ;
    rdfs:seeAlso <http://dbpedia.org/resource/Fork%E2%80%93exec>,
        <http://dbpedia.org/resource/Spawn_(computing)>,
        <https://dbpedia.org/page/Fork%E2%80%93exec>,
        <https://dbpedia.org/page/Spawn_(computing)>,
        <https://docs.microsoft.com/en-us/windows/win32/procthread/creating-processes>,
        <https://learn.microsoft.com/en-us/windows/win32/procthread/creating-processes> ;
    rdfs:subClassOf [ ],
        ns1:SystemCall ;
    skos:altLabel "Execute Process",
        "Process Spawn",
        "Spawn Process" .

ns1:OSAPISystemFunction a owl:Class ;
    rdfs:label "OS API System Function" ;
    ns1:definition "Indirect System calls are made through an OS-specific library (like glibc in Linux) that provides a higher-level API for the system calls." ;
    ns1:synonym "Indirect System Call" ;
    rdfs:subClassOf ns1:OSAPIFunction .

ns1:NetworkTraffic a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Network Traffic" ;
    ns1:contains ns1:NetworkPackets ;
    ns1:definition "Network traffic or data traffic is the data, or alternatively the amount of data, moving across a network at a given point of time.  Network data in computer networks is mostly encapsulated in network packets, which provide the load in the network." ;
    ns1:may-contain ns1:DomainName ;
    ns1:originates-from ns1:PhysicalLocation ;
    rdfs:seeAlso <http://dbpedia.org/resource/Network_traffic>,
        <https://schema.ocsf.io/objects/network_traffic> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:DigitalInformationBearer ;
    skos:altLabel "Data Traffic" .

ns1:DiscoveryTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Discovery Technique" ;
    ns1:enables ns1:TA0007 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:Subroutine a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Subroutine" ;
    ns1:definition "In different programming languages, a subroutine may be called a procedure, a function, a routine, a method, or a subprogram. The generic term callable unit is sometimes used." ;
    ns1:synonym "Method",
        "Semantic Subroutine",
        "Software Function" ;
    rdfs:seeAlso <http://dbpedia.org/resource/Subroutine> ;
    rdfs:subClassOf ns1:Software .

ns1:ExecutionTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Execution Technique" ;
    ns1:enables ns1:TA0002 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:PrivilegeEscalationTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Privilege Escalation Technique" ;
    ns1:enables ns1:TA0004 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:SystemCall a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "System Call" ;
    ns1:definition "A system call is the programmatic way in which a computer program requests a service from the kernel of the operating system it is executed on. This may include hardware-related services (for example, accessing a hard disk drive), creation and execution of new processes, and communication with integral kernel services such as process scheduling. System calls provide an essential interface between a process and the operating system." ;
    ns1:executes ns1:Subroutine ;
    ns1:synonym "syscall" ;
    rdfs:isDefinedBy <http://dbpedia.org/resource/System_call> ;
    rdfs:subClassOf [ ],
        ns1:DigitalInformationBearer .

ns1:File a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "File" ;
    ns1:contains ns1:FileSection ;
    ns1:definition "A file maintained in computer-readable form." ;
    ns1:may-contain ns1:File,
        ns1:URL ;
    rdfs:seeAlso <http://wordnet-rdf.princeton.edu/id/06521201-n> ;
    rdfs:subClassOf [ ],
        [ ],
        [ ],
        ns1:Resource .

ns1:DigitalInformationBearer a owl:Class ;
    rdfs:label "Digital Information Bearer" ;
    rdfs:subClassOf ns1:DigitalArtifact .

ns1:PersistenceTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Persistence Technique" ;
    ns1:enables ns1:TA0003 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .

ns1:DefenseEvasionTechnique a owl:Class,
        owl:NamedIndividual ;
    rdfs:label "Defense Evasion Technique" ;
    ns1:enables ns1:TA0005 ;
    rdfs:subClassOf [ ],
        ns1:ATTACKEnterpriseTechnique,
        ns1:OffensiveTechnique .
